{"version":3,"sources":["components/Player/CustomSlider.js","components/Player/ComingNext/NextListItem.js","components/Player/ComingNext/ComingNext.js","components/Player/Player.js"],"names":["connect","state","componentState","currentSong","audioElement","props","Dialog","react_default","a","createElement","Fragment","_React$useState","React","useState","_React$useState2","Object","slicedToArray","scrubbing","setScrubbing","handleScrubbing","_x","_handleScrubbing","apply","this","arguments","asyncToGenerator","regenerator_default","mark","_callee2","v","wrap","_context2","prev","next","isFinite","currentTime","store","dispatch","setCurrentSongState","getState","videoElement","reOpenDialog","playList","stop","useEffect","setInterval","paused","Slider","className","defaultValue","value","min","color","max","duration","valueLabelDisplay","thumbColorPrimary","onChangeCommitted","_ref","_callee","x","_context","abrupt","_x2","_x3","useStyles","makeStyles","theme","inline","display","NextListItem","classes","ListItem","alignItems","currentIndex","keyIndex","onClick","ListItemAvatar","Avatar","alt","title","src","image","ListItemText","primary","secondary","Typography","component","variant","concat","channelTitle","defaultProps","root","width","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","ComingNext","list","setList","_React$useState3","AutoPlaySwitch","_React$useState4","autoPlaySwitch","setAutoPlaySwitch","listItems","items","map","index","ComingNext_NextListItem","key","snippet","thumbnails","high","url","listItemsWithDividers","forEach","item","push","undefined","Divider","Accordion","square","AccordionSummary","expandIcon","ExpandMore","aria-controls","id","style","justifyContent","LibraryMusic","Switch","checked","onChange","event","defineProperty","target","name","AccordionDetails","maxHeight","overflowY","List","Transition","forwardRef","ref","Slide","assign","direction","Player","hidden","open","setOpen","IconButton","colorSecondary","pauseAudio","Pause","button","setButton","_React$useState5","backgroundColor","loop","setLooping","Loop","_React$useState6","looping","_React$useState7","_React$useState8","downloadButton","setDownloadButton","_useSnackbar","useSnackbar","enqueueSnackbar","handleClose","closeSnackbar","addToReduxState","ReOpen","AppState","MiniPlayer","_addToHistory","saveToHistory","videoId","tags","thumbnail","rating","playAudio","play","downloadAudio","videoID","downloadSong","then","pause","PlayCircleOutline","SkipSong","data","video","getSong","setTimeout","changes","uri","e","console","log","artist","artwork","sizes","type","navigator","mediaSession","metadata","window","MediaMetadata","album","setActionHandler","addToHistory","isOfflineAvailable","Done","GetApp","fullScreen","onClose","TransitionComponent","AppBar","Toolbar","edge","aria-label","ArrowBack","opacity","flex","height","position","top","left","transform","bottom","Player_CustomSlider","SkipPrevious","disabled","SkipNext","Player_ComingNext_ComingNext"],"mappings":"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","file":"static/js/7.1d7db977.chunk.js","sourcesContent":["import React, {useEffect} from \"react\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport store from \"../../Redux/store/store\";\r\nimport {setCurrentSongState} from \"../../Redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst CustomSlider = (props) => {\r\n    if (!props.componentState.Dialog) return <></>;\r\n    const [scrubbing, setScrubbing] = React.useState(0);\r\n\r\n    useEffect(() => {\r\n        if (props.componentState.Dialog) {\r\n            setInterval(() => !props.audioElement.paused && props.componentState.Dialog ? setScrubbing(props.audioElement.currentTime) : null, 1000);\r\n        }\r\n    }, []);\r\n\r\n    async function handleScrubbing(v) {\r\n        if (isFinite(v)) {\r\n            props.audioElement.currentTime = v;\r\n            // Update Redux State\r\n            store.dispatch(setCurrentSongState(\r\n                props.audioElement,\r\n                store.getState().currentSong.videoElement,\r\n                store.getState().currentSong.componentState,\r\n                store.getState().currentSong.reOpenDialog,\r\n                store.getState().currentSong.playList));\r\n        }\r\n    }\r\n\r\n    return (<Slider\r\n        className={'container PlayerSlider'}\r\n        defaultValue={0}\r\n        value={scrubbing}\r\n        min={0.0}\r\n        color={'primary.player.slider'}\r\n        max={props.audioElement.duration}\r\n        valueLabelDisplay=\"auto\"\r\n        thumbColorPrimary={'#000'}\r\n        onChangeCommitted={async (v, x) => handleScrubbing(x)}\r\n    />);\r\n};\r\nconst mapStateToProps = state => ({\r\n    componentState: state.currentSong.componentState,\r\n    audioElement: state.currentSong.audioElement,\r\n});\r\nexport default connect(mapStateToProps)(CustomSlider);\r\n","import React from 'react';\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles((theme) => ({\n    inline: {\n        display: 'inline',\n    },\n}));\nconst NextListItem = (props) => {\n\n    const classes = useStyles();\n    return (\n        <ListItem alignItems=\"flex-start\" className={props.currentIndex === props.keyIndex ? 'bg-light p-0' : 'p-0'}\n                  onClick={props.onClick}>\n            <ListItemAvatar>\n                <Avatar alt={props.title} src={props.image}/>\n            </ListItemAvatar>\n            <ListItemText\n                className={'text-truncate'}\n                primary={props.title}\n                secondary={\n                    <React.Fragment>\n                        <Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            className={`${classes.inline} text-truncate`}\n                            color=\"textPrimary\"\n                        >\n                            <div className={'text-truncate'}>{props.channelTitle}</div>\n                        </Typography>\n                    </React.Fragment>\n                }\n            />\n        </ListItem>)\n};\n\nNextListItem.propTypes = {};\n\nNextListItem.defaultProps = {};\n\nexport default NextListItem;\n","import React, {useEffect} from 'react';\nimport './ComingNext.css';\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport {ExpandMore, LibraryMusic} from \"@material-ui/icons\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {connect} from \"react-redux\";\nimport Divider from \"@material-ui/core/Divider\";\nimport NextListItem from \"./NextListItem\";\nimport List from \"@material-ui/core/List\";\nimport Switch from \"@material-ui/core/Switch\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        fontWeight: theme.typography.fontWeightRegular,\n    },\n}));\nconst ComingNext = (props) => {\n    const classes = useStyles();\n    const [list, setList] = React.useState(<div/>);\n    const [autoPlaySwitch, setAutoPlaySwitch] = React.useState({\n        AutoPlaySwitch: false,\n    });\n    const handleSwitch = (event) => {\n        setAutoPlaySwitch({[event.target.name]: event.target.checked});\n    };\n\n    function createList() {\n        setList(() => {\n            const array = [];\n            const listItems = props.playList.list.items.map((value, index) => {\n                array.push(<NextListItem currentIndex={index} keyIndex={props.playList.index} key={index}\n                                         title={value.snippet.title} channelTitle={value.snippet.channelTitle}\n                                         image={value.snippet.thumbnails.high.url}/>);\n                return <NextListItem currentIndex={index} keyIndex={props.playList.index} key={index}\n                                     title={value.snippet.title} channelTitle={value.snippet.channelTitle}\n                                     image={value.snippet.thumbnails.high.url}/>;\n            });\n            const listItemsWithDividers = [];\n            listItems.forEach((item, index) => {\n                listItemsWithDividers.push(item);\n                if (listItems[index + 1] !== undefined) {\n                    listItemsWithDividers.push(<Divider variant=\"inset\" component=\"li\"/>)\n                }\n            });\n            return listItemsWithDividers;\n        });\n    }\n\n    useEffect(() => {\n        setList(() => {\n            const listItems = props.playList.list.items.map((value, index) => {\n                return <NextListItem currentIndex={index} keyIndex={props.playList.index} key={index}\n                                     title={value.snippet.title} channelTitle={value.snippet.channelTitle}\n                                     image={value.snippet.thumbnails.high.url}/>;\n            });\n            const listItemsWithDividers = [];\n            listItems.forEach((item, index) => {\n                listItemsWithDividers.push(item);\n                if (listItems[index + 1] !== undefined) {\n                    listItemsWithDividers.push(<Divider variant=\"inset\" component=\"li\"/>)\n                }\n            });\n            return listItemsWithDividers;\n        });\n    }, []);\n// myAudio.addEventListener(\"ended\", function(){\n//      myAudio.currentTime = 0;\n//      console.log(\"ended\");\n// });\n    return (<div className=\"ComingNext\">\n            <Accordion square={true}>\n                <AccordionSummary\n                    expandIcon={<ExpandMore/>}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\">\n                    <div className={'d-inline-flex'} style={{justifyContent: 'space-around'}}>\n                        <LibraryMusic/>\n                        <Typography className={`${classes.heading}`}>Coming Next</Typography>\n                        <Switch\n                            checked={autoPlaySwitch}\n                            onChange={handleSwitch}\n                            name=\"AutoPlaySwitch\"\n                            color=\"primary\"\n                            className={'d-none'}\n                        />\n                    </div>\n                </AccordionSummary>\n                <AccordionDetails style={{maxHeight:\"90vh\",overflowY:\"scroll\"}}>\n                    <List className={'text-truncate'} style={{maxHeight:\"80vh\",overflowY:\"scroll\"}}>\n                        {list}\n                    </List>\n                </AccordionDetails>\n            </Accordion>\n        </div>\n    );\n};\n\nComingNext.propTypes = {};\n\nComingNext.defaultProps = {};\n\nconst mapStateToProps = state => ({\n    componentState: state.currentSong.componentState,\n    audioElement: state.currentSong.audioElement,\n    videoElement: state.currentSong.videoElement,\n    playList: state.currentSong.playList\n});\nexport default connect(mapStateToProps)(ComingNext);\n\n","import React, {useEffect} from 'react';\nimport './Player.css';\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {ArrowBack, Done, GetApp, Loop, Pause, PlayCircleOutline, SkipNext, SkipPrevious} from \"@material-ui/icons\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {downloadSong, getSong, isOfflineAvailable, saveToHistory} from \"../../functions/songs\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport * as PropTypes from \"prop-types\";\nimport CustomSlider from \"./CustomSlider\";\nimport {setCurrentSongState} from \"../../Redux/actions/actions\";\nimport store from \"../../Redux/store/store\";\nimport {connect} from \"react-redux\";\nimport {useSnackbar} from 'notistack';\nimport ComingNext from \"./ComingNext/ComingNext\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\nconst MiniPlayerTransition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"down\" ref={ref} {...props} />;\n});\n\nconst Player = (props) => {\n    if (props.hidden) {\n        return <></>;\n    }\n\n\n    const [open, setOpen] = React.useState(store.getState().currentSong.componentState.Dialog);\n    const [button, setButton] = React.useState(<IconButton color={'#60B18A'} colorSecondary={'#60B18A'}\n                                                           onClick={pauseAudio}><Pause color={'#fff'}/></IconButton>);\n    const [looping, setLooping] = React.useState(<IconButton color={\"primary.player.invertButtons.main\"} style={{backgroundColor: \"primary.player.invertButtons.main\"}} onClick={() => {\n        audioElement.loop = true;\n        setLooping(<IconButton color={\"primary.player.invertButtons.invert\"} onClick={() => {\n            audioElement.loop = false\n        }} style={{backgroundColor: \"primary.player.invertButtons.invert\"}}><Loop/></IconButton>)\n    }}><Loop/></IconButton>);\n    let audioElement = props.audioElement;\n    const [downloadButton, setDownloadButton] = React.useState(<div/>);\n    const {enqueueSnackbar, closeSnackbar} = useSnackbar();\n\n    const handleClose = () => {\n        addToReduxState([false, true]);\n        setOpen(false);\n    };\n\n    const ReOpen = () => {\n        addToReduxState([true, false]);\n        setOpen(true);\n    };\n\n    function addToReduxState(AppState) {\n        if (!AppState) AppState = [store.getState().currentSong.componentState.Dialog, store.getState().currentSong.componentState.MiniPlayer];\n        store.dispatch(setCurrentSongState(audioElement, props.videoElement, {\n            Dialog: AppState[0],\n            MiniPlayer: AppState[1]\n        }, ReOpen, {index: props.playList.index, list: props.playList.list}));\n    }\n\n    async function addToHistory() {\n        saveToHistory({\n            videoId: props.videoElement.id,\n            title: props.videoElement.snippet.title,\n            channelTitle: props.videoElement.snippet.channelTitle,\n            tags: props.videoElement.snippet.tags,\n            thumbnail: props.videoElement.snippet.thumbnails.high.url,\n            rating: 0\n        });\n    }\n\n    function playAudio() {\n        audioElement.play();\n        setButton(<IconButton onClick={pauseAudio}><Pause\n            color={'#fff'}/></IconButton>);\n    }\n\n    function downloadAudio() {\n        let videoID = '';\n        if (typeof props.videoElement.id === 'object') videoID = props.videoElement.id.videoId;\n        if (typeof props.videoElement.id === 'string') videoID = props.videoElement.id;\n\n        downloadSong({\n            videoId: videoID,\n            rating: 0,\n            title: props.videoElement.snippet.title,\n            channelTitle: props.videoElement.snippet.channelTitle,\n            tags: props.videoElement.snippet.tags,\n            videoElement: props.videoElement\n        }).then(() => {\n            enqueueSnackbar('Download Complete');\n        });\n        enqueueSnackbar('Download Started');\n    }\n\n    function HideOnScroll(props) {\n        const {children, window} = props;\n        const trigger = useScrollTrigger({target: window ? window() : undefined});\n        return (\n            <Slide appear={false} direction=\"down\" in={!trigger}>\n                {children}\n            </Slide>\n        );\n    }\n\n    HideOnScroll.propTypes = {\n        children: PropTypes.element.isRequired,\n        /**\n         * Injected by the documentation to work in an iframe.\n         * You won't need it on your project.\n         */\n        window: PropTypes.func,\n    };\n\n    function pauseAudio() {\n        audioElement.pause();\n        setButton(<IconButton className={'PlayerPlayPauseBtn'} onClick={playAudio}><PlayCircleOutline\n            color={'#fff'}/></IconButton>);\n    }\n\n    function addMediaSession(data) {\n        if ('mediaSession' in navigator) {\n            navigator.mediaSession.metadata = new window.MediaMetadata({\n                title: data.title,\n                artist: data.artist,\n                album: data.album,\n                artwork: data.artwork\n            });\n            navigator.mediaSession.setActionHandler('play', function () {\n                playAudio();\n            });\n            navigator.mediaSession.setActionHandler('pause', function () {\n                pauseAudio()\n            });\n        }\n    }\n\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (audioElement.paused) {\n                audioElement.play();\n                addMediaSession({\n                    artist: props.videoElement.channelTitle,\n                    title: props.videoElement.title,\n                    artwork: [{\n                        src: props.videoElement.snippet.thumbnails.high.url,\n                        sizes: '96x96',\n                        type: 'image/png'\n                    }]\n                });\n                addToHistory();\n                addToReduxState([true, false]);\n                let videoID = '';\n                if (typeof props.videoElement.id === 'object') videoID = props.videoElement.id.videoId;\n                if (typeof props.videoElement.id === 'string') videoID = props.videoElement.id;\n\n                isOfflineAvailable(videoID).then((v) => {\n                    setDownloadButton(v ? <IconButton><Done/></IconButton> :\n                        <IconButton onClick={downloadAudio}><GetApp/></IconButton>);\n                    console.log(v)\n                });\n            }\n        }, 150)\n    }, []);\n    function SkipSong(data) {\n        let videoID = '';\n        if (typeof data.video.id === 'object') videoID = data.video.id.videoId;\n        if (typeof data.video.id === 'string') videoID = data.video.id;\n        getSong(videoID).then(value => {\n            if (value) {\n                try {\n                    setTimeout(function () {\n                        props.changes({\n                            uri: value,\n                            thumbnail: data.video.snippet.thumbnails.high.url,\n                            video: data.video,\n                            list: props.playList.list,\n                            index: data.index\n                        }).then(() => {\n                            audioElement.pause();\n                            audioElement = null;\n                            setOpen(false);\n                            addToReduxState([false, false])\n                        });\n                    }, 100);\n                } catch (e) {\n                    console.log(e);\n                }\n            }\n        });\n    }\n\n    async function handleScrubbing(v) {\n        if (isFinite(v)) {\n            audioElement.currentTime = v;\n            // Update Redux State\n            //store.dispatch(setCurrentSongState(audioElement, store.getState().currentSong.videoElement, {...store.getState().currentSong.componentState}));\n        }\n    }\n    return (\n        <div className=\"Player\">\n            <div className={'container'}>\n                <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n                    <AppBar>\n                        <Toolbar>\n                            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                                <ArrowBack/>\n                            </IconButton>\n                            <Typography variant={'h6'} component={'div'} className={'py-1 text-truncate'}>\n                                {props.videoElement.snippet.title || 'Untitled'}\n                                <Typography variant={'body2'} style={{opacity: '50%'}}>\n                                    {props.videoElement.snippet.channelTitle || 'Unavailable'}\n                                </Typography>\n                            </Typography>\n                            <div style={{flex: '1 1 auto'}}/>\n                            <>\n                                {\n                                    downloadButton\n                                }\n                            </>\n                        </Toolbar>\n                    </AppBar>\n                    <div style={{backgroundColor: 'primary.dark', height: '100%', width: '100%'}}>\n                        <div\n                            className={'ImageCircle rounded-circle thumbnail'}>\n                            <img src={props.videoElement.snippet.thumbnails.high.url}\n                                 className={'image img-fluid rounded-circle border shadow'}\n                                 style={{\n                                     width: '10rem',\n                                     height: '10rem',\n                                     position: 'absolute',\n                                     top: '42%',\n                                     left: '50%',\n                                     transform: 'translate(-50%, -50%)'\n                                 }} alt={'Thumbnail'}/>\n                        </div>\n                        <div id={'waveForm'} style={{width: '100%'}}/>\n                    </div>\n                    <AppBar color=\"primary\" style={{\n                        position: 'fixed',\n                        top: \"auto\",\n                        bottom: 0,\n                        width: '100%',\n                        backgroundColor: 'light'\n                    }} component={'div'}>\n                        <CustomSlider/>\n\n                        {/* Custom SLIDER\n                        <CustomSlider classnames={'container'} getAudioPosition={getAudioPosition}\n                                      audioElement={audioElement} handleScrubbing={handleScrubbing}/> */}\n                        <div className={'container mb-2'} style={{\n                            width: '70%',\n                            display: 'inline-flex',\n                            justifyContent: 'space-around',\n                            transform: 'translate(0%)'\n                        }}>\n                            {looping}\n                            {props.playList.list.items[props.playList.index - 1] ?\n                                <IconButton><SkipPrevious onClick={() => {\n                                    const item = props.playList.list.items[props.playList.index - 1];\n                                    SkipSong({video: item, index: props.playList.index - 1});\n                                }}/></IconButton> : <IconButton disabled={true}><SkipPrevious/></IconButton>}\n                            <div className={'ExpandedPlayButtonContainer'}>\n                                {button}\n                            </div>\n                            {props.playList.list.items[props.playList.index + 1] ? <IconButton onClick={() => {\n                                const item = props.playList.list.items[props.playList.index + 1];\n                                SkipSong({video: item, index: props.playList.index + 1});\n                            }}><SkipNext/></IconButton> : <IconButton disabled={true}><SkipNext/></IconButton>}\n\n                        </div>\n\n                        <ComingNext/>\n                    </AppBar>\n                </Dialog>\n            </div>\n        </div>\n    );\n};\n\nPlayer.propTypes = {};\nPlayer.defaultProps = {};\n\nconst mapStateToProps = state => ({\n    componentState: state.currentSong.componentState,\n    audioElement: state.currentSong.audioElement,\n    videoElement: state.currentSong.videoElement,\n    playList: state.currentSong.playList\n});\nexport default connect(mapStateToProps)(Player);\n/*\n\n                            {props.playList.list.items[props.index - 1] ? <IconButton><SkipPrevious onClick={() => {\n                                const item = props.playList.list.items[props.playList.index - 1];\n                                SkipSong({video: item, index: props.playList.index - 1});\n                            }}/></IconButton> : <IconButton disabled={true}><SkipPrevious/></IconButton>}\n                            <div className={'ExpandedPlayButtonContainer'}>\n                                {button}\n                            </div>\n                            {props.playList.list.items[props.index + 1] ? <IconButton onClick={() => {\n                                const item = props.playList.list.items[props.playList.index + 1];\n                                SkipSong({video: item, index: props.playList.index + 1});\n                            }}><SkipNext/></IconButton> : <IconButton disabled={true}><SkipNext/></IconButton>}\n\n\n                            <Slider\n                                defaultValue={1.0}\n                                aria-labelledby=\"discrete-slider-small-steps\"\n                                step={0.001}\n                                marks\n                                min={0.0}\n                                max={1.0}\n                                getAriaValueText={handleVolume}\n                                valueLabelDisplay=\"auto\"\n                            />\n */\n"],"sourceRoot":""}