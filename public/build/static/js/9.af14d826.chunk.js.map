{
  "version": 3,
  "sources": [
    "../node_modules/@material-ui/icons/esm/GetApp.js",
    "../node_modules/@material-ui/core/esm/BottomNavigationAction/BottomNavigationAction.js",
    "../node_modules/@material-ui/icons/esm/Home.js",
    "../node_modules/@material-ui/icons/esm/History.js",
    "../node_modules/@material-ui/icons/esm/Favorite.js",
    "../node_modules/@material-ui/core/esm/BottomNavigation/BottomNavigation.js",
    "components/CustomBottomNavigation/CustomBottomNavigation.js"
  ],
  "names": [
    "react__WEBPACK_IMPORTED_MODULE_0__",
    "__webpack_require__",
    "react__WEBPACK_IMPORTED_MODULE_0___default",
    "n",
    "_utils_createSvgIcon__WEBPACK_IMPORTED_MODULE_1__",
    "__webpack_exports__",
    "Object",
    "a",
    "createElement",
    "d",
    "BottomNavigationAction_BottomNavigationAction",
    "react",
    "props",
    "ref",
    "classes",
    "className",
    "icon",
    "label",
    "onChange",
    "onClick",
    "selected",
    "showLabel",
    "value",
    "other",
    "objectWithoutProperties",
    "ButtonBase",
    "esm_extends",
    "clsx_m",
    "root",
    "iconOnly",
    "focusRipple",
    "event",
    "wrapper",
    "esm_BottomNavigationAction_BottomNavigationAction",
    "withStyles",
    "theme",
    "transition",
    "transitions",
    "create",
    "duration",
    "short",
    "padding",
    "minWidth",
    "maxWidth",
    "color",
    "palette",
    "text",
    "secondary",
    "flex",
    "&$iconOnly",
    "paddingTop",
    "&$selected",
    "primary",
    "main",
    "display",
    "alignItems",
    "justifyContent",
    "width",
    "flexDirection",
    "fontFamily",
    "typography",
    "fontSize",
    "pxToRem",
    "opacity",
    "transitionDelay",
    "name",
    "Home",
    "createSvgIcon",
    "react_default",
    "History",
    "Favorite",
    "BottomNavigation_BottomNavigation",
    "children",
    "_props$component",
    "component",
    "Component",
    "_props$showLabels",
    "showLabels",
    "map",
    "child",
    "childIndex",
    "childValue",
    "undefined",
    "esm_BottomNavigation_BottomNavigation",
    "height",
    "backgroundColor",
    "background",
    "paper",
    "useStyles",
    "makeStyles",
    "CustomBottomNavigation",
    "_React$useState",
    "React",
    "useState",
    "_React$useState2",
    "slicedToArray",
    "setValue",
    "Fragment",
    "AppBar",
    "style",
    "position",
    "top",
    "bottom",
    "newValue",
    "textDecoration",
    "Link",
    "to",
    "GetApp",
    "defaultProps"
  ],
  "mappings": "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",
  "file": "static/js/9.af14d826.chunk.js",
  "sourcesContent": [
    "import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"\n}), 'GetApp');",
    "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport unsupportedProp from '../utils/unsupportedProp';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      transition: theme.transitions.create(['color', 'padding-top'], {\n        duration: theme.transitions.duration.short\n      }),\n      padding: '6px 12px 8px',\n      minWidth: 80,\n      maxWidth: 168,\n      color: theme.palette.text.secondary,\n      flex: '1',\n      '&$iconOnly': {\n        paddingTop: 16\n      },\n      '&$selected': {\n        paddingTop: 6,\n        color: theme.palette.primary.main\n      }\n    },\n\n    /* Pseudo-class applied to the root element if selected. */\n    selected: {},\n\n    /* Pseudo-class applied to the root element if `showLabel={false}` and not selected. */\n    iconOnly: {},\n\n    /* Styles applied to the span element that wraps the icon and label. */\n    wrapper: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '100%',\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the label's span element. */\n    label: {\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(12),\n      opacity: 1,\n      transition: 'font-size 0.2s, opacity 0.2s',\n      transitionDelay: '0.1s',\n      '&$iconOnly': {\n        opacity: 0,\n        transitionDelay: '0s'\n      },\n      '&$selected': {\n        fontSize: theme.typography.pxToRem(14)\n      }\n    }\n  };\n};\nvar BottomNavigationAction = /*#__PURE__*/React.forwardRef(function BottomNavigationAction(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      icon = props.icon,\n      label = props.label,\n      onChange = props.onChange,\n      onClick = props.onClick,\n      selected = props.selected,\n      showLabel = props.showLabel,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"icon\", \"label\", \"onChange\", \"onClick\", \"selected\", \"showLabel\", \"value\"]);\n\n  var handleChange = function handleChange(event) {\n    if (onChange) {\n      onChange(event, value);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    ref: ref,\n    className: clsx(classes.root, className, selected ? classes.selected : !showLabel && classes.iconOnly),\n    focusRipple: true,\n    onClick: handleChange\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.wrapper\n  }, icon, /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.label, selected ? classes.selected : !showLabel && classes.iconOnly)\n  }, label)));\n});\nprocess.env.NODE_ENV !== \"production\" ? BottomNavigationAction.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * This prop isn't supported.\n   * Use the `component` prop if you need to change the children structure.\n   */\n  children: unsupportedProp,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon element.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * If `true`, the `BottomNavigationAction` will show its label.\n   * By default, only the selected `BottomNavigationAction`\n   * inside `BottomNavigation` will show its label.\n   */\n  showLabel: PropTypes.bool,\n\n  /**\n   * You can provide your own value. Otherwise, we fallback to the child position index.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBottomNavigationAction'\n})(BottomNavigationAction);",
    "import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\"\n}), 'Home');",
    "import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M13 3c-4.97 0-9 4.03-9 9H1l3.89 3.89.07.14L9 12H6c0-3.87 3.13-7 7-7s7 3.13 7 7-3.13 7-7 7c-1.93 0-3.68-.79-4.94-2.06l-1.42 1.42C8.27 19.99 10.51 21 13 21c4.97 0 9-4.03 9-9s-4.03-9-9-9zm-1 5v5l4.28 2.54.72-1.21-3.5-2.08V8H12z\"\n}), 'History');",
    "import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"\n}), 'Favorite');",
    "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      justifyContent: 'center',\n      height: 56,\n      backgroundColor: theme.palette.background.paper\n    }\n  };\n};\nvar BottomNavigation = /*#__PURE__*/React.forwardRef(function BottomNavigation(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      onChange = props.onChange,\n      _props$showLabels = props.showLabels,\n      showLabels = _props$showLabels === void 0 ? false : _props$showLabels,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"onChange\", \"showLabels\", \"value\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), React.Children.map(children, function (child, childIndex) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The BottomNavigation component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    var childValue = child.props.value === undefined ? childIndex : child.props.value;\n    return /*#__PURE__*/React.cloneElement(child, {\n      selected: childValue === value,\n      showLabel: child.props.showLabel !== undefined ? child.props.showLabel : showLabels,\n      value: childValue,\n      onChange: onChange\n    });\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? BottomNavigation.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {any} value We default to the index of the child.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, all `BottomNavigationAction`s will show their labels.\n   * By default, only the selected `BottomNavigationAction` will show its label.\n   */\n  showLabels: PropTypes.bool,\n\n  /**\n   * The value of the currently selected `BottomNavigationAction`.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBottomNavigation'\n})(BottomNavigation);",
    "import React from 'react';\nimport './CustomBottomNavigation.css';\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport {Favorite, GetApp, History, Home} from \"@material-ui/icons\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport {Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n    },\n});\nconst CustomBottomNavigation = () => {\n    const classes = useStyles();\n    const [value, setValue] = React.useState('recents');\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <>\n            <AppBar color=\"primary\" style={{position: 'fixed', top: \"auto\", bottom: 0, width: '100%',}}\n                    component={'div'}>\n                <BottomNavigation value={value} onChange={handleChange} className={classes.root}>\n                    <BottomNavigationAction style={{textDecoration: \"none\"}} component={Link} to={'/home'} label=\"Home\"\n                                            value=\"recents\" icon={<Home/>}/>\n                    <BottomNavigationAction style={{textDecoration: \"none\"}} component={Link} to={'/downloads'}\n                                            label=\"Downloads\" value=\"downloads\"\n                                            icon={<GetApp/>}/>\n                    <BottomNavigationAction style={{textDecoration: \"none\"}} component={Link} to={'/history'}\n                                            label=\"History\" value=\"history\"\n                                            icon={<History/>}/>\n                    <BottomNavigationAction style={{textDecoration: \"none\"}} component={Link} to={'/liked'}\n                                            label=\"Liked\" value=\"favorites\"\n                                            icon={<Favorite/>}/>\n                </BottomNavigation>\n            </AppBar>\n        </>\n    );\n};\n\nCustomBottomNavigation.propTypes = {};\n\nCustomBottomNavigation.defaultProps = {};\n\nexport default CustomBottomNavigation;\n"
  ],
  "sourceRoot": ""
}
