{"version":3,"sources":["components/FeedBack/FeedBack.js","components/Settings/Settings.js"],"names":["pure","_React$useState","React","useState","_React$useState2","Object","slicedToArray","dialogVisible","setDialogVisible","_useSnackbar","useSnackbar","enqueueSnackbar","closeSnackbar","react_default","a","createElement","Fragment","Tooltip","title","arrow","IconButton","onClick","Feedback_default","dist","open","onClose","onSubmit","Settings","props","_React$useState3","localStorage","getItem","storageIndex","castEnabled","JSON","parse","_React$useState4","_React$useState5","casting","checkedB","_React$useState6","state","setState","className","CustomAppBar_lazy","List","subheader","ListSubheader","style","display","justifyContent","userData","Avatar","alt","atob","username","src","account_image","BrokenImage","ListItemText","id","primary","concat","Divider","ListItem","ListItemIcon","Brightness4","ListItemSecondaryAction","Switch","edge","onChange","handleTheme","checked","inputProps","aria-labelledby","Cast","e","event","setItem","objectSpread","defineProperty","target","name","FeedBack","defaultProps"],"mappings":"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","file":"static/js/26.9b938c05.chunk.js","sourcesContent":["import React from \"react\";\nimport {IconButton, Tooltip} from \"@material-ui/core\";\nimport FeedbackIcon from \"@material-ui/icons/Feedback\";\nimport {FeedbackDialog} from \"mui-feedback-dialog\";\nimport {useSnackbar} from \"notistack\";\nimport {pure} from \"recompose\";\n\n\nconst FeedbackButton = () => {\n    const [dialogVisible, setDialogVisible] = React.useState(false);\n    const {enqueueSnackbar, closeSnackbar} = useSnackbar();\n\n    return <React.Fragment>\n        <Tooltip title='Send Feedback' arrow>\n            <IconButton onClick={() => setDialogVisible(true)}>\n                <FeedbackIcon/>\n            </IconButton>\n        </Tooltip>\n        <FeedbackDialog\n            open={dialogVisible}\n            onClose={() => setDialogVisible(false)}\n            onSubmit={() => {\n                enqueueSnackbar('FeedBack Sent!, We will get back to you soon');\n            }\n            }/>\n    </React.Fragment>\n};\n\nexport default pure(FeedbackButton);\n","import React from \"react\";\nimport \"./Settings.css\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Switch from \"@material-ui/core/Switch\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport {Brightness4, BrokenImage, Cast} from \"@material-ui/icons\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport CustomAppBar from \"../CustomAppBar/CustomAppBar.lazy\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Divider from \"@material-ui/core/Divider\";\nimport FeedbackButton from \"../FeedBack/FeedBack\";\nimport {storageIndex} from \"../../functions/Helper/storageIndex\";\nimport {pure} from \"recompose\";\n\nconst Settings = (props) => {\n\tconst [checked, setChecked] = React.useState([\"darkmode\", \"casting\"]);\n\tconst [casting, setCasting] = React.useState(localStorage.getItem(storageIndex.castEnabled) === null ? false : JSON.parse(localStorage.getItem(storageIndex.castEnabled)));\n\tconst [state, setState] = React.useState({\n\t\tcasting: localStorage.getItem(storageIndex.castEnabled) === null ? false : JSON.parse(localStorage.getItem(storageIndex.castEnabled)),\n\t\tcheckedB: true,\n\t});\n\tconst handleToggle = (value) => () => {\n\t\tconst currentIndex = checked.indexOf(value);\n\t\tconst newChecked = [...checked];\n\n\t\tif (currentIndex === -1) {\n\t\t\tnewChecked.push(value);\n\t\t} else {\n\t\t\tnewChecked.splice(currentIndex, 1);\n\t\t}\n\t\tsetChecked(newChecked);\n\t};\n\tconst handleChange = (event) => {\n\t\tsetState({...state, [event.target.name]: !event.target.checked});\n\t};\n\treturn (\n\t\t<div className=\"Settings\">\n\t\t\t<CustomAppBar title={\"Settings\"}/>\n\t\t\t<List className={\"mt-5 text-left\"} subheader={<ListSubheader>Settings</ListSubheader>}>\n\t\t\t\t<div style={{display: \"inline-flex\", justifyContent: \"center\"}} className={\"w-100\"}>\n\t\t\t\t\t{localStorage.getItem(storageIndex.userData) ?\n\t\t\t\t\t\t<Avatar alt={JSON.parse(atob(localStorage.getItem(storageIndex.userData))).username}\n\t\t\t\t\t\t\t\tsrc={JSON.parse(atob(localStorage.getItem(storageIndex.userData))).account_image}/> :\n\t\t\t\t\t\t<Avatar src={<BrokenImage/>}/>}\n\t\t\t\t</div>\n\t\t\t\t<div className={\"text-center\"}>\n\t\t\t\t\t<ListItemText id=\"switch-list-label-wifi\"\n\t\t\t\t\t\t\t\t  primary={`Welcome ${localStorage.getItem(storageIndex.userData) === null ? \"User\" : JSON.parse(atob(localStorage.getItem(storageIndex.userData))).username}`}/>\n\t\t\t\t</div>\n\t\t\t\t<Divider/>\n\t\t\t\t<ListItem>\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<Brightness4/>\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText id=\"switch-list-label-wifi\" primary=\"Dark Mode\"/>\n\t\t\t\t\t<ListItemSecondaryAction>\n\t\t\t\t\t\t<Switch\n\t\t\t\t\t\t\tedge=\"end\"\n\t\t\t\t\t\t\tonChange={props.handleTheme}\n\t\t\t\t\t\t\tchecked={localStorage.getItem(\"darkmode\") === null ? false : JSON.parse(localStorage.getItem(\"darkmode\"))}\n\t\t\t\t\t\t\tinputProps={{\"aria-labelledby\": \"switch-list-label-wifi\"}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ListItemSecondaryAction>\n\t\t\t\t</ListItem>\n\t\t\t\t<ListItem>\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<Cast/>\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText id=\"switch-list-label-wifi\" primary=\"Song Casting\"/>\n\t\t\t\t\t<ListItemSecondaryAction>\n\t\t\t\t\t\t<Switch\n\t\t\t\t\t\t\tedge=\"end\"\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\tlocalStorage.setItem(storageIndex.castEnabled, !state.casting);\n\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tchecked={state.casting}\n\t\t\t\t\t\t\tinputProps={{\"aria-labelledby\": \"switch-list-label-wifi\"}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ListItemSecondaryAction>\n\t\t\t\t</ListItem>\n\t\t\t\t<ListItem>\n\t\t\t\t\t<ListItemText id=\"switch-list-label-bluetooth\" primary=\"Feedback and Help\"/>\n\t\t\t\t\t<ListItemSecondaryAction>\n\t\t\t\t\t\t<FeedbackButton/>\n\t\t\t\t\t</ListItemSecondaryAction>\n\t\t\t\t</ListItem>\n\t\t\t</List>\n\t\t</div>\n\t);\n};\n\nSettings.propTypes = {};\n\nSettings.defaultProps = {};\n\nexport default pure(Settings);\n"],"sourceRoot":""}