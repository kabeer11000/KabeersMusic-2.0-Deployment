{"version":3,"sources":["../node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","../node_modules/@material-ui/core/esm/Avatar/Avatar.js","../node_modules/@material-ui/core/esm/Divider/Divider.js","../node_modules/@material-ui/core/esm/ListItemAvatar/ListItemAvatar.js","../node_modules/@material-ui/core/esm/Drawer/Drawer.js","../node_modules/@material-ui/core/esm/SwipeableDrawer/SwipeArea.js","../node_modules/@material-ui/core/esm/SwipeableDrawer/SwipeableDrawer.js"],"names":["Person","Object","createSvgIcon","react","d","Avatar_Avatar","props","ref","alt","childrenProp","children","classes","className","_props$component","component","Component","imgProps","sizes","src","srcSet","_props$variant","variant","other","objectWithoutProperties","loaded","_ref","_React$useState","setLoaded","active","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","esm_extends","img","fallback","clsx_m","root","system","colorDefault","__webpack_exports__","withStyles","theme","position","display","alignItems","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","color","palette","background","default","backgroundColor","type","grey","circle","rounded","shape","square","textAlign","objectFit","textIndent","name","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","clsx__WEBPACK_IMPORTED_MODULE_4__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__","_styles_colorManipulator__WEBPACK_IMPORTED_MODULE_6__","Divider","_props$absolute","absolute","_props$flexItem","flexItem","_props$light","light","_props$orientation","orientation","_props$role","role","undefined","vertical","margin","border","divider","bottom","left","inset","marginLeft","middle","spacing","marginRight","alignSelf","_List_ListContext__WEBPACK_IMPORTED_MODULE_6__","ListItemAvatar","context","alignItemsFlexStart","minWidth","marginTop","isHorizontal","getAnchor","_Modal__WEBPACK_IMPORTED_MODULE_5__","_Backdrop__WEBPACK_IMPORTED_MODULE_6__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_7__","_Slide__WEBPACK_IMPORTED_MODULE_8__","_Paper__WEBPACK_IMPORTED_MODULE_9__","_utils_capitalize__WEBPACK_IMPORTED_MODULE_10__","_styles_transitions__WEBPACK_IMPORTED_MODULE_11__","_styles_useTheme__WEBPACK_IMPORTED_MODULE_12__","oppositeDirection","right","top","anchor","indexOf","direction","defaultTransitionDuration","enter","enteringScreen","exit","leavingScreen","Drawer","_props$anchor","anchorProp","BackdropProps","_props$elevation","elevation","_props$ModalProps","ModalProps","BackdropPropsProp","onClose","_props$open","open","_props$PaperProps","PaperProps","SlideProps","_props$TransitionComp","TransitionComponent","_props$transitionDura","transitionDuration","mounted","current","drawer","paper","concat","docked","slidingDrawer","in","timeout","appear","BackdropComponent","modal","flex","overflowY","flexDirection","zIndex","WebkitOverflowScrolling","outline","paperAnchorLeft","paperAnchorRight","paperAnchorTop","maxHeight","paperAnchorBottom","paperAnchorDockedLeft","borderRight","paperAnchorDockedTop","borderBottom","paperAnchorDockedRight","borderLeft","paperAnchorDockedBottom","borderTop","flip","SwipeArea_SwipeArea","capitalize","style","defineProperty","SwipeableDrawer_SwipeArea","anchorLeft","anchorRight","anchorTop","anchorBottom","nodeThatClaimedTheSwipe","calculateCurrentX","touches","document","body","offsetWidth","pageX","calculateCurrentY","window","innerHeight","clientY","getMaxTranslate","horizontalSwipe","paperInstance","clientWidth","clientHeight","getTranslate","currentTranslate","startLocation","maxTranslate","Math","min","max","iOS","navigator","test","userAgent","transitionDurationDefault","transitions","useEnhancedEffect","SwipeableDrawer_SwipeableDrawer","inProps","useTheme","getThemeProps","_props$disableBackdro","disableBackdropTransition","_props$disableDiscove","disableDiscovery","_props$disableSwipeTo","disableSwipeToOpen","hideBackdrop","_props$hysteresis","hysteresis","_props$minFlingVeloci","minFlingVelocity","ModalPropsProp","onOpen","SwipeAreaProps","_props$swipeAreaWidth","swipeAreaWidth","maybeSwiping","setMaybeSwiping","swipeInstance","isSwiping","swipeAreaRef","backdropRef","paperRef","touchDetected","calculatedDurationRef","setPosition","translate","options","arguments","length","_options$mode","mode","_options$changeTransi","changeTransition","anchorRtl","rtlTranslateMultiplier","transform","drawerStyle","webkitTransform","transition","create","utils","webkitTransition","backdropStyle","opacity","handleBodyTouchEnd","useEventCallback","event","horizontal","changedTouches","startX","startY","translateRatio","abs","velocity","handleBodyTouchMove","currentX","currentY","contains","target","nativeHandler","domTreeShapes","start","axisProperties","x","y","some","goingForward","axis","scrollPosition","areNotAtStart","areNotAtEnd","findNativeHandler","element","rootNode","getComputedStyle","getPropertyValue","scrollWidth","scrollHeight","push","parentElement","getDomTreeShapes","dx","dy","cancelable","preventDefault","definitelySwiping","paperHit","lastTranslate","lastTime","performance","now","handleBodyTouchStart","defaultPrevented","muiHandled","doc","ownerDocument","addEventListener","passive","removeEventListener","handleBackdropRef","instance","react_dom","pointerEvents","NoSsr"],"mappings":"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","file":"static/js/2.1728f39f.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = /*#__PURE__*/React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The shape of the avatar.\n   */\n  variant: PropTypes.oneOf(['circle', 'rounded', 'square'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 1,\n      margin: 0,\n      // Reset browser default style.\n      border: 'none',\n      flexShrink: 0,\n      backgroundColor: theme.palette.divider\n    },\n\n    /* Styles applied to the root element if `absolute={true}`. */\n    absolute: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `variant=\"inset\"`. */\n    inset: {\n      marginLeft: 72\n    },\n\n    /* Styles applied to the root element if `light={true}`. */\n    light: {\n      backgroundColor: fade(theme.palette.divider, 0.08)\n    },\n\n    /* Styles applied to the root element if `variant=\"middle\"`. */\n    middle: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      height: '100%',\n      width: 1\n    },\n\n    /* Styles applied to the root element if `flexItem={true}`. */\n    flexItem: {\n      alignSelf: 'stretch',\n      height: 'auto'\n    }\n  };\n};\nvar Divider = /*#__PURE__*/React.forwardRef(function Divider(props, ref) {\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'hr' : _props$component,\n      _props$flexItem = props.flexItem,\n      flexItem = _props$flexItem === void 0 ? false : _props$flexItem,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$role = props.role,\n      role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutProperties(props, [\"absolute\", \"classes\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'fullWidth' && classes[variant], absolute && classes.absolute, flexItem && classes.flexItem, light && classes.light, orientation === 'vertical' && classes.vertical),\n    role: role,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Absolutely position the element.\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   */\n  flexItem: PropTypes.bool,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The divider orientation.\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'inset', 'middle'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    minWidth: 56,\n    flexShrink: 0\n  },\n\n  /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n  alignItemsFlexStart: {\n    marginTop: 8\n  }\n};\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nvar ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component – normally `Avatar`.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemAvatar'\n})(ListItemAvatar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Modal from '../Modal';\nimport Backdrop from '../Backdrop';\nimport withStyles from '../styles/withStyles';\nimport Slide from '../Slide';\nimport Paper from '../Paper';\nimport capitalize from '../utils/capitalize';\nimport { duration } from '../styles/transitions';\nimport useTheme from '../styles/useTheme';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `variant=\"permanent or persistent\"`. */\n    docked: {\n      flex: '0 0 auto'\n    },\n\n    /* Styles applied to the `Paper` component. */\n    paper: {\n      overflowY: 'auto',\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100%',\n      flex: '1 0 auto',\n      zIndex: theme.zIndex.drawer,\n      WebkitOverflowScrolling: 'touch',\n      // Add iOS momentum scrolling.\n      // temporary style\n      position: 'fixed',\n      top: 0,\n      // We disable the focus ring for mouse, touch and keyboard users.\n      // At some point, it would be better to keep it for keyboard users.\n      // :focus-ring CSS pseudo-class will help.\n      outline: 0\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"left\"`. */\n    paperAnchorLeft: {\n      left: 0,\n      right: 'auto'\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"right\"`. */\n    paperAnchorRight: {\n      left: 'auto',\n      right: 0\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"top\"`. */\n    paperAnchorTop: {\n      top: 0,\n      left: 0,\n      bottom: 'auto',\n      right: 0,\n      height: 'auto',\n      maxHeight: '100%'\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"bottom\"`. */\n    paperAnchorBottom: {\n      top: 'auto',\n      left: 0,\n      bottom: 0,\n      right: 0,\n      height: 'auto',\n      maxHeight: '100%'\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"left\"` and `variant` is not \"temporary\". */\n    paperAnchorDockedLeft: {\n      borderRight: \"1px solid \".concat(theme.palette.divider)\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"top\"` and `variant` is not \"temporary\". */\n    paperAnchorDockedTop: {\n      borderBottom: \"1px solid \".concat(theme.palette.divider)\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"right\"` and `variant` is not \"temporary\". */\n    paperAnchorDockedRight: {\n      borderLeft: \"1px solid \".concat(theme.palette.divider)\n    },\n\n    /* Styles applied to the `Paper` component if `anchor=\"bottom\"` and `variant` is not \"temporary\". */\n    paperAnchorDockedBottom: {\n      borderTop: \"1px solid \".concat(theme.palette.divider)\n    },\n\n    /* Styles applied to the `Modal` component. */\n    modal: {}\n  };\n};\nvar oppositeDirection = {\n  left: 'right',\n  right: 'left',\n  top: 'down',\n  bottom: 'up'\n};\nexport function isHorizontal(anchor) {\n  return ['left', 'right'].indexOf(anchor) !== -1;\n}\nexport function getAnchor(theme, anchor) {\n  return theme.direction === 'rtl' && isHorizontal(anchor) ? oppositeDirection[anchor] : anchor;\n}\nvar defaultTransitionDuration = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * The props of the [Modal](/api/modal/) component are available\n * when `variant=\"temporary\"` is set.\n */\n\nvar Drawer = /*#__PURE__*/React.forwardRef(function Drawer(props, ref) {\n  var _props$anchor = props.anchor,\n      anchorProp = _props$anchor === void 0 ? 'left' : _props$anchor,\n      BackdropProps = props.BackdropProps,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$elevation = props.elevation,\n      elevation = _props$elevation === void 0 ? 16 : _props$elevation,\n      _props$ModalProps = props.ModalProps;\n  _props$ModalProps = _props$ModalProps === void 0 ? {} : _props$ModalProps;\n\n  var BackdropPropsProp = _props$ModalProps.BackdropProps,\n      ModalProps = _objectWithoutProperties(_props$ModalProps, [\"BackdropProps\"]),\n      onClose = props.onClose,\n      _props$open = props.open,\n      open = _props$open === void 0 ? false : _props$open,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      SlideProps = props.SlideProps,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Slide : _props$TransitionComp,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? defaultTransitionDuration : _props$transitionDura,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'temporary' : _props$variant,\n      other = _objectWithoutProperties(props, [\"anchor\", \"BackdropProps\", \"children\", \"classes\", \"className\", \"elevation\", \"ModalProps\", \"onClose\", \"open\", \"PaperProps\", \"SlideProps\", \"TransitionComponent\", \"transitionDuration\", \"variant\"]);\n\n  var theme = useTheme(); // Let's assume that the Drawer will always be rendered on user space.\n  // We use this state is order to skip the appear transition during the\n  // initial mount of the component.\n\n  var mounted = React.useRef(false);\n  React.useEffect(function () {\n    mounted.current = true;\n  }, []);\n  var anchor = getAnchor(theme, anchorProp);\n  var drawer = /*#__PURE__*/React.createElement(Paper, _extends({\n    elevation: variant === 'temporary' ? elevation : 0,\n    square: true\n  }, PaperProps, {\n    className: clsx(classes.paper, classes[\"paperAnchor\".concat(capitalize(anchor))], PaperProps.className, variant !== 'temporary' && classes[\"paperAnchorDocked\".concat(capitalize(anchor))])\n  }), children);\n\n  if (variant === 'permanent') {\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: clsx(classes.root, classes.docked, className),\n      ref: ref\n    }, other), drawer);\n  }\n\n  var slidingDrawer = /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    in: open,\n    direction: oppositeDirection[anchor],\n    timeout: transitionDuration,\n    appear: mounted.current\n  }, SlideProps), drawer);\n\n  if (variant === 'persistent') {\n    return /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: clsx(classes.root, classes.docked, className),\n      ref: ref\n    }, other), slidingDrawer);\n  } // variant === temporary\n\n\n  return /*#__PURE__*/React.createElement(Modal, _extends({\n    BackdropProps: _extends({}, BackdropProps, BackdropPropsProp, {\n      transitionDuration: transitionDuration\n    }),\n    BackdropComponent: Backdrop,\n    className: clsx(classes.root, classes.modal, className),\n    open: open,\n    onClose: onClose,\n    ref: ref\n  }, other, ModalProps), slidingDrawer);\n});\nprocess.env.NODE_ENV !== \"production\" ? Drawer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Side from which the drawer will appear.\n   */\n  anchor: PropTypes.oneOf(['bottom', 'left', 'right', 'top']),\n\n  /**\n   * @ignore\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * The contents of the drawer.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The elevation of the drawer.\n   */\n  elevation: PropTypes.number,\n\n  /**\n   * Props applied to the [`Modal`](/api/modal/) element.\n   */\n  ModalProps: PropTypes.object,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * If `true`, the drawer is open.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Props applied to the [`Paper`](/api/paper/) element.\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`Slide`](/api/slide/) element.\n   */\n  SlideProps: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDrawer',\n  flip: false\n})(Drawer);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport { isHorizontal } from '../Drawer/Drawer';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      bottom: 0,\n      zIndex: theme.zIndex.drawer - 1\n    },\n    anchorLeft: {\n      right: 'auto'\n    },\n    anchorRight: {\n      left: 'auto',\n      right: 0\n    },\n    anchorTop: {\n      bottom: 'auto',\n      right: 0\n    },\n    anchorBottom: {\n      top: 'auto',\n      bottom: 0,\n      right: 0\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwipeArea = /*#__PURE__*/React.forwardRef(function SwipeArea(props, ref) {\n  var anchor = props.anchor,\n      classes = props.classes,\n      className = props.className,\n      width = props.width,\n      other = _objectWithoutProperties(props, [\"anchor\", \"classes\", \"className\", \"width\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"anchor\".concat(capitalize(anchor))], className),\n    ref: ref,\n    style: _defineProperty({}, isHorizontal(anchor) ? 'width' : 'height', width)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeArea.propTypes = {\n  /**\n   * Side on which to attach the discovery area.\n   */\n  anchor: PropTypes.oneOf(['left', 'top', 'right', 'bottom']).isRequired,\n\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The width of the left most (or right most) area in pixels where the\n   * drawer can be swiped open from.\n   */\n  width: PropTypes.number.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwipeArea'\n})(SwipeArea);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport { getThemeProps } from '@material-ui/styles';\nimport Drawer, { getAnchor, isHorizontal } from '../Drawer/Drawer';\nimport ownerDocument from '../utils/ownerDocument';\nimport useEventCallback from '../utils/useEventCallback';\nimport { duration } from '../styles/transitions';\nimport useTheme from '../styles/useTheme';\nimport { getTransitionProps } from '../transitions/utils';\nimport NoSsr from '../NoSsr';\nimport SwipeArea from './SwipeArea'; // This value is closed to what browsers are using internally to\n// trigger a native scroll.\n\nvar UNCERTAINTY_THRESHOLD = 3; // px\n// We can only have one node at the time claiming ownership for handling the swipe.\n// Otherwise, the UX would be confusing.\n// That's why we use a singleton here.\n\nvar nodeThatClaimedTheSwipe = null; // Exported for test purposes.\n\nexport function reset() {\n  nodeThatClaimedTheSwipe = null;\n}\n\nfunction calculateCurrentX(anchor, touches) {\n  return anchor === 'right' ? document.body.offsetWidth - touches[0].pageX : touches[0].pageX;\n}\n\nfunction calculateCurrentY(anchor, touches) {\n  return anchor === 'bottom' ? window.innerHeight - touches[0].clientY : touches[0].clientY;\n}\n\nfunction getMaxTranslate(horizontalSwipe, paperInstance) {\n  return horizontalSwipe ? paperInstance.clientWidth : paperInstance.clientHeight;\n}\n\nfunction getTranslate(currentTranslate, startLocation, open, maxTranslate) {\n  return Math.min(Math.max(open ? startLocation - currentTranslate : maxTranslate + startLocation - currentTranslate, 0), maxTranslate);\n}\n\nfunction getDomTreeShapes(element, rootNode) {\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L129\n  var domTreeShapes = [];\n\n  while (element && element !== rootNode) {\n    var style = window.getComputedStyle(element);\n\n    if ( // Ignore the scroll children if the element is absolute positioned.\n    style.getPropertyValue('position') === 'absolute' || // Ignore the scroll children if the element has an overflowX hidden\n    style.getPropertyValue('overflow-x') === 'hidden') {\n      domTreeShapes = [];\n    } else if (element.clientWidth > 0 && element.scrollWidth > element.clientWidth || element.clientHeight > 0 && element.scrollHeight > element.clientHeight) {\n      // Ignore the nodes that have no width.\n      // Keep elements with a scroll\n      domTreeShapes.push(element);\n    }\n\n    element = element.parentElement;\n  }\n\n  return domTreeShapes;\n}\n\nfunction findNativeHandler(_ref) {\n  var domTreeShapes = _ref.domTreeShapes,\n      start = _ref.start,\n      current = _ref.current,\n      anchor = _ref.anchor; // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L175\n\n  var axisProperties = {\n    scrollPosition: {\n      x: 'scrollLeft',\n      y: 'scrollTop'\n    },\n    scrollLength: {\n      x: 'scrollWidth',\n      y: 'scrollHeight'\n    },\n    clientLength: {\n      x: 'clientWidth',\n      y: 'clientHeight'\n    }\n  };\n  return domTreeShapes.some(function (shape) {\n    // Determine if we are going backward or forward.\n    var goingForward = current >= start;\n\n    if (anchor === 'top' || anchor === 'left') {\n      goingForward = !goingForward;\n    }\n\n    var axis = anchor === 'left' || anchor === 'right' ? 'x' : 'y';\n    var scrollPosition = shape[axisProperties.scrollPosition[axis]];\n    var areNotAtStart = scrollPosition > 0;\n    var areNotAtEnd = scrollPosition + shape[axisProperties.clientLength[axis]] < shape[axisProperties.scrollLength[axis]];\n\n    if (goingForward && areNotAtEnd || !goingForward && areNotAtStart) {\n      return shape;\n    }\n\n    return null;\n  });\n}\n\nvar iOS = typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent);\nvar transitionDurationDefault = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\nvar useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nvar SwipeableDrawer = /*#__PURE__*/React.forwardRef(function SwipeableDrawer(inProps, ref) {\n  var theme = useTheme();\n  var props = getThemeProps({\n    name: 'MuiSwipeableDrawer',\n    props: _extends({}, inProps),\n    theme: theme\n  });\n  var _props$anchor = props.anchor,\n      anchor = _props$anchor === void 0 ? 'left' : _props$anchor,\n      _props$disableBackdro = props.disableBackdropTransition,\n      disableBackdropTransition = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n      _props$disableDiscove = props.disableDiscovery,\n      disableDiscovery = _props$disableDiscove === void 0 ? false : _props$disableDiscove,\n      _props$disableSwipeTo = props.disableSwipeToOpen,\n      disableSwipeToOpen = _props$disableSwipeTo === void 0 ? iOS : _props$disableSwipeTo,\n      hideBackdrop = props.hideBackdrop,\n      _props$hysteresis = props.hysteresis,\n      hysteresis = _props$hysteresis === void 0 ? 0.52 : _props$hysteresis,\n      _props$minFlingVeloci = props.minFlingVelocity,\n      minFlingVelocity = _props$minFlingVeloci === void 0 ? 450 : _props$minFlingVeloci,\n      _props$ModalProps = props.ModalProps;\n  _props$ModalProps = _props$ModalProps === void 0 ? {} : _props$ModalProps;\n\n  var BackdropProps = _props$ModalProps.BackdropProps,\n      ModalPropsProp = _objectWithoutProperties(_props$ModalProps, [\"BackdropProps\"]),\n      onClose = props.onClose,\n      onOpen = props.onOpen,\n      open = props.open,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      SwipeAreaProps = props.SwipeAreaProps,\n      _props$swipeAreaWidth = props.swipeAreaWidth,\n      swipeAreaWidth = _props$swipeAreaWidth === void 0 ? 20 : _props$swipeAreaWidth,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? transitionDurationDefault : _props$transitionDura,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'temporary' : _props$variant,\n      other = _objectWithoutProperties(props, [\"anchor\", \"disableBackdropTransition\", \"disableDiscovery\", \"disableSwipeToOpen\", \"hideBackdrop\", \"hysteresis\", \"minFlingVelocity\", \"ModalProps\", \"onClose\", \"onOpen\", \"open\", \"PaperProps\", \"SwipeAreaProps\", \"swipeAreaWidth\", \"transitionDuration\", \"variant\"]);\n\n  var _React$useState = React.useState(false),\n      maybeSwiping = _React$useState[0],\n      setMaybeSwiping = _React$useState[1];\n\n  var swipeInstance = React.useRef({\n    isSwiping: null\n  });\n  var swipeAreaRef = React.useRef();\n  var backdropRef = React.useRef();\n  var paperRef = React.useRef();\n  var touchDetected = React.useRef(false); // Ref for transition duration based on / to match swipe speed\n\n  var calculatedDurationRef = React.useRef(); // Use a ref so the open value used is always up to date inside useCallback.\n\n  useEnhancedEffect(function () {\n    calculatedDurationRef.current = null;\n  }, [open]);\n  var setPosition = React.useCallback(function (translate) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _options$mode = options.mode,\n        mode = _options$mode === void 0 ? null : _options$mode,\n        _options$changeTransi = options.changeTransition,\n        changeTransition = _options$changeTransi === void 0 ? true : _options$changeTransi;\n    var anchorRtl = getAnchor(theme, anchor);\n    var rtlTranslateMultiplier = ['right', 'bottom'].indexOf(anchorRtl) !== -1 ? 1 : -1;\n    var horizontalSwipe = isHorizontal(anchor);\n    var transform = horizontalSwipe ? \"translate(\".concat(rtlTranslateMultiplier * translate, \"px, 0)\") : \"translate(0, \".concat(rtlTranslateMultiplier * translate, \"px)\");\n    var drawerStyle = paperRef.current.style;\n    drawerStyle.webkitTransform = transform;\n    drawerStyle.transform = transform;\n    var transition = '';\n\n    if (mode) {\n      transition = theme.transitions.create('all', getTransitionProps({\n        timeout: transitionDuration\n      }, {\n        mode: mode\n      }));\n    }\n\n    if (changeTransition) {\n      drawerStyle.webkitTransition = transition;\n      drawerStyle.transition = transition;\n    }\n\n    if (!disableBackdropTransition && !hideBackdrop) {\n      var backdropStyle = backdropRef.current.style;\n      backdropStyle.opacity = 1 - translate / getMaxTranslate(horizontalSwipe, paperRef.current);\n\n      if (changeTransition) {\n        backdropStyle.webkitTransition = transition;\n        backdropStyle.transition = transition;\n      }\n    }\n  }, [anchor, disableBackdropTransition, hideBackdrop, theme, transitionDuration]);\n  var handleBodyTouchEnd = useEventCallback(function (event) {\n    if (!touchDetected.current) {\n      return;\n    }\n\n    nodeThatClaimedTheSwipe = null;\n    touchDetected.current = false;\n    setMaybeSwiping(false); // The swipe wasn't started.\n\n    if (!swipeInstance.current.isSwiping) {\n      swipeInstance.current.isSwiping = null;\n      return;\n    }\n\n    swipeInstance.current.isSwiping = null;\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontal = isHorizontal(anchor);\n    var current;\n\n    if (horizontal) {\n      current = calculateCurrentX(anchorRtl, event.changedTouches);\n    } else {\n      current = calculateCurrentY(anchorRtl, event.changedTouches);\n    }\n\n    var startLocation = horizontal ? swipeInstance.current.startX : swipeInstance.current.startY;\n    var maxTranslate = getMaxTranslate(horizontal, paperRef.current);\n    var currentTranslate = getTranslate(current, startLocation, open, maxTranslate);\n    var translateRatio = currentTranslate / maxTranslate;\n\n    if (Math.abs(swipeInstance.current.velocity) > minFlingVelocity) {\n      // Calculate transition duration to match swipe speed\n      calculatedDurationRef.current = Math.abs((maxTranslate - currentTranslate) / swipeInstance.current.velocity) * 1000;\n    }\n\n    if (open) {\n      if (swipeInstance.current.velocity > minFlingVelocity || translateRatio > hysteresis) {\n        onClose();\n      } else {\n        // Reset the position, the swipe was aborted.\n        setPosition(0, {\n          mode: 'exit'\n        });\n      }\n\n      return;\n    }\n\n    if (swipeInstance.current.velocity < -minFlingVelocity || 1 - translateRatio > hysteresis) {\n      onOpen();\n    } else {\n      // Reset the position, the swipe was aborted.\n      setPosition(getMaxTranslate(horizontal, paperRef.current), {\n        mode: 'enter'\n      });\n    }\n  });\n  var handleBodyTouchMove = useEventCallback(function (event) {\n    // the ref may be null when a parent component updates while swiping\n    if (!paperRef.current || !touchDetected.current) {\n      return;\n    } // We are not supposed to handle this touch move because the swipe was started in a scrollable container in the drawer\n\n\n    if (nodeThatClaimedTheSwipe != null && nodeThatClaimedTheSwipe !== swipeInstance.current) {\n      return;\n    }\n\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontalSwipe = isHorizontal(anchor);\n    var currentX = calculateCurrentX(anchorRtl, event.touches);\n    var currentY = calculateCurrentY(anchorRtl, event.touches);\n\n    if (open && paperRef.current.contains(event.target) && nodeThatClaimedTheSwipe == null) {\n      var domTreeShapes = getDomTreeShapes(event.target, paperRef.current);\n      var nativeHandler = findNativeHandler({\n        domTreeShapes: domTreeShapes,\n        start: horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY,\n        current: horizontalSwipe ? currentX : currentY,\n        anchor: anchor\n      });\n\n      if (nativeHandler) {\n        nodeThatClaimedTheSwipe = nativeHandler;\n        return;\n      }\n\n      nodeThatClaimedTheSwipe = swipeInstance.current;\n    } // We don't know yet.\n\n\n    if (swipeInstance.current.isSwiping == null) {\n      var dx = Math.abs(currentX - swipeInstance.current.startX);\n      var dy = Math.abs(currentY - swipeInstance.current.startY); // We are likely to be swiping, let's prevent the scroll event on iOS.\n\n      if (dx > dy) {\n        if (event.cancelable) {\n          event.preventDefault();\n        }\n      }\n\n      var definitelySwiping = horizontalSwipe ? dx > dy && dx > UNCERTAINTY_THRESHOLD : dy > dx && dy > UNCERTAINTY_THRESHOLD;\n\n      if (definitelySwiping === true || (horizontalSwipe ? dy > UNCERTAINTY_THRESHOLD : dx > UNCERTAINTY_THRESHOLD)) {\n        swipeInstance.current.isSwiping = definitelySwiping;\n\n        if (!definitelySwiping) {\n          handleBodyTouchEnd(event);\n          return;\n        } // Shift the starting point.\n\n\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY; // Compensate for the part of the drawer displayed on touch start.\n\n        if (!disableDiscovery && !open) {\n          if (horizontalSwipe) {\n            swipeInstance.current.startX -= swipeAreaWidth;\n          } else {\n            swipeInstance.current.startY -= swipeAreaWidth;\n          }\n        }\n      }\n    }\n\n    if (!swipeInstance.current.isSwiping) {\n      return;\n    }\n\n    var maxTranslate = getMaxTranslate(horizontalSwipe, paperRef.current);\n    var startLocation = horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY;\n\n    if (open && !swipeInstance.current.paperHit) {\n      startLocation = Math.min(startLocation, maxTranslate);\n    }\n\n    var translate = getTranslate(horizontalSwipe ? currentX : currentY, startLocation, open, maxTranslate);\n\n    if (open) {\n      if (!swipeInstance.current.paperHit) {\n        var paperHit = horizontalSwipe ? currentX < maxTranslate : currentY < maxTranslate;\n\n        if (paperHit) {\n          swipeInstance.current.paperHit = true;\n          swipeInstance.current.startX = currentX;\n          swipeInstance.current.startY = currentY;\n        } else {\n          return;\n        }\n      } else if (translate === 0) {\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY;\n      }\n    }\n\n    if (swipeInstance.current.lastTranslate === null) {\n      swipeInstance.current.lastTranslate = translate;\n      swipeInstance.current.lastTime = performance.now() + 1;\n    }\n\n    var velocity = (translate - swipeInstance.current.lastTranslate) / (performance.now() - swipeInstance.current.lastTime) * 1e3; // Low Pass filter.\n\n    swipeInstance.current.velocity = swipeInstance.current.velocity * 0.4 + velocity * 0.6;\n    swipeInstance.current.lastTranslate = translate;\n    swipeInstance.current.lastTime = performance.now(); // We are swiping, let's prevent the scroll event on iOS.\n\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n\n    setPosition(translate);\n  });\n  var handleBodyTouchStart = useEventCallback(function (event) {\n    // We are not supposed to handle this touch move.\n    // Example of use case: ignore the event if there is a Slider.\n    if (event.defaultPrevented) {\n      return;\n    } // We can only have one node at the time claiming ownership for handling the swipe.\n\n\n    if (event.muiHandled) {\n      return;\n    } // At least one element clogs the drawer interaction zone.\n\n\n    if (open && !backdropRef.current.contains(event.target) && !paperRef.current.contains(event.target)) {\n      return;\n    }\n\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontalSwipe = isHorizontal(anchor);\n    var currentX = calculateCurrentX(anchorRtl, event.touches);\n    var currentY = calculateCurrentY(anchorRtl, event.touches);\n\n    if (!open) {\n      if (disableSwipeToOpen || event.target !== swipeAreaRef.current) {\n        return;\n      }\n\n      if (horizontalSwipe) {\n        if (currentX > swipeAreaWidth) {\n          return;\n        }\n      } else if (currentY > swipeAreaWidth) {\n        return;\n      }\n    }\n\n    event.muiHandled = true;\n    nodeThatClaimedTheSwipe = null;\n    swipeInstance.current.startX = currentX;\n    swipeInstance.current.startY = currentY;\n    setMaybeSwiping(true);\n\n    if (!open && paperRef.current) {\n      // The ref may be null when a parent component updates while swiping.\n      setPosition(getMaxTranslate(horizontalSwipe, paperRef.current) + (disableDiscovery ? 20 : -swipeAreaWidth), {\n        changeTransition: false\n      });\n    }\n\n    swipeInstance.current.velocity = 0;\n    swipeInstance.current.lastTime = null;\n    swipeInstance.current.lastTranslate = null;\n    swipeInstance.current.paperHit = false;\n    touchDetected.current = true;\n  });\n  React.useEffect(function () {\n    if (variant === 'temporary') {\n      var doc = ownerDocument(paperRef.current);\n      doc.addEventListener('touchstart', handleBodyTouchStart);\n      doc.addEventListener('touchmove', handleBodyTouchMove, {\n        passive: false\n      });\n      doc.addEventListener('touchend', handleBodyTouchEnd);\n      return function () {\n        doc.removeEventListener('touchstart', handleBodyTouchStart);\n        doc.removeEventListener('touchmove', handleBodyTouchMove, {\n          passive: false\n        });\n        doc.removeEventListener('touchend', handleBodyTouchEnd);\n      };\n    }\n\n    return undefined;\n  }, [variant, handleBodyTouchStart, handleBodyTouchMove, handleBodyTouchEnd]);\n  React.useEffect(function () {\n    return function () {\n      // We need to release the lock.\n      if (nodeThatClaimedTheSwipe === swipeInstance.current) {\n        nodeThatClaimedTheSwipe = null;\n      }\n    };\n  }, []);\n  React.useEffect(function () {\n    if (!open) {\n      setMaybeSwiping(false);\n    }\n  }, [open]);\n  var handleBackdropRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    backdropRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Drawer, _extends({\n    open: variant === 'temporary' && maybeSwiping ? true : open,\n    variant: variant,\n    ModalProps: _extends({\n      BackdropProps: _extends({}, BackdropProps, {\n        ref: handleBackdropRef\n      })\n    }, ModalPropsProp),\n    PaperProps: _extends({}, PaperProps, {\n      style: _extends({\n        pointerEvents: variant === 'temporary' && !open ? 'none' : ''\n      }, PaperProps.style),\n      ref: paperRef\n    }),\n    anchor: anchor,\n    transitionDuration: calculatedDurationRef.current || transitionDuration,\n    onClose: onClose,\n    ref: ref\n  }, other)), !disableSwipeToOpen && variant === 'temporary' && /*#__PURE__*/React.createElement(NoSsr, null, /*#__PURE__*/React.createElement(SwipeArea, _extends({\n    anchor: anchor,\n    ref: swipeAreaRef,\n    width: swipeAreaWidth\n  }, SwipeAreaProps))));\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeableDrawer.propTypes = {\n  /**\n   * @ignore\n   */\n  anchor: PropTypes.oneOf(['left', 'top', 'right', 'bottom']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Disable the backdrop transition.\n   * This can improve the FPS on low-end devices.\n   */\n  disableBackdropTransition: PropTypes.bool,\n\n  /**\n   * If `true`, touching the screen near the edge of the drawer will not slide in the drawer a bit\n   * to promote accidental discovery of the swipe gesture.\n   */\n  disableDiscovery: PropTypes.bool,\n\n  /**\n   * If `true`, swipe to open is disabled. This is useful in browsers where swiping triggers\n   * navigation actions. Swipe to open is disabled on iOS browsers by default.\n   */\n  disableSwipeToOpen: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Affects how far the drawer must be opened/closed to change his state.\n   * Specified as percent (0-1) of the width of the drawer\n   */\n  hysteresis: PropTypes.number,\n\n  /**\n   * Defines, from which (average) velocity on, the swipe is\n   * defined as complete although hysteresis isn't reached.\n   * Good threshold is between 250 - 1000 px/s\n   */\n  minFlingVelocity: PropTypes.number,\n\n  /**\n   * @ignore\n   */\n  ModalProps: PropTypes.shape({\n    BackdropProps: PropTypes.shape({\n      component: elementTypeAcceptingRef\n    })\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func.isRequired,\n\n  /**\n   * If `true`, the drawer is open.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  PaperProps: PropTypes.shape({\n    component: elementTypeAcceptingRef,\n    style: PropTypes.object\n  }),\n\n  /**\n   * The element is used to intercept the touch events on the edge.\n   */\n  SwipeAreaProps: PropTypes.object,\n\n  /**\n   * The width of the left most (or right most) area in pixels where the\n   * drawer can be swiped open from.\n   */\n  swipeAreaWidth: PropTypes.number,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * @ignore\n   */\n  variant: PropTypes.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nexport default SwipeableDrawer;"],"sourceRoot":""}