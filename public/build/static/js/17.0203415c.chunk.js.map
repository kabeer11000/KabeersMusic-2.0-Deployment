{"version":3,"sources":["../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardActionArea/CardActionArea.js","../node_modules/@material-ui/core/esm/CardMedia/CardMedia.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/Link/Link.js","../node_modules/@material-ui/icons/esm/Pause.js","../node_modules/@material-ui/icons/esm/PlayCircleOutline.js","../node_modules/@material-ui/icons/esm/Close.js","components/Player/CustomMiniPlayerSlider.js","components/Player/MiniPlayer.js"],"names":["_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","clsx__WEBPACK_IMPORTED_MODULE_4__","_Paper__WEBPACK_IMPORTED_MODULE_5__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_6__","Card","props","ref","classes","className","_props$raised","raised","other","Object","root","elevation","__webpack_exports__","overflow","name","_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__","_ButtonBase__WEBPACK_IMPORTED_MODULE_6__","CardActionArea","children","focusVisibleClassName","focusVisible","focusHighlight","theme","display","textAlign","width","&:hover $focusHighlight","opacity","palette","action","hoverOpacity","&$focusVisible $focusHighlight","pointerEvents","position","top","right","bottom","left","borderRadius","backgroundColor","transition","transitions","create","duration","short","MEDIA_COMPONENTS","CardMedia","_props$component","component","Component","image","src","style","isMediaComponent","indexOf","composedStyle","backgroundImage","concat","media","img","undefined","backgroundSize","backgroundRepeat","backgroundPosition","objectFit","CardContent","padding","&:last-child","paddingBottom","_utils_capitalize__WEBPACK_IMPORTED_MODULE_5__","_utils_useIsFocusVisible__WEBPACK_IMPORTED_MODULE_7__","_utils_useForkRef__WEBPACK_IMPORTED_MODULE_8__","_Typography__WEBPACK_IMPORTED_MODULE_9__","Link","_props$color","color","onBlur","onFocus","TypographyClasses","_props$underline","underline","_props$variant","variant","_useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","_React$useState","setFocusVisible","handlerRef","button","event","underlineNone","textDecoration","underlineHover","&:hover","underlineAlways","WebkitTapHighlightColor","outline","border","margin","cursor","userSelect","verticalAlign","-moz-appearance","-webkit-appearance","&::-moz-focus-inner","borderStyle","&$focusVisible","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_utils_createSvgIcon__WEBPACK_IMPORTED_MODULE_1__","a","createElement","d","Close","createSvgIcon","react_default","connect","state","componentState","currentSong","audioElement","pure","MiniPlayer","Fragment","React","useState","currentTime","_React$useState2","slicedToArray","scrubbing","setScrubbing","handleScrubbing","_x","_handleScrubbing","apply","this","arguments","asyncToGenerator","regenerator_default","mark","_callee2","v","wrap","_context2","prev","next","isFinite","store","dispatch","setCurrentSongState","getState","videoElement","reOpenDialog","playList","stop","useEffect","setInterval","paused","Slider","defaultValue","value","min","max","onChange","_ref","_callee","x","_context","abrupt","_x2","_x3","useStyles","makeStyles","TVPlayButton","transform","styles","hidden","ComponentStates","isTv","IconButton","objectSpread","onClick","pauseAudio","Pause","setButton","_React$useState3","miniPlayer","_React$useState4","cutCurrentSongState","pause","Audio","Dialog","localStorage","getItem","storageIndex","currentlyCasting","sendPauseCast","castingTo","playAudio","PlayCircleOutline","play","dialog","AppBar","height","Grow","in","lrud_es","alt","thumbnail","snippet","thumbnails","high","url","title","loading","Player_CustomMiniPlayerSlider","Typography","gutterBottom","slice","to","channelId","description","channelTitle","onError","maxWidth","maxHeight"],"mappings":"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","file":"static/js/17.0203415c.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      textAlign: 'inherit',\n      width: '100%',\n      '&:hover $focusHighlight': {\n        opacity: theme.palette.action.hoverOpacity\n      },\n      '&$focusVisible $focusHighlight': {\n        opacity: 0.12\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the action area is keyboard focused. */\n    focusVisible: {},\n\n    /* Styles applied to the overlay that covers the action area when it is keyboard focused. */\n    focusHighlight: {\n      overflow: 'hidden',\n      pointerEvents: 'none',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      borderRadius: 'inherit',\n      opacity: 0,\n      backgroundColor: 'currentcolor',\n      transition: theme.transitions.create('opacity', {\n        duration: theme.transitions.duration.short\n      })\n    }\n  };\n};\nvar CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      focusVisibleClassName = props.focusVisibleClassName,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"focusVisibleClassName\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref\n  }, other), children, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.focusHighlight\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActionArea'\n})(CardActionArea);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { chainPropTypes } from '@material-ui/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `component=\"picture or img\"`. */\n  img: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media, \"picture img\".indexOf(Component) !== -1 && classes.img),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('Material-UI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = /*#__PURE__*/React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    if (focusVisible) {\n      onBlurVisible();\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, focusVisible && classes.focusVisible, component === 'button' && classes.button),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  /**\n   * The content of the link.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   */\n  underline: PropTypes.oneOf(['none', 'hover', 'always']),\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M6 19h4V5H6v14zm8-14v14h4V5h-4z\"\n}), 'Pause');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M10 16.5l6-4.5-6-4.5v9zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'PlayCircleOutline');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import React, {useEffect} from \"react\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport store from \"../../Redux/store/store\";\r\nimport {setCurrentSongState} from \"../../Redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport {pure} from \"recompose\";\r\n\r\nconst CustomMiniPlayerSlider = (props) => {\r\n    if (!props.componentState.MiniPlayer) {\r\n        return <></>;\r\n    }\r\n    const [scrubbing, setScrubbing] = React.useState(props.audioElement.currentTime);\r\n    useEffect(() => {\r\n        if (props.componentState.MiniPlayer) {\r\n            setInterval(() => !props.audioElement.paused && props.componentState.MiniPlayer ? setScrubbing(props.audioElement.currentTime) : null, 1000);\r\n        }\r\n    }, []);\r\n\r\n    async function handleScrubbing(v) {\r\n        if (isFinite(v)) {\r\n            setScrubbing(v);\r\n            props.audioElement.currentTime = v;\r\n            // Update Redux State\r\n            store.dispatch(setCurrentSongState(\r\n                props.audioElement,\r\n                store.getState().currentSong.videoElement,\r\n                store.getState().currentSong.componentState,\r\n                store.getState().currentSong.reOpenDialog,\r\n                store.getState().currentSong.playList));\r\n        }\r\n    }\r\n\r\n    return (<Slider\r\n        className={'p-0 m-0'}\r\n        defaultValue={0}\r\n        value={scrubbing}\r\n        min={0.0}\r\n        color={'primary'}\r\n        max={props.audioElement.duration}\r\n        onChange={async (v, x) => handleScrubbing(x)}\r\n    />);\r\n};\r\nconst mapStateToProps = state => ({\r\n    componentState: state.currentSong.componentState,\r\n    audioElement: state.currentSong.audioElement,\r\n});\r\nexport default connect(mapStateToProps)(pure(CustomMiniPlayerSlider));\r\n","import {AppBar, Grow, IconButton, makeStyles, Typography} from \"@material-ui/core\";\r\nimport {Close, Pause, PlayCircleOutline} from \"@material-ui/icons\";\r\nimport React, {useEffect} from \"react\";\r\nimport store from \"../../Redux/store/store\";\r\nimport {setCurrentSongState} from \"../../Redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport CustomMiniPlayerSlider from \"./CustomMiniPlayerSlider\";\r\nimport {pure} from \"recompose\";\r\nimport {storageIndex} from \"../../functions/Helper/storageIndex\";\r\nimport {sendPauseCast} from \"../../functions/Cast/Cast\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport {FocusNode} from \"@please/lrud\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tTVPlayButton: {\r\n\t\tposition: \"absolute\",\r\n\t\ttop: \"50%\",\r\n\t\tleft: \"50%\",\r\n\t\ttransform: \"translate(-50%, -50%)\"\r\n\t}\r\n}));\r\nconst styles = {\r\n\tTVPlayButton: {\r\n\t\tposition: \"absolute\",\r\n\t\ttop: \"35%\",\r\n\t\tleft: \"50%\",\r\n\t\ttransform: \"translate(-50%, -50%)\"\r\n\t}\r\n};\r\nconst MiniPlayer = (props) => {\r\n\tif (props.hidden) return <></>;\r\n\tconst\r\n\t\tComponentStates = props.componentState,\r\n\t\taudioElement = props.audioElement,\r\n\t\tvideoElement = props.videoElement;\r\n\tconst classes = useStyles();\r\n\tconst [button, setButton] = React.useState(props.isTv ? (\r\n\t\t<IconButton style={{...styles.TVPlayButton}} onClick={pauseAudio}><Pause color={\"#fff\"}/></IconButton>) : (\r\n\t\t<IconButton onClick={pauseAudio}><Pause color={\"#fff\"}/></IconButton>));\r\n\tconst [open, setOpen] = React.useState(store.getState().currentSong.componentState.miniPlayer);\r\n\r\n\tasync function handleScrubbing(v) {\r\n\t\tif (isFinite(v)) {\r\n\t\t\taudioElement.currentTime = v;\r\n\t\t\t// Update Redux State\r\n\t\t\tstore.dispatch(setCurrentSongState(audioElement, videoElement, {...ComponentStates}));\r\n\t\t}\r\n\t}\r\n\r\n\tfunction cutCurrentSongState() {\r\n\t\taudioElement.pause();\r\n\t\tstore.dispatch(setCurrentSongState(new Audio(\"\"), videoElement, {\r\n\t\t\tDialog: false,\r\n\t\t\tMiniPlayer: false\r\n\t\t}, props.reOpenDialog, props.playList));\r\n\t\taudioElement.src = \"#\";\r\n\t\tif (localStorage.getItem(storageIndex.currentlyCasting)) sendPauseCast(localStorage.getItem(storageIndex.castingTo));\r\n\t}\r\n\r\n\tfunction pauseAudio() {\r\n\t\taudioElement.pause();\r\n\t\tsetButton(props.isTv ? (<IconButton style={{...styles.TVPlayButton}} onClick={playAudio}><PlayCircleOutline\r\n\t\t\tcolor={\"#fff\"}/></IconButton>) : (\r\n\t\t\t<IconButton onClick={playAudio}><PlayCircleOutline color={\"#fff\"}/></IconButton>));\r\n\r\n\t}\r\n\r\n\tfunction playAudio() {\r\n\t\taudioElement.play();\r\n\t\tsetButton(props.isTv ? (<IconButton style={{...styles.TVPlayButton}} onClick={pauseAudio}><Pause\r\n\t\t\tcolor={\"#fff\"}/></IconButton>) : (<IconButton onClick={pauseAudio}><Pause\r\n\t\t\tcolor={\"#fff\"}/></IconButton>));\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\t// TODO Because you lisened to travis scott\r\n\t\t// Record artist name to database for that user\r\n\t\t// Search Yt for artist name\r\n\t\t// Show Because You Listened to travis scott\r\n\r\n\t\t/*\r\n\t\tconst Mounted = true;\r\n\t\tif (!Mounted) return null;\r\n\t\tdocument.addEventListener('swiped-up', function (e) {\r\n\t\t\tprops.reOpenDialog();\r\n\t\t\t// Update Redux State\r\n\t\t\tstore.dispatch(setCurrentSongState(audioElement, videoElement, {\r\n\t\t\t\tDialog: true,\r\n\t\t\t\tMiniPlayer: false\r\n\t\t\t}, props.reOpenDialog, props.playList));\r\n\t\t\tif (props.componentState.Dialog) {\r\n\t\t\t\tstore.getState().currentSong.reOpenDialog();\r\n\t\t\t}\r\n\t\t});\r\n\t\t */\r\n\t});\r\n\r\n\tif (!ComponentStates.dialog && ComponentStates.MiniPlayer && audioElement !== null || \"\" || undefined) {\r\n\t\treturn props.isTv ? (\r\n\t\t\t<AppBar color={\"slideDown primary.miniPlayer.main\"} style={{\r\n\t\t\t\tposition: \"fixed\",\r\n\t\t\t\ttop: \"auto\",\r\n\t\t\t\tbottom: \"0\",\r\n\t\t\t\twidth: \"18vw\",\r\n\t\t\t\theight: \"40vh\"\r\n\t\t\t}} component={\"div\"} elevation={1} className={\"d-inline-flex KabeersMiniPlayerContainer\"}>\r\n\t\t\t\t<Grow in={true}>\r\n\t\t\t\t\t<Card className={\"SongCard\"} style={{width: \"100%\", height: \"100%\", borderRadius: 0}}\r\n\t\t\t\t\t\t  variant={\"elevation\"}\r\n\t\t\t\t\t\t  elevation={3}>\r\n\t\t\t\t\t\t<FocusNode>\r\n\t\t\t\t\t\t\t<CardActionArea>\r\n\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t<IconButton style={{position: \"absolute\", right: \"0.25rem\", top: \"0.25rem\"}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={cutCurrentSongState}><Close/></IconButton>\r\n\t\t\t\t\t\t\t\t\t{button}\r\n\t\t\t\t\t\t\t\t\t<CardMedia\r\n\t\t\t\t\t\t\t\t\t\tcomponent={\"img\"}\r\n\t\t\t\t\t\t\t\t\t\talt=\"Contemplative Reptile\"\r\n\t\t\t\t\t\t\t\t\t\timage={props.thumbnail || videoElement.snippet.thumbnails.high.url}\r\n\t\t\t\t\t\t\t\t\t\ttitle={videoElement.snippet.title}\r\n\t\t\t\t\t\t\t\t\t\tloading={\"lazy\"}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{height: \"26vh\", width: \"100%\"}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<div style={{width: \"100%\", position: \"absolute\"}}><CustomMiniPlayerSlider/></div>\r\n\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t<CardContent onClick={() => {\r\n\t\t\t\t\t\t\t\t\tprops.reOpenDialog();\r\n\t\t\t\t\t\t\t\t\t// Update Redux State\r\n\t\t\t\t\t\t\t\t\tstore.dispatch(setCurrentSongState(audioElement, videoElement, {\r\n\t\t\t\t\t\t\t\t\t\tDialog: true,\r\n\t\t\t\t\t\t\t\t\t\tMiniPlayer: false\r\n\t\t\t\t\t\t\t\t\t}, props.reOpenDialog, props.playList));\r\n\t\t\t\t\t\t\t\t\tif (props.componentState.Dialog) store.getState().currentSong.reOpenDialog();\r\n\t\t\t\t\t\t\t\t}} className={\"text-left\"}>\r\n\t\t\t\t\t\t\t\t\t<Typography gutterBottom variant=\"h6\" component=\"p\" className={\"text-truncate\"}>\r\n\t\t\t\t\t\t\t\t\t\t{videoElement.snippet.title.slice(0, 70) + \" ...\"}\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t<Typography variant=\"body2\" color=\"textSecondary\" style={{textDecoration: \"none\"}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcomponent={Link} to={`/artist?id=${videoElement.snippet.channelId}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={\"text-truncate\"}>\r\n\t\t\t\t\t\t\t\t\t\t{videoElement.snippet.description ? videoElement.snippet.description.slice(0, 70) + \" ...\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t<span className={\"text-muted\"}>\r\n\t\t\t\t\t\t\t\t\t{videoElement.snippet.channelTitle}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t{/*192.168.10.3*/}\r\n\t\t\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t\t</CardActionArea>\r\n\t\t\t\t\t\t</FocusNode>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Grow>\r\n\t\t\t</AppBar>\r\n\t\t) : (\r\n\t\t\t<AppBar color={\"slideDown primary.miniPlayer.main\"} style={{\r\n\t\t\t\tposition: \"fixed\",\r\n\t\t\t\ttop: \"auto\",\r\n\t\t\t\tbottom: \"3.5rem\",\r\n\t\t\t\twidth: \"100%\",\r\n\t\t\t}} component={\"div\"} elevation={1} className={\"d-inline-flex KabeersMiniPlayerContainer\"}>\r\n\t\t\t\t<div className={\"d-inline-flex\"}>\r\n\t\t\t\t\t<div onClick={() => {\r\n\t\t\t\t\t\tprops.reOpenDialog();\r\n\t\t\t\t\t\t// Update Redux State\r\n\t\t\t\t\t\tstore.dispatch(setCurrentSongState(audioElement, videoElement, {\r\n\t\t\t\t\t\t\tDialog: true,\r\n\t\t\t\t\t\t\tMiniPlayer: false\r\n\t\t\t\t\t\t}, props.reOpenDialog, props.playList));\r\n\t\t\t\t\t\tif (props.componentState.Dialog) store.getState().currentSong.reOpenDialog();\r\n\t\t\t\t\t}} className={\"d-inline-flex\"}>\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tonError=\"this.onerror=null;this.src='http://docs-kabeersnetwork-kview-app-sta.rf.gd/Private/uploads/5f58af5918860unnamed.jpg';\"\r\n\t\t\t\t\t\t\tsrc={videoElement.snippet.thumbnails.high.url} style={{\r\n\t\t\t\t\t\t\twidth: \"4rem\",\r\n\t\t\t\t\t\t\theight: \"3rem\",\r\n\t\t\t\t\t\t\tmaxWidth: \"5rem!important\",\r\n\t\t\t\t\t\t\tmaxHeight: \"4rem!important\"\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\talt={\"Song Image\"} className={\"KabeersMiniPlayerImage\"}/>\r\n\t\t\t\t\t\t<Typography component={\"span\"} className={\"text-truncate p-2 KabeersMiniPlayerText\"}\r\n\t\t\t\t\t\t\t\t\tcolor={\"#000\"} style={{\r\n\t\t\t\t\t\t\twidth: \"10em\",\r\n\t\t\t\t\t\t\tcolor: \"primary.miniPlayer.text\"\r\n\t\t\t\t\t\t}}>{videoElement.snippet.title || \"Untitled\"}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={`float-right ml-auto`}>\r\n\t\t\t\t\t\t{button}\r\n\t\t\t\t\t\t<IconButton onClick={cutCurrentSongState}><Close/></IconButton>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<CustomMiniPlayerSlider/>\r\n\t\t\t</AppBar>\r\n\t\t);\r\n\t}\r\n\treturn (<React.Fragment/>);\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n\tcomponentState: state.currentSong.componentState,\r\n\taudioElement: state.currentSong.audioElement,\r\n\tvideoElement: state.currentSong.videoElement,\r\n\treOpenDialog: state.currentSong.reOpenDialog,\r\n\tplayList: state.currentSong.playList\r\n});\r\nexport default connect(mapStateToProps)(pure(MiniPlayer));\r\n"],"sourceRoot":""}