{
  "version": 3,
  "sources": [
    "../node_modules/@material-ui/core/esm/Card/Card.js",
    "../node_modules/@material-ui/core/esm/CardActionArea/CardActionArea.js",
    "../node_modules/@material-ui/core/esm/CardContent/CardContent.js",
    "../node_modules/@material-ui/core/esm/CardMedia/CardMedia.js",
    "../node_modules/@material-ui/core/esm/Link/Link.js",
    "components/SongCard/SongCard.js"
  ],
  "names": [
    "_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__",
    "__webpack_require__",
    "_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__",
    "react__WEBPACK_IMPORTED_MODULE_2__",
    "clsx__WEBPACK_IMPORTED_MODULE_4__",
    "_Paper__WEBPACK_IMPORTED_MODULE_5__",
    "_styles_withStyles__WEBPACK_IMPORTED_MODULE_6__",
    "Card",
    "props",
    "ref",
    "classes",
    "className",
    "_props$raised",
    "raised",
    "other",
    "Object",
    "root",
    "elevation",
    "__webpack_exports__",
    "overflow",
    "name",
    "_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__",
    "_ButtonBase__WEBPACK_IMPORTED_MODULE_6__",
    "CardActionArea",
    "children",
    "focusVisibleClassName",
    "focusVisible",
    "focusHighlight",
    "theme",
    "display",
    "textAlign",
    "width",
    "&:hover $focusHighlight",
    "opacity",
    "palette",
    "action",
    "hoverOpacity",
    "&$focusVisible $focusHighlight",
    "pointerEvents",
    "position",
    "top",
    "right",
    "bottom",
    "left",
    "borderRadius",
    "backgroundColor",
    "transition",
    "transitions",
    "create",
    "duration",
    "short",
    "CardContent",
    "_props$component",
    "component",
    "Component",
    "padding",
    "&:last-child",
    "paddingBottom",
    "MEDIA_COMPONENTS",
    "CardMedia",
    "image",
    "src",
    "style",
    "isMediaComponent",
    "indexOf",
    "composedStyle",
    "backgroundImage",
    "concat",
    "media",
    "img",
    "undefined",
    "backgroundSize",
    "backgroundRepeat",
    "backgroundPosition",
    "objectFit",
    "_utils_capitalize__WEBPACK_IMPORTED_MODULE_5__",
    "_utils_useIsFocusVisible__WEBPACK_IMPORTED_MODULE_7__",
    "_utils_useForkRef__WEBPACK_IMPORTED_MODULE_8__",
    "_Typography__WEBPACK_IMPORTED_MODULE_9__",
    "Link",
    "_props$color",
    "color",
    "onBlur",
    "onFocus",
    "TypographyClasses",
    "_props$underline",
    "underline",
    "_props$variant",
    "variant",
    "_useIsFocusVisible",
    "isFocusVisible",
    "onBlurVisible",
    "focusVisibleRef",
    "_React$useState",
    "setFocusVisible",
    "handlerRef",
    "button",
    "event",
    "underlineNone",
    "textDecoration",
    "underlineHover",
    "&:hover",
    "underlineAlways",
    "WebkitTapHighlightColor",
    "outline",
    "border",
    "margin",
    "cursor",
    "userSelect",
    "verticalAlign",
    "-moz-appearance",
    "-webkit-appearance",
    "&::-moz-focus-inner",
    "borderStyle",
    "&$focusVisible",
    "r",
    "react__WEBPACK_IMPORTED_MODULE_0__",
    "react__WEBPACK_IMPORTED_MODULE_0___default",
    "n",
    "_material_ui_core_Card__WEBPACK_IMPORTED_MODULE_2__",
    "_material_ui_core_CardActionArea__WEBPACK_IMPORTED_MODULE_3__",
    "_material_ui_core_CardMedia__WEBPACK_IMPORTED_MODULE_4__",
    "_material_ui_core_CardContent__WEBPACK_IMPORTED_MODULE_5__",
    "_material_ui_core__WEBPACK_IMPORTED_MODULE_6__",
    "_material_ui_core_Grow__WEBPACK_IMPORTED_MODULE_7__",
    "_material_ui_core_Link__WEBPACK_IMPORTED_MODULE_8__",
    "recompose__WEBPACK_IMPORTED_MODULE_9__",
    "SongCard",
    "str",
    "video_",
    "video",
    "snippet",
    "a",
    "createElement",
    "in",
    "onClick",
    "onPlay",
    "key_",
    "list",
    "alt",
    "height",
    "thumbnail",
    "thumbnails",
    "high",
    "url",
    "title",
    "replace",
    "loading",
    "gutterBottom",
    "slice",
    "to",
    "channelId",
    "description",
    "channelTitle",
    "defaultProps",
    "pure"
  ],
  "mappings": "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",
  "file": "static/js/20.e959e83c.chunk.js",
  "sourcesContent": [
    "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);",
    "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      textAlign: 'inherit',\n      width: '100%',\n      '&:hover $focusHighlight': {\n        opacity: theme.palette.action.hoverOpacity\n      },\n      '&$focusVisible $focusHighlight': {\n        opacity: 0.12\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the action area is keyboard focused. */\n    focusVisible: {},\n\n    /* Styles applied to the overlay that covers the action area when it is keyboard focused. */\n    focusHighlight: {\n      overflow: 'hidden',\n      pointerEvents: 'none',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      borderRadius: 'inherit',\n      opacity: 0,\n      backgroundColor: 'currentcolor',\n      transition: theme.transitions.create('opacity', {\n        duration: theme.transitions.duration.short\n      })\n    }\n  };\n};\nvar CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      focusVisibleClassName = props.focusVisibleClassName,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"focusVisibleClassName\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref\n  }, other), children, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.focusHighlight\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActionArea'\n})(CardActionArea);",
    "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);",
    "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { chainPropTypes } from '@material-ui/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `component=\"picture or img\"`. */\n  img: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media, \"picture img\".indexOf(Component) !== -1 && classes.img),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('Material-UI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);",
    "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = /*#__PURE__*/React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    if (focusVisible) {\n      onBlurVisible();\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, focusVisible && classes.focusVisible, component === 'button' && classes.button),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  /**\n   * The content of the link.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   */\n  underline: PropTypes.oneOf(['none', 'hover', 'always']),\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);",
    "import React from \"react\";\r\nimport \"./SongCard.css\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport {pure} from \"recompose\";\r\n\r\n// = {title, description, tags, channelTitle, videoId, thumbnail}\r\nfunction SongCard(props) {\r\n\tconst video_ = props.video.snippet;\r\n\r\n\tfunction unEntity(str) {\r\n\t\treturn str.replace(/&amp;/g, \"&\").replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\");\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Grow in={true}>\r\n\t\t\t<Card className={\"SongCard\"} style={{width: \"18rem\"}}\r\n\t\t\t\t  onClick={() => props.onPlay(props.video, props.key_, props.list)}>\r\n\t\t\t\t<CardActionArea>\r\n\t\t\t\t\t<CardMedia\r\n\t\t\t\t\t\tcomponent=\"img\"\r\n\t\t\t\t\t\talt=\"Contemplative Reptile\"\r\n\t\t\t\t\t\theight=\"140\"\r\n\t\t\t\t\t\timage={props.thumbnail || video_.thumbnails.high.url}\r\n\t\t\t\t\t\ttitle={unEntity(video_.title)}\r\n\t\t\t\t\t\tloading={\"lazy\"}\r\n\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<CardContent className={\"text-left\"}>\r\n\t\t\t\t\t\t<Typography gutterBottom variant=\"h6\" component=\"p\" className={\"text-truncate\"}>\r\n\t\t\t\t\t\t\t{video_.title.slice(0, 70) + \" ...\"}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"body2\" color=\"textSecondary\" style={{textDecoration: \"none\"}}\r\n\t\t\t\t\t\t\t\t\tcomponent={Link} to={`/artist?id=${video_.channelId}`} className={\"text-truncate\"}>\r\n\t\t\t\t\t\t\t{video_.description ? video_.description.slice(0, 70) + \" ...\" : \"\"}\r\n\t\t\t\t\t\t\t<span className={\"text-muted\"}>\r\n                        {video_.channelTitle}\r\n                    </span>\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</CardActionArea>\r\n\t\t\t</Card>\r\n\t\t</Grow>\r\n\t);\r\n}\r\n\r\nSongCard.propTypes = {};\r\n\r\nSongCard.defaultProps = {};\r\n\r\nexport default pure(SongCard);\r\n"
  ],
  "sourceRoot": ""
}
