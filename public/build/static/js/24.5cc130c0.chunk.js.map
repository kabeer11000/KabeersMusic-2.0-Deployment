{
  "version": 3,
  "sources": [
    "functions/Helper/storageIndex.js",
    "components/FeedBack/FeedBack.js",
    "components/Settings/Settings.js"
  ],
  "names": [
    "__webpack_require__",
    "d",
    "__webpack_exports__",
    "storageIndex",
    "userData",
    "homeSongObject",
    "homeTimeObject",
    "pure",
    "_React$useState",
    "React",
    "useState",
    "_React$useState2",
    "Object",
    "slicedToArray",
    "dialogVisible",
    "setDialogVisible",
    "_useSnackbar",
    "useSnackbar",
    "enqueueSnackbar",
    "closeSnackbar",
    "react_default",
    "a",
    "createElement",
    "Fragment",
    "Tooltip",
    "title",
    "arrow",
    "IconButton",
    "onClick",
    "Feedback_default",
    "dist",
    "open",
    "onClose",
    "onSubmit",
    "Settings",
    "props",
    "className",
    "CustomAppBar_lazy",
    "List",
    "subheader",
    "ListSubheader",
    "style",
    "display",
    "justifyContent",
    "localStorage",
    "getItem",
    "Avatar",
    "alt",
    "JSON",
    "parse",
    "atob",
    "username",
    "src",
    "account_image",
    "BrokenImage",
    "ListItemText",
    "id",
    "primary",
    "concat",
    "Divider",
    "ListItem",
    "ListItemIcon",
    "Brightness4",
    "ListItemSecondaryAction",
    "Switch",
    "edge",
    "onChange",
    "handleTheme",
    "checked",
    "inputProps",
    "aria-labelledby",
    "FeedBack",
    "defaultProps"
  ],
  "mappings": "2FAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAIaA,EAAe,CAC3BC,SAAU,mCACVC,eAAgB,0CAChBC,eAAgB,gUCqBFC,cApBQ,WAAM,IAAAC,EACiBC,IAAMC,UAAS,GADhCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAClBM,EADkBH,EAAA,GACHI,EADGJ,EAAA,GAAAK,EAEgBC,cAAlCC,EAFkBF,EAElBE,gBAFkBF,EAEDG,cAExB,OAAOC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACHH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,MAAM,gBAAgBC,OAAK,GAChCN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAYC,QAAS,kBAAMb,GAAiB,KACxCK,EAAAC,EAAAC,cAACO,EAAAR,EAAD,QAGRD,EAAAC,EAAAC,cAACQ,EAAA,eAAD,CACIC,KAAMjB,EACNkB,QAAS,kBAAMjB,GAAiB,IAChCkB,SAAU,WACNf,EAAgB,+DCL1BgB,EAAW,SAACC,GAAU,IAAA3B,EACMC,IAAMC,SAAS,CAAC,aADtBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAAAG,EAAA,GAAAA,EAAA,GAexB,OACIS,EAAAC,EAAAC,cAAA,OAAKc,UAAU,YACXhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAcZ,MAAO,aACrBL,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMF,UAAW,iBAAkBG,UAAWnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,kBAC1CpB,EAAAC,EAAAC,cAAA,OAAKmB,MAAO,CAACC,QAAS,cAAeC,eAAgB,UAAWP,UAAW,SACtEQ,aAAaC,QAAQ1C,IAAaC,UAC/BgB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAQC,IAAKC,KAAKC,MAAMC,KAAKN,aAAaC,QAAQ1C,IAAaC,YAAY+C,SACnEC,IAAKJ,KAAKC,MAAMC,KAAKN,aAAaC,QAAQ1C,IAAaC,YAAYiD,gBAC3EjC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAQM,IAAKhC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,SAErBlC,EAAAC,EAAAC,cAAA,OAAKc,UAAW,eACZhB,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAcC,GAAG,yBACHC,QAAO,WAAAC,OAA6D,OAAhDd,aAAaC,QAAQ1C,IAAaC,UAAqB,OAAS4C,KAAKC,MAAMC,KAAKN,aAAaC,QAAQ1C,IAAaC,YAAY+C,aAEpK/B,EAAAC,EAAAC,cAACqC,EAAA,EAAD,MACAvC,EAAAC,EAAAC,cAACsC,EAAA,EAAD,KACIxC,EAAAC,EAAAC,cAACuC,EAAA,EAAD,KACIzC,EAAAC,EAAAC,cAACwC,EAAA,EAAD,OAEJ1C,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAcC,GAAG,yBAAyBC,QAAQ,cAClDrC,EAAAC,EAAAC,cAACyC,EAAA,EAAD,KACI3C,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CACIC,KAAK,MACLC,SAAU/B,EAAMgC,YAChBC,QAA8C,OAArCxB,aAAaC,QAAQ,aAA+BG,KAAKC,MAAML,aAAaC,QAAQ,aAC7FwB,WAAY,CAACC,kBAAmB,8BAI5ClD,EAAAC,EAAAC,cAACsC,EAAA,EAAD,KACIxC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAcC,GAAG,8BAA8BC,QAAQ,sBACvDrC,EAAAC,EAAAC,cAACyC,EAAA,EAAD,KACI3C,EAAAC,EAAAC,cAACiD,EAAD,WAUxBrC,EAASsC,aAAe,GAETjE,sBAAK2B",
  "file": "static/js/24.5cc130c0.chunk.js",
  "sourcesContent": [
    "const a = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzX3Rva2VuIiwiYXBwX25hbWUiOiJLYWJlZXJzIE11c2ljIEFwcCIsImFwcF9pZCI6IkFTdHJvV29ybGRfQ245T3VVTlRaUmZ1YUNud2M2IiwiZ3JhbnRfdHlwZXMiO\\n\" +\r\n\t\"iJBU3Ryb1dvcmxkX0NuOU91VU5UWlJmdWFDbndjNjp1c2VybmFtZXxBU3Ryb1dvcmxkX0NuOU91VU5UWlJmdWFDbndjNjplbWFpbHxBU3Ryb1dvcmxkX0NuOU91VU5UWlJmdWFDbndjNjp1c2VyX2lkIiwidXNlcl9pZCI6ImM0MDAwMzc2MTE\\n\" +\r\n\t\"0MTg0YjM4ZTJmMDBlNDNiMDcwYTlmZTIzOTQ1N2QiLCJpYXQiOjE2MDAwNTE4MDEsImV4cCI6MTYwMDA1OTAwMX0.5qva6pcGyKPkNzCc1LIrvJperozvZemGtVK6FKn2uU4\";\r\n\r\nexport const storageIndex = {\r\n\tuserData: \"bGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\",\r\n\thomeSongObject: \"6pcGyKPkNzCc1LIrvJperozvZemGtVK6FKn2uU4\",\r\n\thomeTimeObject: \"b1dvcmxkX0NuOU91VU5UWlJmdWFDbndjNjp1c2V\",\r\n};\r\n",
    "import React from 'react'\nimport {IconButton, Tooltip} from '@material-ui/core'\nimport FeedbackIcon from '@material-ui/icons/Feedback';\nimport {FeedbackDialog} from 'mui-feedback-dialog'\nimport {useSnackbar} from \"notistack\";\nimport {pure} from \"recompose\";\n\n\nconst FeedbackButton = () => {\n    const [dialogVisible, setDialogVisible] = React.useState(false);\n    const {enqueueSnackbar, closeSnackbar} = useSnackbar();\n\n    return <React.Fragment>\n        <Tooltip title='Send Feedback' arrow>\n            <IconButton onClick={() => setDialogVisible(true)}>\n                <FeedbackIcon/>\n            </IconButton>\n        </Tooltip>\n        <FeedbackDialog\n            open={dialogVisible}\n            onClose={() => setDialogVisible(false)}\n            onSubmit={() => {\n                enqueueSnackbar('FeedBack Sent!, We will get back to you soon');\n            }\n            }/>\n    </React.Fragment>\n};\n\nexport default pure(FeedbackButton);\n",
    "import React from \"react\";\nimport \"./Settings.css\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Switch from \"@material-ui/core/Switch\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport {Brightness4, BrokenImage} from \"@material-ui/icons\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport CustomAppBar from \"../CustomAppBar/CustomAppBar.lazy\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Divider from \"@material-ui/core/Divider\";\nimport FeedbackButton from \"../FeedBack/FeedBack\";\nimport {storageIndex} from \"../../functions/Helper/storageIndex\";\nimport {pure} from \"recompose\";\n\nconst Settings = (props) => {\n    const [checked, setChecked] = React.useState(['darkmode']);\n\n    const handleToggle = (value) => () => {\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setChecked(newChecked);\n    };\n    return (\n        <div className=\"Settings\">\n            <CustomAppBar title={'Settings'}/>\n            <List className={'mt-5 text-left'} subheader={<ListSubheader>Settings</ListSubheader>}>\n                <div style={{display: \"inline-flex\", justifyContent: \"center\"}} className={\"w-100\"}>\n                    {localStorage.getItem(storageIndex.userData) ?\n                        <Avatar alt={JSON.parse(atob(localStorage.getItem(storageIndex.userData))).username}\n                                src={JSON.parse(atob(localStorage.getItem(storageIndex.userData))).account_image}/> :\n                        <Avatar src={<BrokenImage/>}/>}\n                </div>\n                <div className={\"text-center\"}>\n                    <ListItemText id=\"switch-list-label-wifi\"\n                                  primary={`Welcome ${localStorage.getItem(storageIndex.userData) === null ? \"User\" : JSON.parse(atob(localStorage.getItem(storageIndex.userData))).username}`}/>\n                </div>\n                <Divider/>\n                <ListItem>\n                    <ListItemIcon>\n                        <Brightness4/>\n                    </ListItemIcon>\n                    <ListItemText id=\"switch-list-label-wifi\" primary=\"Dark Mode\"/>\n                    <ListItemSecondaryAction>\n                        <Switch\n                            edge=\"end\"\n                            onChange={props.handleTheme}\n                            checked={localStorage.getItem('darkmode') === null ? false : JSON.parse(localStorage.getItem('darkmode'))}\n                            inputProps={{'aria-labelledby': 'switch-list-label-wifi'}}\n                        />\n                    </ListItemSecondaryAction>\n                </ListItem>\n                <ListItem>\n                    <ListItemText id=\"switch-list-label-bluetooth\" primary=\"Feedback and Help\"/>\n                    <ListItemSecondaryAction>\n                        <FeedbackButton/>\n                    </ListItemSecondaryAction>\n                </ListItem>\n            </List>\n        </div>\n    );\n};\n\nSettings.propTypes = {};\n\nSettings.defaultProps = {};\n\nexport default pure(Settings);\n"
  ],
  "sourceRoot": ""
}
