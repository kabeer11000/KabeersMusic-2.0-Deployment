{"version":3,"sources":["../node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","../node_modules/@material-ui/core/esm/Avatar/Avatar.js","../node_modules/@material-ui/core/esm/ListItemAvatar/ListItemAvatar.js","api/keys/keys.js","functions/Helper/XMLToJSON.js","functions/suggestSearch.js","../node_modules/@material-ui/lab/esm/Skeleton/Skeleton.js","components/SkeletonList/SkeletonList.js","components/SearchComponent/SearchResultComponent.js"],"names":["Person","Object","createSvgIcon","react","d","Avatar_Avatar","props","ref","alt","childrenProp","children","classes","className","_props$component","component","Component","imgProps","sizes","src","srcSet","_props$variant","variant","other","objectWithoutProperties","loaded","_ref","_React$useState","setLoaded","active","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","esm_extends","img","fallback","clsx_m","root","system","colorDefault","__webpack_exports__","withStyles","theme","position","display","alignItems","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","color","palette","background","default","backgroundColor","type","grey","circle","rounded","shape","square","textAlign","objectFit","textIndent","name","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","clsx__WEBPACK_IMPORTED_MODULE_4__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__","_List_ListContext__WEBPACK_IMPORTED_MODULE_6__","ListItemAvatar","context","alignItemsFlexStart","minWidth","marginTop","module","exports","youtube","xml2json","xml","obj","nodeType","attributes","length","j","attribute","item","nodeName","nodeValue","textNodes","slice","call","childNodes","filter","node","hasChildNodes","reduce","text","i","push","old","SuggestSearch","_x","_SuggestSearch","apply","this","arguments","_callee","q","abortController","response","xmlDoc","_args","regenerator_default","a","wrap","_context","prev","next","undefined","AbortController","fetch","endPoints","getSuggestionFake","signal","then","r","sent","DOMParser","parseFromString","abrupt","toplevel","CompleteSuggestion","stop","SearchYoutube","_x2","_SearchYoutube","_callee2","_args2","_context2","initAuth","token","searchYoutube","keys","headers","Headers","Content-Type","Authorization","concat","json","catch","e","Skeleton_Skeleton","_props$animation","animation","hasChildren","Boolean","withChildren","fitContent","heightAuto","style","esm_Skeleton_Skeleton","colorManipulator","primary","marginBottom","transformOrigin","transform","&:empty:before","content","rect","pulse","@keyframes pulse","0%","opacity","50%","100%","wave","&::after","action","hover","bottom","left","right","top","@keyframes wave","60%","& > *","visibility","maxWidth","SkeletonList","react_default","createElement","List","toConsumableArray","Array","map","value","ListItem","ListItemText","secondary","defaultProps","pure","useStyles","makeStyles","padding","input","marginLeft","spacing","flex","iconButton","divider","margin","SearchResultComponent","React","forwardRef","Slide","assign","direction","history","useHistory","useState","_React$useState2","slicedToArray","open","setOpen","_React$useState3","_React$useState4","_React$useState5","components_SkeletonList_SkeletonList","_React$useState6","listItems","setListItems","errorPage","message","button","Button","Link","to","useEffect","query","navigator","onLine","resultsArray","items","index","key","onClick","video","metaData","list","getSong","id","setTimeout","appState","uri","thumbnail","snippet","thumbnails","high","url","ListItemIcon","Avatar","title","channelTitle","SuggestOfflineSongs","data","videoID","videoElement","videoId","getSongFromStorage","URL","createObjectURL","blob","PlayOfflineSong","decodeURIComponent","abort","Dialog","fullScreen","onClose","AppBar","Toolbar","window","IconButton","textDecoration","ArrowBack","Fragment","InputBase","autoCapitalize","autoComplete","placeholder","inputProps","aria-label","connect","state"],"mappings":"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","file":"static/js/14.293fca24.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = /*#__PURE__*/React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The shape of the avatar.\n   */\n  variant: PropTypes.oneOf(['circle', 'rounded', 'square'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    minWidth: 56,\n    flexShrink: 0\n  },\n\n  /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n  alignItemsFlexStart: {\n    marginTop: 8\n  }\n};\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nvar ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component – normally `Avatar`.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemAvatar'\n})(ListItemAvatar);","const keys = {\r\n    youtube: 'AIzaSyB1msCdExGF2q9oyAjUq4bmSQq6i89VId8'\r\n};\r\nmodule.exports = keys;\r\n","/**\r\n * Changes XML to JSON\r\n * Modified version from here: http://davidwalsh.name/convert-xml-json\r\n * @param {string} xml XML DOM tree\r\n */\r\nexport default function xml2json(xml) {\r\n    // Create the return object\r\n    var obj = {};\r\n\r\n    if (xml.nodeType === 1) {\r\n        // element\r\n        // do attributes\r\n        if (xml.attributes.length > 0) {\r\n            obj[\"attributes\"] = {};\r\n            for (var j = 0; j < xml.attributes.length; j++) {\r\n                var attribute = xml.attributes.item(j);\r\n                obj[\"attributes\"][attribute.nodeName] = attribute.nodeValue;\r\n            }\r\n        }\r\n    } else if (xml.nodeType === 3) {\r\n        // text\r\n        obj = xml.nodeValue;\r\n    }\r\n\r\n    // do children\r\n    // If all text nodes inside, get concatenated text from them.\r\n    var textNodes = [].slice.call(xml.childNodes).filter(function (node) {\r\n        return node.nodeType === 3;\r\n    });\r\n    if (xml.hasChildNodes() && xml.childNodes.length === textNodes.length) {\r\n        obj = [].slice.call(xml.childNodes).reduce(function (text, node) {\r\n            return text + node.nodeValue;\r\n        }, \"\");\r\n    } else if (xml.hasChildNodes()) {\r\n        for (var i = 0; i < xml.childNodes.length; i++) {\r\n            var item = xml.childNodes.item(i);\r\n            var nodeName = item.nodeName;\r\n            if (typeof obj[nodeName] == \"undefined\") {\r\n                obj[nodeName] = xml2json(item);\r\n            } else {\r\n                if (typeof obj[nodeName].push == \"undefined\") {\r\n                    var old = obj[nodeName];\r\n                    obj[nodeName] = [];\r\n                    obj[nodeName].push(old);\r\n                }\r\n                obj[nodeName].push(xml2json(item));\r\n            }\r\n        }\r\n    }\r\n    return obj;\r\n}\r\n","import endPoints from \"../api/endpoints/endpoints\";\r\nimport xml2json from \"./Helper/XMLToJSON\";\r\nimport keys from \"../api/keys/keys\";\r\nimport {initAuth} from \"./auth\";\r\n\r\n\r\nexport async function SuggestSearch(q, abortController = new AbortController()) {\r\n    const response = await fetch(endPoints.getSuggestionFake(q), {signal: abortController.signal}).then(r => r.text());\r\n    const xmlDoc = xml2json(new DOMParser().parseFromString(response, \"text/xml\"));\r\n    return xmlDoc.toplevel ? xmlDoc.toplevel.CompleteSuggestion : [];\r\n\r\n}\r\n\r\nexport async function SearchYoutube(q, abortController = new AbortController()) {\r\n    return initAuth()\r\n        .then(token => fetch(endPoints.searchYoutube(keys.youtube, q), {\r\n            headers: new Headers({\r\n                \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n                \"Authorization\": `Bearer ${token}`\r\n            }),\r\n            signal: abortController.signal\r\n        }).then(r => r.json())).catch(e => e);\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { fade, withStyles } from '@material-ui/core/styles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      // Create a \"on paper\" color with sufficient contrast retaining the color\n      backgroundColor: fade(theme.palette.text.primary, theme.palette.type === 'light' ? 0.11 : 0.13),\n      height: '1.2em'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      marginTop: 0,\n      marginBottom: 0,\n      height: 'auto',\n      transformOrigin: '0 60%',\n      transform: 'scale(1, 0.60)',\n      borderRadius: theme.shape.borderRadius,\n      '&:empty:before': {\n        content: '\"\\\\00a0\"'\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"rect\"`. */\n    rect: {},\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the root element if `animation=\"pulse\"`. */\n    pulse: {\n      animation: '$pulse 1.5s ease-in-out 0.5s infinite'\n    },\n    '@keyframes pulse': {\n      '0%': {\n        opacity: 1\n      },\n      '50%': {\n        opacity: 0.4\n      },\n      '100%': {\n        opacity: 1\n      }\n    },\n\n    /* Styles applied to the root element if `animation=\"wave\"`. */\n    wave: {\n      position: 'relative',\n      overflow: 'hidden',\n      '&::after': {\n        animation: '$wave 1.6s linear 0.5s infinite',\n        background: \"linear-gradient(90deg, transparent, \".concat(theme.palette.action.hover, \", transparent)\"),\n        content: '\"\"',\n        position: 'absolute',\n        transform: 'translateX(-100%)',\n        // Avoid flash during server-side hydration\n        bottom: 0,\n        left: 0,\n        right: 0,\n        top: 0\n      }\n    },\n    '@keyframes wave': {\n      '0%': {\n        transform: 'translateX(-100%)'\n      },\n      '60%': {\n        // +0.5s of delay between each loop\n        transform: 'translateX(100%)'\n      },\n      '100%': {\n        transform: 'translateX(100%)'\n      }\n    },\n\n    /* Styles applied when the component is passed children. */\n    withChildren: {\n      '& > *': {\n        visibility: 'hidden'\n      }\n    },\n\n    /* Styles applied when the component is passed children and no width. */\n    fitContent: {\n      maxWidth: 'fit-content'\n    },\n\n    /* Styles applied when the component is passed children and no height. */\n    heightAuto: {\n      height: 'auto'\n    }\n  };\n};\nvar Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(props, ref) {\n  var _props$animation = props.animation,\n      animation = _props$animation === void 0 ? 'pulse' : _props$animation,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'span' : _props$component,\n      height = props.height,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      width = props.width,\n      other = _objectWithoutProperties(props, [\"animation\", \"classes\", \"className\", \"component\", \"height\", \"variant\", \"width\"]);\n\n  var hasChildren = Boolean(other.children);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, hasChildren && [classes.withChildren, !width && classes.fitContent, !height && classes.heightAuto], animation !== false && classes[animation])\n  }, other, {\n    style: _extends({\n      width: width,\n      height: height\n    }, other.style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes = {\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The type of content that will be rendered.\n   */\n  variant: PropTypes.oneOf(['text', 'rect', 'circle']),\n\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSkeleton'\n})(Skeleton);","import React from \"react\";\nimport \"./SkeletonList.css\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport {Skeleton} from \"@material-ui/lab\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport {pure} from \"recompose\";\n\nconst SkeletonList = (props = 8) => (\n    <List>\n        {\n            [...Array(props.length)].map(value => (\n                <ListItem alignItems=\"flex-start\">\n                    <ListItemAvatar>\n                        <Skeleton variant={\"circle\"} style={{height: '2.5rem', width: '2.5rem'}}/>\n                    </ListItemAvatar>\n                    <ListItemText\n                        primary={\n                            <Skeleton/>\n                        }\n                        secondary={\n                            <Skeleton width={'100%'}/>\n                        }\n                    />\n                </ListItem>\n            ))\n        }\n    </List>\n);\n\nSkeletonList.propTypes = {};\n\nSkeletonList.defaultProps = {};\n\nexport default pure(SkeletonList);\n","import React, {useEffect} from \"react\";\nimport \"./SearchComponent.css\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {ArrowBack} from \"@material-ui/icons\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport {SearchYoutube} from \"../../functions/suggestSearch\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {Link, useHistory} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {getSong, getSongFromStorage, SuggestOfflineSongs} from \"../../functions/songs\";\nimport {Button, Slide} from \"@material-ui/core\";\nimport SkeletonList from \"../SkeletonList/SkeletonList\";\nimport {pure} from \"recompose\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginTop: '1rem',\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    iconButton: {\n        padding: 10,\n    },\n    divider: {\n        height: 28,\n        margin: 4,\n    },\n}));\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"left\" ref={ref} {...props} />;\n});\n\nconst SearchResultComponent = (props) => {\n    let history = useHistory();\n    const [open, setOpen] = React.useState(true);\n    const [resultsArray, setResultsArray] = React.useState([]);\n    const [listItems, setListItems] = React.useState(<SkeletonList length={5}/>);\n    const classes = useStyles();\n    const abortController = new AbortController();\n    const errorPage = (message = \"No Internet Connection\", button = <Button component={Link}\n                                                                            to={\"/search\"}>Retry</Button>) => (\n        <div className={\"errorPage text-center\"}\n             style={{position: \"absolute\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\"}}>\n            <img src={\"/./assets/icons/darkmode_nothingfound.svg\"} style={{width: \"8rem\", height: \"auto\"}}\n                 alt={\"Kabeers Music Logo\"}/>\n            <br/>\n            <div className={\"text-truncate\"}>{message}</div>\n            {button}\n        </div>\n    );\n\n    function PlaySong(video, metaData) {\n        getSong(video.id).then(value => {\n            if (value) {\n                //Avoid the Promise Error\n                setTimeout(function () {\n                    props.appState({\n                        uri: value,\n                        thumbnail: video.snippet.thumbnails.high.url,\n                        video: video,\n                        list: metaData.list,\n                        index: metaData.index\n                    });\n                }, 100);\n            }\n        });\n    }\n\n    function PlayOfflineSong(data, index) {\n        let videoID = '';\n        if (typeof data.videoElement.id === 'object') videoID = data.videoElement.id.videoId;\n        if (typeof data.videoElement.id === 'string') videoID = data.videoElement.id;\n        getSongFromStorage(videoID).then(value => {\n            if (value) {\n                //Avoid the Promise Error\n                data.videoElement.snippet.thumbnails.high.url = URL.createObjectURL(value.thumbnail);\n                props.appState({\n                    uri: URL.createObjectURL(value.blob),\n                    thumbnail: URL.createObjectURL(value.thumbnail),\n                    video: data.videoElement,\n                    list: {items: [data.videoElement]},\n                    index: index\n                }, false);\n            }\n        });\n    }\n\n\n    useEffect(() => {\n        if (!props.query) return history.push(\"/search\");\n        if (navigator.onLine) {\n            SearchYoutube(props.query, abortController)\n                .catch(setListItems(errorPage()))\n                .then(resultsArray => {\n                    if (!resultsArray) return;\n                    setListItems(() => resultsArray.items ? resultsArray.items.map((value, index) => {\n                        if (!value) return;\n                        return (\n                            <ListItem button key={index} onClick={() => PlaySong(value, {\n                                list: resultsArray, index: index\n                            })}>\n                                <ListItemIcon>\n                                    <Avatar alt={value.snippet.title} src={value.snippet.thumbnails.default.url}/>\n                                </ListItemIcon>\n                                <ListItemText primary={`${value.snippet.title}`}\n                                              secondary={`${value.snippet.channelTitle}`}/>\n                            </ListItem>\n                        );\n                    }) : errorPage(\"Nothing Found Retry\"));\n                })\n        } else {\n            SuggestOfflineSongs(props.query)\n                .then(resultsArray => {\n                    if (!resultsArray) return;\n                    setListItems(() => resultsArray.length ? resultsArray.map((value, index) => {\n                        value = value.item;\n                        if (!value) return errorPage(\"Nothing Matched your Search!\");\n                        return (\n                            <ListItem button key={index} onClick={() => {\n                                PlayOfflineSong(value, index);\n                            }}>\n                                <ListItemIcon>\n                                    <Avatar alt={value.title} src={URL.createObjectURL(value.thumbnail)}/>\n                                </ListItemIcon>\n                                <ListItemText primary={`${decodeURIComponent(value.title)}`}\n                                              secondary={`${value.channelTitle}`}/>\n                            </ListItem>\n                        );\n                    }) : null);\n                }).catch(e => {\n                setListItems(errorPage());\n            });\n        }\n        return () => {\n            abortController.abort();\n        };\n    }, []);\n    return (\n        <div className=\"SearchResultComponent\">\n            <Dialog fullScreen open={open} onClose={() => {\n            }}>\n                <AppBar className={`fixed-top`}>\n                    <Toolbar component={Link} to={`/search?q=${props.query}`}>\n                        {window.history ? <IconButton onClick={() => {\n                            setOpen(false);\n                        }} component={Link} style={{textDecoration: \"none\"}} to={\"/home\"} color=\"primary.light\"\n                                                      visibility={false}>\n                            <ArrowBack/>\n                        </IconButton> : <></>}\n                        <InputBase\n                            autoCapitalize={true}\n                            autoComplete={true}\n                            value={props.query}\n                            className={`${classes.input} text-light`}\n                            placeholder=\"Search Kabeers Music\"\n                            inputProps={{'aria-label': 'Search Kabeers Music'}}\n                        />\n                    </Toolbar>\n                </AppBar>\n                <div className={\"container px-3\"} style={{marginTop: \"4rem\"}}>\n                    <div className={\"row\"}>\n                        {listItems && listItems.length ? listItems : <SkeletonList length={10}/>}\n                    </div>\n                </div>\n            </Dialog>\n        </div>\n    )\n};\n\nSearchResultComponent.propTypes = {};\n\nSearchResultComponent.defaultProps = {};\n\nconst mapStateToProps = state => ({\n    query: state.q,\n});\nexport default connect(mapStateToProps)(pure(SearchResultComponent));\n"],"sourceRoot":""}