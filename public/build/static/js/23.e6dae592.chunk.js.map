{"version":3,"sources":["components/HideOnScroll/HideOnScroll.js","components/CustomAppBar/CustomAppBar.js"],"names":["HideOnScroll","props","arguments","length","undefined","Object","objectSpread","direction","appear","children","window","trigger","useScrollTrigger","target","react_default","a","createElement","Slide","in","defaultProps","pure","useStyles","makeStyles","appBar","width","marginLeft","CustomAppBar","isTv","Fragment","style","zIndex","hidden","progress_hidden","LinearProgress","className","AppBar","position","elevation","Toolbar","display","justifyContent","Avatar","src","Typography","color","Button","component","Link","to","IconButton","Search","components_HideOnScroll_HideOnScroll","onClick","store","dispatch","setDrawerState","edge","aria-label","Menu","variant","title","flex"],"mappings":"kQAOMA,EAAe,WAA0D,IAAzDC,EAAyDC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAAG,OAAAC,EAAA,EAAAD,CAAA,GAA7CJ,EAA6C,CAAtCM,UAAW,OAAQC,QAAQ,IAC5DC,EAAoBR,EAApBQ,SAAUC,EAAUT,EAAVS,OAIXC,EAAUC,YAAiB,CAACC,OAAQH,EAASA,SAAWN,IAE9D,OACCU,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOT,OAAQP,EAAMO,OAAQD,UAAWN,EAAMM,UAAWW,IAAKP,GAC5DF,IAcJT,EAAamB,aAAe,GAEbC,kBAAKpB,8BCfdqB,EAAYC,YAAW,CAC5BC,OAAQ,CACPC,MAAO,sBACPC,WAAY,YAGRC,EAAe,SAACzB,GAILoB,IAChB,OAAOpB,EAAM0B,KAEXb,EAAAC,EAAAC,cAACF,EAAAC,EAAMa,SAAP,KACCd,EAAAC,EAAAC,cAAA,OAAKa,MAAO,CAACC,OAAQ,SAAUC,OAAQ9B,EAAM+B,iBAC5ClB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAgBC,UAAW,eAE5BpB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQC,SAAS,SAASF,UAAW,mCAAoCG,UAAW,GACnFvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAST,MAAO,CAACL,MAAO,OAAQe,QAAS,cAAeC,eAAgB,kBACvE1B,EAAAC,EAAAC,cAAA,OAAKkB,UAAW,iBACfpB,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAQC,IAAK,mCACb5B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAYC,MAAO,cAAeV,UAAW,QAA7C,UAIDpB,EAAAC,EAAAC,cAAA,OAAKa,MAAO,CAACL,MAAO,OAAQe,QAAS,cAAeC,eAAgB,WACnE1B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQC,UAAWC,IAAMC,GAAI,SAA7B,QACAlC,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQC,UAAWC,IAAMC,GAAI,cAA7B,aACAlC,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQC,UAAWC,IAAMC,GAAI,YAA7B,WACAlC,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQC,UAAWC,IAAMC,GAAI,UAA7B,UAEDlC,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAYH,UAAWC,IAAMC,GAAI,WAChClC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,WAOLpC,EAAAC,EAAAC,cAACmC,EAAD,KACCrC,EAAAC,EAAAC,cAACmB,EAAA,EAAD,KACCrB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACCxB,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAYG,QApCE,WAClBC,IAAMC,SAASC,aAAe,KAmCOC,KAAK,QAAQ3B,MAAO,CAACe,MAAO,WAAYa,aAAW,QACnF3C,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,OAED5C,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAYd,MAAO,CAACe,MAAO,WAAYe,QAAQ,MAC7C1D,EAAM2D,OAAS,SAEjB9C,EAAAC,EAAAC,cAAA,OAAKa,MAAO,CAACgC,KAAM,cACnB/C,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CACCO,KAAK,QACL3B,MAAO,CAACe,MAAO,WACfa,aAAW,SACXX,UAAWC,IACXC,GAAI,WAEJlC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,WAaPxB,EAAaP,aAAe,GAEbC,sBAAKM","file":"static/js/23.e6dae592.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./HideOnScroll.css\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport Slide from \"@material-ui/core/Slide\";\nimport {pure} from \"recompose\";\n\nconst HideOnScroll = (props = {...props, direction: \"down\", appear: false}) => {\n\tconst {children, window} = props;\n\t// Note that you normally won't need to set the window ref as useScrollTrigger\n\t// will default to window.\n\t// This is only being set here because the demo is in an iframe.\n\tconst trigger = useScrollTrigger({target: window ? window() : undefined});\n\n\treturn (\n\t\t<Slide appear={props.appear} direction={props.direction} in={!trigger}>\n\t\t\t{children}\n\t\t</Slide>\n\t);\n};\n\nHideOnScroll.propTypes = {\n\tchildren: PropTypes.element.isRequired,\n\t/**\n\t * Injected by the documentation to work in an iframe.\n\t * You won't need it on your project.\n\t */\n\twindow: PropTypes.func,\n};\n\nHideOnScroll.defaultProps = {};\n\nexport default pure(HideOnScroll);\n","import React from \"react\";\nimport \"./CustomAppBar.css\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {Menu, Search} from \"@material-ui/icons\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Link} from \"react-router-dom\";\nimport store from \"../../Redux/store/store\";\nimport {setDrawerState} from \"../../Redux/actions/actions\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport HideOnScroll from \"../HideOnScroll/HideOnScroll\";\nimport {pure} from \"recompose\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nconst useStyles = makeStyles({\n\tappBar: {\n\t\twidth: \"calc(100% - 4.5rem)\",\n\t\tmarginLeft: \"4.5rem\",\n\t},\n});\nconst CustomAppBar = (props) => {\n\tconst OpenDrawer = () => {\n\t\tstore.dispatch(setDrawerState(true));\n\t};\n\tconst classes = useStyles();\n\treturn props.isTv ?\n\t\t(\n\t\t\t<React.Fragment>\n\t\t\t\t<div style={{zIndex: \"99999\"}} hidden={props.progress_hidden}>\n\t\t\t\t\t<LinearProgress className={\"fixed-top\"}/>\n\t\t\t\t</div>\n\t\t\t\t<AppBar position=\"sticky\" className={\"bg-transparent position-relative\"} elevation={0}>\n\t\t\t\t\t<Toolbar style={{width: \"100%\", display: \"inline-flex\", justifyContent: \"space-between\"}}>\n\t\t\t\t\t\t<div className={\"d-inline-flex\"}>\n\t\t\t\t\t\t\t<Avatar src={\"./assets/icons/smallTvIcon.svg\"}/>\n\t\t\t\t\t\t\t<Typography color={\"textPrimary\"} className={\"mt-2\"}>\n\t\t\t\t\t\t\t\tMUSIC\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div style={{width: \"100%\", display: \"inline-flex\", justifyContent: \"center\"}}>\n\t\t\t\t\t\t\t<Button component={Link} to={\"/home\"}>HOME</Button>\n\t\t\t\t\t\t\t<Button component={Link} to={\"/downloads\"}>DOWNLOADS</Button>\n\t\t\t\t\t\t\t<Button component={Link} to={\"/history\"}>HISTORY</Button>\n\t\t\t\t\t\t\t<Button component={Link} to={\"/liked\"}>LIKED</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<IconButton component={Link} to={\"/search\"}>\n\t\t\t\t\t\t\t\t<Search/>\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t</React.Fragment>\n\t\t) : (\n\t\t\t<HideOnScroll>\n\t\t\t\t<AppBar /*position-relative*/>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<IconButton onClick={OpenDrawer} edge=\"start\" style={{color: \"#FFFFFF\"}} aria-label=\"menu\">\n\t\t\t\t\t\t\t<Menu/>\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t<Typography style={{color: \"#FFFFFF\"}} variant=\"h6\">\n\t\t\t\t\t\t\t{props.title || \"Music\"}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<div style={{flex: \"1 1 auto\"}}/>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\t\tstyle={{color: \"#FFFFFF\"}}\n\t\t\t\t\t\t\taria-label=\"Search\"\n\t\t\t\t\t\t\tcomponent={Link}\n\t\t\t\t\t\t\tto={\"/search\"}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Search/>\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t</HideOnScroll>\n\t\t);\n};\n/*\n\t\t\t<div className={\"position-fixed w-100\"} style={{marginTop: '-5rem', zIndex: '55'}}>\n\n */\nCustomAppBar.propTypes = {};\n\nCustomAppBar.defaultProps = {};\n\nexport default pure(CustomAppBar);\n"],"sourceRoot":""}