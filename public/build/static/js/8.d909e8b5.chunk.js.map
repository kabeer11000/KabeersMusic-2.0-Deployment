{
  "version": 3,
  "sources": [
    "../node_modules/@material-ui/core/esm/Container/Container.js",
    "../node_modules/@material-ui/core/esm/Card/Card.js",
    "../node_modules/@material-ui/core/esm/CardActionArea/CardActionArea.js",
    "../node_modules/@material-ui/core/esm/CardMedia/CardMedia.js",
    "../node_modules/@material-ui/core/esm/CardContent/CardContent.js",
    "components/SongCard/SongCard.js",
    "components/home/home.js"
  ],
  "names": [
    "Container_Container",
    "react",
    "props",
    "ref",
    "classes",
    "className",
    "_props$component",
    "component",
    "Component",
    "_props$disableGutters",
    "disableGutters",
    "_props$fixed",
    "fixed",
    "_props$maxWidth",
    "maxWidth",
    "other",
    "Object",
    "objectWithoutProperties",
    "esm_extends",
    "clsx_m",
    "root",
    "concat",
    "capitalize",
    "String",
    "esm_Container_Container",
    "withStyles",
    "theme",
    "defineProperty",
    "width",
    "marginLeft",
    "boxSizing",
    "marginRight",
    "paddingLeft",
    "spacing",
    "paddingRight",
    "display",
    "breakpoints",
    "up",
    "keys",
    "values",
    "reduce",
    "acc",
    "breakpoint",
    "value",
    "maxWidthXs",
    "Math",
    "max",
    "xs",
    "maxWidthSm",
    "sm",
    "maxWidthMd",
    "md",
    "maxWidthLg",
    "lg",
    "maxWidthXl",
    "xl",
    "name",
    "Card_Card",
    "_props$raised",
    "raised",
    "Paper",
    "elevation",
    "esm_Card_Card",
    "overflow",
    "CardActionArea_CardActionArea",
    "children",
    "focusVisibleClassName",
    "ButtonBase",
    "focusVisible",
    "focusHighlight",
    "esm_CardActionArea_CardActionArea",
    "textAlign",
    "&:hover $focusHighlight",
    "opacity",
    "palette",
    "action",
    "hoverOpacity",
    "&$focusVisible $focusHighlight",
    "pointerEvents",
    "position",
    "top",
    "right",
    "bottom",
    "left",
    "borderRadius",
    "backgroundColor",
    "transition",
    "transitions",
    "create",
    "duration",
    "short",
    "MEDIA_COMPONENTS",
    "CardMedia_CardMedia",
    "image",
    "src",
    "style",
    "isMediaComponent",
    "indexOf",
    "composedStyle",
    "backgroundImage",
    "media",
    "img",
    "undefined",
    "esm_CardMedia_CardMedia",
    "backgroundSize",
    "backgroundRepeat",
    "backgroundPosition",
    "objectFit",
    "CardContent_CardContent",
    "esm_CardContent_CardContent",
    "padding",
    "&:last-child",
    "paddingBottom",
    "SongCard",
    "video_",
    "video",
    "snippet",
    "react_default",
    "a",
    "createElement",
    "onClick",
    "onPlay",
    "key_",
    "alt",
    "height",
    "thumbnails",
    "standard",
    "url",
    "title",
    "loading",
    "Typography",
    "gutterBottom",
    "variant",
    "slice",
    "color",
    "description",
    "channelTitle",
    "defaultProps",
    "ListArray",
    "HomeComponent",
    "_React$useState",
    "React",
    "useState",
    "fetch",
    "endPoints",
    "mostPopularFake",
    "youtube",
    "then",
    "v",
    "json",
    "setPopular",
    "items",
    "map",
    "index",
    "components_SongCard_SongCard",
    "PlaySong",
    "key",
    "_React$useState2",
    "slicedToArray",
    "popular",
    "data",
    "getSong",
    "id",
    "console",
    "log",
    "setTimeout",
    "appState",
    "uri",
    "thumbnail",
    "maxres",
    "list",
    "CssBaseline",
    "marginTop"
  ],
  "mappings": "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",
  "file": "static/js/8.d909e8b5.chunk.js",
  "sourcesContent": [
    "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);",
    "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);",
    "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      textAlign: 'inherit',\n      width: '100%',\n      '&:hover $focusHighlight': {\n        opacity: theme.palette.action.hoverOpacity\n      },\n      '&$focusVisible $focusHighlight': {\n        opacity: 0.12\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the action area is keyboard focused. */\n    focusVisible: {},\n\n    /* Styles applied to the overlay that covers the action area when it is keyboard focused. */\n    focusHighlight: {\n      overflow: 'hidden',\n      pointerEvents: 'none',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      borderRadius: 'inherit',\n      opacity: 0,\n      backgroundColor: 'currentcolor',\n      transition: theme.transitions.create('opacity', {\n        duration: theme.transitions.duration.short\n      })\n    }\n  };\n};\nvar CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      focusVisibleClassName = props.focusVisibleClassName,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"focusVisibleClassName\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref\n  }, other), children, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.focusHighlight\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActionArea'\n})(CardActionArea);",
    "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { chainPropTypes } from '@material-ui/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `component=\"picture or img\"`. */\n  img: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media, \"picture img\".indexOf(Component) !== -1 && classes.img),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('Material-UI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);",
    "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);",
    "import React from 'react';\nimport './SongCard.css';\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport {Typography} from \"@material-ui/core\";\n\n// = {title, description, tags, channelTitle, videoId, thumbnail}\nfunction SongCard(props) {\n    const video_ = props.video.snippet;\n    return (\n        <Card className={'SongCard'} style={{width: \"18rem\"}} onClick={() => props.onPlay(props.video, props.key_)}>\n            <CardActionArea>\n                <CardMedia\n                    component=\"img\"\n                    alt=\"Contemplative Reptile\"\n                    height=\"140\"\n                    image={video_.thumbnails.standard.url}\n                    title={video_.title}\n                    loading={'lazy'}\n\n                />\n                <CardContent className={'text-left'}>\n                    <Typography gutterBottom variant=\"h6\" component=\"p\" className={'text-truncate'}>\n                        {video_.title.slice(0, 70) + \" ...\"}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={'text-truncate'}>\n                        {video_.description.slice(0, 70) + \" ...\"}\n                        <span className={'text-muted'}>\n                        {video_.channelTitle}\n                    </span>\n                    </Typography>\n                </CardContent>\n            </CardActionArea>\n        </Card>\n    );\n}\n\nSongCard.propTypes = {};\n\nSongCard.defaultProps = {};\n\nexport default SongCard;\n",
    "import React from 'react';\nimport './home.css';\nimport {Container, CssBaseline, Typography} from \"@material-ui/core\";\nimport keys from \"../../api/keys/keys\";\nimport endPoints from \"../../api/endpoints/endpoints\";\nimport SongCard from \"../SongCard/SongCard\";\nimport {getSong} from \"../../functions/songs\";\n\nlet ListArray = [];\nconst HomeComponent = (props) => {\n    const [popular, setPopular] = React.useState(() => {\n        fetch(endPoints.mostPopularFake(keys.youtube))\n            .then(v => v.json())\n            .then(value => {\n                ListArray = value;\n                setPopular(value.items.map((video, index) => {\n                    return (<SongCard onPlay={PlaySong} key_={index} key={index} video={video}/>)\n                }));\n            });\n    });\n\n    function PlaySong(data, index) {\n        getSong(data.id).then(value => {\n            if (value) {\n                console.log(data);\n                //Avoid the Promise Error\n                setTimeout(function () {\n                    props.appState({\n                        uri: value,\n                        thumbnail: data.snippet.thumbnails.maxres.url,\n                        video: data,\n                        list: ListArray,\n                        index: index\n                    });\n                }, 100);\n            }\n            /* setAudioElemet(<div/>); setAudioElemet(<Player audio={new Audio(value)} thumbnail={data.snippet.thumbnails.maxres.url} video={data}/> */\n        });\n    }\n\n    return (\n        <div className=\"home\">\n            <CssBaseline/>\n            <div style={{marginTop: '5rem'}}>\n                <Typography variant={'h5'} className={'pl-3 text-left'}>\n                    Trending Now\n                </Typography>\n                <Container maxWidth=\"xl\" className={'px-0 mx-0'}>\n                    <div className={'cardSlider Slider'}>\n                        {popular}\n                    </div>\n                </Container>\n            </div>\n        </div>\n    );\n};\n\nHomeComponent.propTypes = {};\n\nHomeComponent.defaultProps = {};\n\nexport default HomeComponent;\n"
  ],
  "sourceRoot": ""
}
