{"version":3,"sources":["components/SearchComponent/SearchComponent.js"],"names":["useStyles","makeStyles","theme","root","marginTop","padding","display","alignItems","width","input","marginLeft","spacing","flex","iconButton","divider","height","margin","SearchComponent","props","history","useHistory","_React$useState","React","useState","_React$useState2","Object","E_Projects_phpstormprojects_music_react_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","open","setOpen","_React$useState3","_React$useState4","_React$useState5","_React$useState6","queryArray","setQueryArray","_React$useState7","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","Fragment","_React$useState8","listItems","setListItems","classes","Search","_ref","E_Projects_phpstormprojects_music_react_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","E_Projects_phpstormprojects_music_react_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","e","wrap","_context","prev","next","SuggestSearch","target","value","then","v","map","index","_material_ui_core_ListItem__WEBPACK_IMPORTED_MODULE_13__","button","key","component","Link","to","_material_ui_core_ListItemIcon__WEBPACK_IMPORTED_MODULE_14__","_material_ui_icons__WEBPACK_IMPORTED_MODULE_9__","_material_ui_core_ListItemText__WEBPACK_IMPORTED_MODULE_15__","primary","concat","suggestion","attributes","data","push","pathname","search","URLSearchParams","q","toString","store","dispatch","setQueryParams","stop","_x","apply","this","arguments","className","_material_ui_core_Dialog__WEBPACK_IMPORTED_MODULE_5__","fullScreen","onClose","_material_ui_core_AppBar__WEBPACK_IMPORTED_MODULE_6__","_material_ui_core_Toolbar__WEBPACK_IMPORTED_MODULE_7__","window","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_8__","onClick","color","visibility","_material_ui_icons__WEBPACK_IMPORTED_MODULE_10__","_material_ui_core_InputBase__WEBPACK_IMPORTED_MODULE_11__","autoCapitalize","autoComplete","autoFocus","onKeyUp","onKeyDown","getState","onFocus","onBlur","placeholder","inputProps","aria-label","class","style","defaultProps","connect","state","query"],"mappings":"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","file":"static/js/12.b1831f95.chunk.js","sourcesContent":["import React from 'react';\nimport './SearchComponent.css';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {ArrowBack, SearchOutlined} from \"@material-ui/icons\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport {SuggestSearch} from \"../../functions/suggestSearch\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {Link, useHistory} from \"react-router-dom\";\nimport store from \"../../Redux/store/store\";\nimport {connect} from \"react-redux\";\nimport {setQueryParams} from \"../../Redux/actions/actions\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginTop: '1rem',\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    iconButton: {\n        padding: 10,\n    },\n    divider: {\n        height: 28,\n        margin: 4,\n    },\n}));\nconst SearchComponent = (props) => {\n    let history = useHistory();\n    const [open, setOpen] = React.useState(true);\n    const [query, setQuery] = React.useState('');\n    const [queryArray, setQueryArray] = React.useState([]);\n    const [listItems, setListItems] = React.useState(<></>);\n    const classes = useStyles();\n    const ListItems = () => {\n        if (!queryArray) return;\n        setListItems(() => queryArray.map((value, index) => {\n            if (!value) return;\n            return (\n                <ListItem button key={index} component={Link} to={'/search/results'}>\n                    <ListItemIcon>\n                        <SearchOutlined/>\n                    </ListItemIcon>\n                    <ListItemText primary={`${value.suggestion.attributes.data}`}/>\n                </ListItem>\n            );\n        }));\n    };\n\n    const Search = async (e) => {\n        SuggestSearch(e.target.value).then(v => setQueryArray(v));\n        ListItems();\n        props.history.push({\n            pathname: `search`,\n            search: \"?\" + new URLSearchParams({q: e.target.value}).toString()\n        });\n        store.dispatch(setQueryParams(e.target.value));\n    };\n    const handleEnterPress = (e) => {\n        if (e.key === 'Enter') {\n            const query = store.getState().q;\n            if (query) return history.push(\"/search/results\");\n        }\n    };\n    return (\n        <div className=\"SearchComponent\">\n            <Dialog fullScreen open={open} onClose={() => {\n            }}>\n                <AppBar className={`fixed-top`}>\n                    <Toolbar>\n                        {window.history ? <IconButton onClick={() => {\n                            setOpen(false);\n                        }} component={Link} to={'/home'} color=\"primary.light\" visibility={false}>\n                            <ArrowBack/>\n                        </IconButton> : <></>}\n                        <InputBase\n                            autoCapitalize={true}\n                            autoComplete={true}\n                            autoFocus={true}\n                            onKeyUp={Search}\n                            onKeyDown={handleEnterPress}\n                            onFocus={() => {\n                            }}\n                            onBlur={() => {\n                                // search_iconChange('visible');\n                                // toolbar_colorChange('#CCC')\n                            }}\n                            className={`${classes.input} text-light`}\n                            placeholder=\"Search Kabeers Music\"\n                            inputProps={{'aria-label': 'Search Kabeers Music'}}\n                        />\n                        <SearchOutlined visibility={false}/>\n                    </Toolbar>\n                </AppBar>\n                <div class=\"container px-3\" style={{marginTop: \"4rem\"}}>\n                    <div class=\"row\">\n                        {listItems}\n                    </div>\n                </div>\n            </Dialog>\n        </div>\n    )\n};\n\nSearchComponent.propTypes = {};\n\nSearchComponent.defaultProps = {};\n\nconst mapStateToProps = state => ({\n    query: state.q,\n});\nexport default connect(mapStateToProps)(SearchComponent);\n"],"sourceRoot":""}