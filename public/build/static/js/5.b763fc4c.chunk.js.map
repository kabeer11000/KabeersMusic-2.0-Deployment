{"version":3,"sources":["../node_modules/@material-ui/core/esm/ListItemAvatar/ListItemAvatar.js","../node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","../node_modules/@material-ui/core/esm/Avatar/Avatar.js","../node_modules/@material-ui/core/esm/Container/Container.js","../node_modules/@material-ui/core/esm/internal/svg-icons/Cancel.js","../node_modules/@material-ui/core/esm/Chip/Chip.js"],"names":["_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","clsx__WEBPACK_IMPORTED_MODULE_4__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__","_List_ListContext__WEBPACK_IMPORTED_MODULE_6__","ListItemAvatar","props","ref","classes","className","other","Object","context","root","alignItems","alignItemsFlexStart","__webpack_exports__","minWidth","flexShrink","marginTop","name","Person","createSvgIcon","react","d","Avatar_Avatar","alt","childrenProp","children","_props$component","component","Component","imgProps","sizes","src","srcSet","_props$variant","variant","objectWithoutProperties","loaded","_ref","_React$useState","setLoaded","active","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","esm_extends","img","fallback","clsx_m","system","colorDefault","withStyles","theme","position","display","justifyContent","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","color","palette","background","default","backgroundColor","type","grey","circle","rounded","shape","square","textAlign","objectFit","textIndent","_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_3__","clsx__WEBPACK_IMPORTED_MODULE_5__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_6__","_utils_capitalize__WEBPACK_IMPORTED_MODULE_7__","Container","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","maxWidth","concat","String","marginLeft","boxSizing","marginRight","paddingLeft","spacing","paddingRight","breakpoints","up","keys","values","reduce","acc","breakpoint","value","maxWidthXs","Math","max","xs","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","xl","Cancel","isDeleteKeyboardEvent","keyboardEvent","key","Chip_Chip","avatarProp","avatar","clickableProp","clickable","_props$color","ComponentProp","deleteIconProp","deleteIcon","_props$disabled","disabled","iconProp","icon","label","onClick","onDelete","onKeyDown","onKeyUp","_props$size","size","chipRef","handleRef","useForkRef","handleDeleteIconClick","event","stopPropagation","small","ButtonBase","moreProps","customClasses","capitalize","deleteIconSmall","avatarSmall","iconSmall","role","undefined","outlined","primary","outlinedPrimary","secondary","outlinedSecondary","sizeSmall","deletable","aria-disabled","tabIndex","currentTarget","target","preventDefault","current","blur","labelSmall","deleteIconColor","colorManipulator","text","getContrastText","whiteSpace","transition","transitions","create","cursor","outline","textDecoration","border","padding","verticalAlign","&$disabled","opacity","pointerEvents","& $avatar","& $avatarColorPrimary","contrastText","dark","& $avatarColorSecondary","& $avatarSmall","colorPrimary","main","colorSecondary","WebkitTapHighlightColor","&:hover, &:focus","&:active","boxShadow","shadows","clickableColorPrimary","clickableColorSecondary","&:focus","deletableColorPrimary","deletableColorSecondary","$clickable&:hover, $clickable&:focus, $deletable&:focus","action","hoverOpacity","& $icon","& $iconSmall","& $deleteIcon","& $deleteIconSmall","avatarColorPrimary","avatarColorSecondary","iconColorPrimary","iconColorSecondary","textOverflow","margin","&:hover","deleteIconColorPrimary","&:hover, &:active","deleteIconColorSecondary","deleteIconOutlinedColorPrimary","deleteIconOutlinedColorSecondary"],"mappings":"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","file":"static/js/5.b763fc4c.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    minWidth: 56,\n    flexShrink: 0\n  },\n\n  /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n  alignItemsFlexStart: {\n    marginTop: 8\n  }\n};\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nvar ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component – normally `Avatar`.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemAvatar'\n})(ListItemAvatar);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = /*#__PURE__*/React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The shape of the avatar.\n   */\n  variant: PropTypes.oneOf(['circle', 'rounded', 'square'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport CancelIcon from '../internal/svg-icons/Cancel';\nimport withStyles from '../styles/withStyles';\nimport { emphasize, fade } from '../styles/colorManipulator';\nimport useForkRef from '../utils/useForkRef';\nimport unsupportedProp from '../utils/unsupportedProp';\nimport capitalize from '../utils/capitalize';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  var backgroundColor = theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700];\n  var deleteIconColor = fade(theme.palette.text.primary, 0.26);\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(13),\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: 32,\n      color: theme.palette.getContrastText(backgroundColor),\n      backgroundColor: backgroundColor,\n      borderRadius: 32 / 2,\n      whiteSpace: 'nowrap',\n      transition: theme.transitions.create(['background-color', 'box-shadow']),\n      // label will inherit this from root, then `clickable` class overrides this for both\n      cursor: 'default',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      textDecoration: 'none',\n      border: 'none',\n      // Remove `button` border\n      padding: 0,\n      // Remove `button` padding\n      verticalAlign: 'middle',\n      boxSizing: 'border-box',\n      '&$disabled': {\n        opacity: 0.5,\n        pointerEvents: 'none'\n      },\n      '& $avatar': {\n        marginLeft: 5,\n        marginRight: -6,\n        width: 24,\n        height: 24,\n        color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n        fontSize: theme.typography.pxToRem(12)\n      },\n      '& $avatarColorPrimary': {\n        color: theme.palette.primary.contrastText,\n        backgroundColor: theme.palette.primary.dark\n      },\n      '& $avatarColorSecondary': {\n        color: theme.palette.secondary.contrastText,\n        backgroundColor: theme.palette.secondary.dark\n      },\n      '& $avatarSmall': {\n        marginLeft: 4,\n        marginRight: -4,\n        width: 18,\n        height: 18,\n        fontSize: theme.typography.pxToRem(10)\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      height: 24\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `onClick` is defined or `clickable={true}`. */\n    clickable: {\n      userSelect: 'none',\n      WebkitTapHighlightColor: 'transparent',\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      },\n      '&:active': {\n        boxShadow: theme.shadows[1]\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"primary\"` is defined or `clickable={true}`. */\n    clickableColorPrimary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"secondary\"` is defined or `clickable={true}`. */\n    clickableColorSecondary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` is defined. */\n    deletable: {\n      '&:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"primary\"` is defined. */\n    deletableColorPrimary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"secondary\"` is defined. */\n    deletableColorSecondary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      backgroundColor: 'transparent',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity)\n      },\n      '& $avatar': {\n        marginLeft: 4\n      },\n      '& $avatarSmall': {\n        marginLeft: 2\n      },\n      '& $icon': {\n        marginLeft: 4\n      },\n      '& $iconSmall': {\n        marginLeft: 2\n      },\n      '& $deleteIcon': {\n        marginRight: 5\n      },\n      '& $deleteIconSmall': {\n        marginRight: 3\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(theme.palette.primary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(theme.palette.secondary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the `avatar` element. */\n    avatar: {},\n\n    /* Styles applied to the `avatar` element if `size=\"small\"`. */\n    avatarSmall: {},\n\n    /* Styles applied to the `avatar` element if `color=\"primary\"`. */\n    avatarColorPrimary: {},\n\n    /* Styles applied to the `avatar` element if `color=\"secondary\"`. */\n    avatarColorSecondary: {},\n\n    /* Styles applied to the `icon` element. */\n    icon: {\n      color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      marginLeft: 5,\n      marginRight: -6\n    },\n\n    /* Styles applied to the `icon` element if `size=\"small\"`. */\n    iconSmall: {\n      width: 18,\n      height: 18,\n      marginLeft: 4,\n      marginRight: -4\n    },\n\n    /* Styles applied to the `icon` element if `color=\"primary\"`. */\n    iconColorPrimary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the `icon` element if `color=\"secondary\"`. */\n    iconColorSecondary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the label `span` element. */\n    label: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      paddingLeft: 12,\n      paddingRight: 12,\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the label `span` element if `size=\"small\"`. */\n    labelSmall: {\n      paddingLeft: 8,\n      paddingRight: 8\n    },\n\n    /* Styles applied to the `deleteIcon` element. */\n    deleteIcon: {\n      WebkitTapHighlightColor: 'transparent',\n      color: deleteIconColor,\n      height: 22,\n      width: 22,\n      cursor: 'pointer',\n      margin: '0 5px 0 -6px',\n      '&:hover': {\n        color: fade(deleteIconColor, 0.4)\n      }\n    },\n\n    /* Styles applied to the `deleteIcon` element if `size=\"small\"`. */\n    deleteIconSmall: {\n      height: 16,\n      width: 16,\n      marginRight: 4,\n      marginLeft: -4\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"default\"`. */\n    deleteIconColorPrimary: {\n      color: fade(theme.palette.primary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"default\"`. */\n    deleteIconColorSecondary: {\n      color: fade(theme.palette.secondary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorPrimary: {\n      color: fade(theme.palette.primary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.main\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorSecondary: {\n      color: fade(theme.palette.secondary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.main\n      }\n    }\n  };\n};\n\nfunction isDeleteKeyboardEvent(keyboardEvent) {\n  return keyboardEvent.key === 'Backspace' || keyboardEvent.key === 'Delete';\n}\n/**\n * Chips represent complex entities in small blocks, such as a contact.\n */\n\n\nvar Chip = /*#__PURE__*/React.forwardRef(function Chip(props, ref) {\n  var avatarProp = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      clickableProp = props.clickable,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      ComponentProp = props.component,\n      deleteIconProp = props.deleteIcon,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      iconProp = props.icon,\n      label = props.label,\n      onClick = props.onClick,\n      onDelete = props.onDelete,\n      onKeyDown = props.onKeyDown,\n      onKeyUp = props.onKeyUp,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'default' : _props$variant,\n      other = _objectWithoutProperties(props, [\"avatar\", \"classes\", \"className\", \"clickable\", \"color\", \"component\", \"deleteIcon\", \"disabled\", \"icon\", \"label\", \"onClick\", \"onDelete\", \"onKeyDown\", \"onKeyUp\", \"size\", \"variant\"]);\n\n  var chipRef = React.useRef(null);\n  var handleRef = useForkRef(chipRef, ref);\n\n  var handleDeleteIconClick = function handleDeleteIconClick(event) {\n    // Stop the event from bubbling up to the `Chip`\n    event.stopPropagation();\n\n    if (onDelete) {\n      onDelete(event);\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target && isDeleteKeyboardEvent(event)) {\n      // will be handled in keyUp, otherwise some browsers\n      // might init navigation\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  var handleKeyUp = function handleKeyUp(event) {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target) {\n      if (onDelete && isDeleteKeyboardEvent(event)) {\n        onDelete(event);\n      } else if (event.key === 'Escape' && chipRef.current) {\n        chipRef.current.blur();\n      }\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    }\n  };\n\n  var clickable = clickableProp !== false && onClick ? true : clickableProp;\n  var small = size === 'small';\n  var Component = ComponentProp || (clickable ? ButtonBase : 'div');\n  var moreProps = Component === ButtonBase ? {\n    component: 'div'\n  } : {};\n  var deleteIcon = null;\n\n  if (onDelete) {\n    var customClasses = clsx(color !== 'default' && (variant === \"default\" ? classes[\"deleteIconColor\".concat(capitalize(color))] : classes[\"deleteIconOutlinedColor\".concat(capitalize(color))]), small && classes.deleteIconSmall);\n    deleteIcon = deleteIconProp && /*#__PURE__*/React.isValidElement(deleteIconProp) ? /*#__PURE__*/React.cloneElement(deleteIconProp, {\n      className: clsx(deleteIconProp.props.className, classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    }) : /*#__PURE__*/React.createElement(CancelIcon, {\n      className: clsx(classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    });\n  }\n\n  var avatar = null;\n\n  if (avatarProp && /*#__PURE__*/React.isValidElement(avatarProp)) {\n    avatar = /*#__PURE__*/React.cloneElement(avatarProp, {\n      className: clsx(classes.avatar, avatarProp.props.className, small && classes.avatarSmall, color !== 'default' && classes[\"avatarColor\".concat(capitalize(color))])\n    });\n  }\n\n  var icon = null;\n\n  if (iconProp && /*#__PURE__*/React.isValidElement(iconProp)) {\n    icon = /*#__PURE__*/React.cloneElement(iconProp, {\n      className: clsx(classes.icon, iconProp.props.className, small && classes.iconSmall, color !== 'default' && classes[\"iconColor\".concat(capitalize(color))])\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (avatar && icon) {\n      console.error('Material-UI: The Chip component can not handle the avatar ' + 'and the icon prop at the same time. Pick one.');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: clickable || onDelete ? 'button' : undefined,\n    className: clsx(classes.root, className, color !== 'default' && [classes[\"color\".concat(capitalize(color))], clickable && classes[\"clickableColor\".concat(capitalize(color))], onDelete && classes[\"deletableColor\".concat(capitalize(color))]], variant !== \"default\" && [classes.outlined, {\n      'primary': classes.outlinedPrimary,\n      'secondary': classes.outlinedSecondary\n    }[color]], disabled && classes.disabled, small && classes.sizeSmall, clickable && classes.clickable, onDelete && classes.deletable),\n    \"aria-disabled\": disabled ? true : undefined,\n    tabIndex: clickable || onDelete ? 0 : undefined,\n    onClick: onClick,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    ref: handleRef\n  }, moreProps, other), avatar || icon, /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.label, small && classes.labelSmall)\n  }, label), deleteIcon);\n});\nprocess.env.NODE_ENV !== \"production\" ? Chip.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Avatar element.\n   */\n  avatar: PropTypes.element,\n\n  /**\n   * This prop isn't supported.\n   * Use the `component` prop if you need to change the children structure.\n   */\n  children: unsupportedProp,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the chip will appear clickable, and will raise when pressed,\n   * even if the onClick prop is not defined.\n   * If false, the chip will not be clickable, even if onClick prop is defined.\n   * This can be used, for example,\n   * along with the component prop to indicate an anchor Chip is clickable.\n   */\n  clickable: PropTypes.bool,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Override the default delete icon element. Shown only if `onDelete` is set.\n   */\n  deleteIcon: PropTypes.element,\n\n  /**\n   * If `true`, the chip should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Icon element.\n   */\n  icon: PropTypes.element,\n\n  /**\n   * The content of the label.\n   */\n  label: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Callback function fired when the delete icon is clicked.\n   * If set, the delete icon will be shown.\n   */\n  onDelete: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * The size of the chip.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['default', 'outlined'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiChip'\n})(Chip);"],"sourceRoot":""}