{"version":3,"sources":["../node_modules/@material-ui/icons/esm/Pause.js","../node_modules/@material-ui/icons/esm/PlayCircleOutline.js","../node_modules/@material-ui/icons/esm/Close.js","components/Player/CustomMiniPlayerSlider.js","components/Player/MiniPlayer.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_utils_createSvgIcon__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","Object","a","createElement","d","Close","createSvgIcon","react_default","connect","state","componentState","currentSong","audioElement","props","MiniPlayer","Fragment","_React$useState","React","useState","currentTime","_React$useState2","slicedToArray","scrubbing","setScrubbing","handleScrubbing","_x","_handleScrubbing","apply","this","arguments","asyncToGenerator","regenerator_default","mark","_callee2","v","wrap","_context2","prev","next","isFinite","store","dispatch","setCurrentSongState","getState","videoElement","reOpenDialog","playList","stop","useEffect","setInterval","paused","Slider","className","defaultValue","value","min","color","max","duration","onChange","_ref","_callee","x","_context","abrupt","_x2","_x3","hidden","ComponentStates","IconButton","onClick","pauseAudio","Pause","button","setButton","_React$useState3","miniPlayer","_React$useState4","pause","playAudio","PlayCircleOutline","play","dialog","Grow","in","style","transitionProperty","AppBar","position","top","bottom","width","component","elevation","Dialog","onError","src","snippet","thumbnails","high","url","height","maxWidth","maxHeight","alt","Typography","title","Audio","Player_CustomMiniPlayerSlider"],"mappings":"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","file":"static/js/26.9fd02741.chunk.js","sourcesContent":["import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M6 19h4V5H6v14zm8-14v14h4V5h-4z\"\n}), 'Pause');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M10 16.5l6-4.5-6-4.5v9zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'PlayCircleOutline');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import React, {useEffect} from \"react\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport store from \"../../Redux/store/store\";\r\nimport {setCurrentSongState} from \"../../Redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst CustomMiniPlayerSlider = (props) => {\r\n    if (!props.componentState.MiniPlayer) {\r\n        return <></>;\r\n    }\r\n    const [scrubbing, setScrubbing] = React.useState(props.audioElement.currentTime);\r\n    useEffect(() => {\r\n        if (props.componentState.MiniPlayer) {\r\n            setInterval(() => !props.audioElement.paused && props.componentState.MiniPlayer ? setScrubbing(props.audioElement.currentTime) : null, 1000);\r\n        }\r\n    }, []);\r\n\r\n    async function handleScrubbing(v) {\r\n        if (isFinite(v)) {\r\n            setScrubbing(v);\r\n            props.audioElement.currentTime = v;\r\n            // Update Redux State\r\n            store.dispatch(setCurrentSongState(\r\n                props.audioElement,\r\n                store.getState().currentSong.videoElement,\r\n                store.getState().currentSong.componentState,\r\n                store.getState().currentSong.reOpenDialog,\r\n                store.getState().currentSong.playList));\r\n        }\r\n    }\r\n\r\n    return (<Slider\r\n        className={'p-0 m-0'}\r\n        defaultValue={0}\r\n        value={scrubbing}\r\n        min={0.0}\r\n        color={'primary'}\r\n        max={props.audioElement.duration}\r\n        onChange={async (v, x) => handleScrubbing(x)}\r\n    />);\r\n};\r\nconst mapStateToProps = state => ({\r\n    componentState: state.currentSong.componentState,\r\n    audioElement: state.currentSong.audioElement,\r\n});\r\nexport default connect(mapStateToProps)(CustomMiniPlayerSlider);\r\n","import {AppBar, Grow, IconButton, Typography} from \"@material-ui/core\";\r\nimport {Close, Pause, PlayCircleOutline} from \"@material-ui/icons\";\r\nimport React, {useEffect} from \"react\";\r\nimport store from \"../../Redux/store/store\";\r\nimport {setCurrentSongState} from \"../../Redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport CustomMiniPlayerSlider from \"./CustomMiniPlayerSlider\";\r\n\r\n\r\nconst MiniPlayer = (props) => {\r\n    if (props.hidden) return <></>;\r\n    const\r\n        ComponentStates = props.componentState,\r\n        audioElement = props.audioElement,\r\n        videoElement = props.videoElement;\r\n    const [button, setButton] = React.useState(<IconButton onClick={pauseAudio}><Pause color={\"#fff\"}/></IconButton>);\r\n    const [open, setOpen] = React.useState(store.getState().currentSong.componentState.miniPlayer);\r\n\r\n    async function handleScrubbing(v) {\r\n        if (isFinite(v)) {\r\n            audioElement.currentTime = v;\r\n            // Update Redux State\r\n            store.dispatch(setCurrentSongState(audioElement, videoElement, {...ComponentStates}));\r\n        }\r\n    }\r\n\r\n    function cutCurrentSongState() {\r\n        audioElement.pause();\r\n        store.dispatch(setCurrentSongState(new Audio(''), videoElement, {\r\n            Dialog: false,\r\n            MiniPlayer: false\r\n        }, props.reOpenDialog, props.playList));\r\n        audioElement.src = '#';\r\n    }\r\n\r\n    function pauseAudio() {\r\n        audioElement.pause();\r\n        setButton(<IconButton onClick={playAudio}><PlayCircleOutline color={'#fff'}/></IconButton>);\r\n\r\n    }\r\n\r\n    function playAudio() {\r\n        audioElement.play();\r\n        setButton(<IconButton onClick={pauseAudio}><Pause\r\n            color={'#fff'}/></IconButton>);\r\n    }\r\n\r\n    useEffect(() => {\r\n        // TODO Because you lisened to travis scott\r\n        // Record artist name to database for that user\r\n        // Search Yt for artist name\r\n        // Show Because You Listened to travis scott\r\n\r\n        /*\r\n        const Mounted = true;\r\n        if (!Mounted) return null;\r\n        document.addEventListener('swiped-up', function (e) {\r\n            props.reOpenDialog();\r\n            // Update Redux State\r\n            store.dispatch(setCurrentSongState(audioElement, videoElement, {\r\n                Dialog: true,\r\n                MiniPlayer: false\r\n            }, props.reOpenDialog, props.playList));\r\n            if (props.componentState.Dialog) {\r\n                store.getState().currentSong.reOpenDialog();\r\n            }\r\n        });\r\n         */\r\n    });\r\n\r\n    if (!ComponentStates.dialog && ComponentStates.MiniPlayer && audioElement !== null || '' || undefined) {\r\n        return (\r\n            <Grow in={true} style={{transitionProperty: 1000}}>\r\n                <AppBar color={\"slideDown primary.miniPlayer.main\"} style={{\r\n                    position: \"fixed\",\r\n                    top: \"auto\",\r\n                    bottom: \"3.5rem\",\r\n                    width: \"100%\",\r\n                }} component={\"div\"} elevation={1} className={\"d-inline-flex KabeersMiniPlayerContainer\"}>\r\n                    <div className={\"d-inline-flex\"}>\r\n                        <div onClick={() => {\r\n                            props.reOpenDialog();\r\n                            // Update Redux State\r\n                            store.dispatch(setCurrentSongState(audioElement, videoElement, {\r\n                                Dialog: true,\r\n                                MiniPlayer: false\r\n                            }, props.reOpenDialog, props.playList));\r\n                            if (props.componentState.Dialog) store.getState().currentSong.reOpenDialog();\r\n                        }} className={\"d-inline-flex\"}>\r\n                            <img\r\n                                onError=\"this.onerror=null;this.src='http://docs-kabeersnetwork-kview-app-sta.rf.gd/Private/uploads/5f58af5918860unnamed.jpg';\"\r\n                                src={videoElement.snippet.thumbnails.high.url} style={{\r\n                                width: \"4rem\",\r\n                                height: \"3rem\",\r\n                                maxWidth: \"5rem!important\",\r\n                                maxHeight: \"4rem!important\"\r\n                            }}\r\n                                alt={\"Song Image\"} className={\"KabeersMiniPlayerImage\"}/>\r\n                            <Typography component={\"span\"} className={\"text-truncate p-2 KabeersMiniPlayerText\"}\r\n                                        color={\"#000\"} style={{\r\n                                width: \"10em\",\r\n                                color: \"primary.miniPlayer.text\"\r\n                        }}>{videoElement.snippet.title || 'Untitled'}\r\n                        </Typography>\r\n                        </div>\r\n                        <div className={`float-right ml-auto`}>\r\n                            {button}\r\n                            <IconButton onClick={cutCurrentSongState}><Close/></IconButton>\r\n                        </div>\r\n                    </div>\r\n                    <CustomMiniPlayerSlider/>\r\n                </AppBar>\r\n            </Grow>\r\n        );\r\n    }\r\n    return (<React.Fragment/>);\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    componentState: state.currentSong.componentState,\r\n    audioElement: state.currentSong.audioElement,\r\n    videoElement: state.currentSong.videoElement,\r\n    reOpenDialog: state.currentSong.reOpenDialog,\r\n    playList: state.currentSong.playList\r\n});\r\nexport default connect(mapStateToProps)(MiniPlayer);\r\n"],"sourceRoot":""}