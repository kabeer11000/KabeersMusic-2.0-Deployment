{"version":3,"sources":["components/FeedBack/FeedBack.js","components/Settings/Settings.js"],"names":["pure","_React$useState","React","useState","_React$useState2","Object","slicedToArray","dialogVisible","setDialogVisible","_useSnackbar","useSnackbar","enqueueSnackbar","closeSnackbar","react_default","a","createElement","Fragment","Tooltip","title","arrow","IconButton","onClick","Feedback_default","dist","open","onClose","onSubmit","Settings","props","_React$useState3","localStorage","getItem","storageIndex","castEnabled","JSON","parse","_React$useState4","_React$useState5","casting","checkedB","keyboard","onScreenKeyboard","_React$useState6","state","setState","dialog","useDialog","handleChange","event","objectSpread","defineProperty","target","name","checked","className","CustomAppBar_lazy","List","subheader","ListSubheader","style","display","justifyContent","userData","Avatar","alt","atob","username","src","account_image","BrokenImage","ListItemText","id","primary","concat","Divider","ListItem","ListItemIcon","Brightness4","ListItemSecondaryAction","Switch","edge","onChange","handleTheme","darkMode","inputProps","aria-labelledby","Cast","e","setItem","FeedBack","button","config","secondary","message","TextField","disabled","variant","value","getDeviceId","alert","Keyboard","defaultProps"],"mappings":"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","file":"static/js/28.18d31d7c.chunk.js","sourcesContent":["import React from \"react\";\nimport {IconButton, Tooltip} from \"@material-ui/core\";\nimport FeedbackIcon from \"@material-ui/icons/Feedback\";\nimport {FeedbackDialog} from \"mui-feedback-dialog\";\nimport {useSnackbar} from \"notistack\";\nimport {pure} from \"recompose\";\n\n\nconst FeedbackButton = () => {\n\tconst [dialogVisible, setDialogVisible] = React.useState(false);\n\tconst {enqueueSnackbar, closeSnackbar} = useSnackbar();\n\n\treturn <React.Fragment>\n\t\t<Tooltip title='Send Feedback' arrow>\n\t\t\t<IconButton onClick={() => setDialogVisible(true)}>\n\t\t\t\t<FeedbackIcon/>\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t\t<FeedbackDialog\n\t\t\topen={dialogVisible}\n\t\t\tonClose={() => setDialogVisible(false)}\n\t\t\tonSubmit={() => {\n\t\t\t\tenqueueSnackbar(\"FeedBack Sent!, We will get back to you soon\");\n\t\t\t}\n\t\t\t}/>\n\t</React.Fragment>;\n};\n\nexport default pure(FeedbackButton);\n","import React from \"react\";\nimport \"./Settings.css\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Switch from \"@material-ui/core/Switch\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport {Brightness4, BrokenImage, Cast, Keyboard} from \"@material-ui/icons\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport CustomAppBar from \"../CustomAppBar/CustomAppBar.lazy\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Divider from \"@material-ui/core/Divider\";\nimport FeedbackButton from \"../FeedBack/FeedBack\";\nimport {storageIndex} from \"../../functions/Helper/storageIndex\";\nimport {pure} from \"recompose\";\nimport {useDialog} from \"muibox\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {getDeviceId} from \"../../functions/Cast/Cast\";\n\nconst Settings = (props) => {\n\tconst [checked, setChecked] = React.useState([\"darkmode\", \"casting\"]);\n\tconst [casting, setCasting] = React.useState(localStorage.getItem(storageIndex.castEnabled) === null ? false : JSON.parse(localStorage.getItem(storageIndex.castEnabled)));\n\tconst [state, setState] = React.useState({\n\t\tcasting: localStorage.getItem(storageIndex.castEnabled) === null ? false : JSON.parse(localStorage.getItem(storageIndex.castEnabled)),\n\t\tcheckedB: true,\n\t\tkeyboard: localStorage.getItem(storageIndex.onScreenKeyboard) === null ? false : JSON.parse(localStorage.getItem(storageIndex.onScreenKeyboard))\n\t});\n\tconst dialog = useDialog();\n\n\tconst handleToggle = (value) => () => {\n\t\tconst currentIndex = checked.indexOf(value);\n\t\tconst newChecked = [...checked];\n\n\t\tif (currentIndex === -1) {\n\t\t\tnewChecked.push(value);\n\t\t} else {\n\t\t\tnewChecked.splice(currentIndex, 1);\n\t\t}\n\t\tsetChecked(newChecked);\n\t};\n\tconst handleChange = (event) => {\n\t\tsetState({...state, [event.target.name]: !event.target.checked});\n\t};\n\treturn (\n\t\t<div className=\"Settings\">\n\t\t\t<CustomAppBar title={\"Settings\"}/>\n\t\t\t<List className={\"mt-5 text-left\"} subheader={<ListSubheader>Settings</ListSubheader>}>\n\t\t\t\t<div style={{display: \"inline-flex\", justifyContent: \"center\"}} className={\"w-100\"}>\n\t\t\t\t\t{localStorage.getItem(storageIndex.userData) ?\n\t\t\t\t\t\t<Avatar alt={JSON.parse(atob(localStorage.getItem(storageIndex.userData))).username}\n\t\t\t\t\t\t\t\tsrc={JSON.parse(atob(localStorage.getItem(storageIndex.userData))).account_image}/> :\n\t\t\t\t\t\t<Avatar src={<BrokenImage/>}/>}\n\t\t\t\t</div>\n\t\t\t\t<div className={\"text-center\"}>\n\t\t\t\t\t<ListItemText id=\"switch-list-label-wifi\"\n\t\t\t\t\t\t\t\t  primary={`Welcome ${localStorage.getItem(storageIndex.userData) === null ? \"User\" : JSON.parse(atob(localStorage.getItem(storageIndex.userData))).username}`}/>\n\t\t\t\t</div>\n\t\t\t\t<Divider/>\n\t\t\t\t<ListItem>\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<Brightness4/>\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText id=\"switch-list-label-wifi\" primary=\"Dark Mode\"/>\n\t\t\t\t\t<ListItemSecondaryAction>\n\t\t\t\t\t\t<Switch\n\t\t\t\t\t\t\tedge=\"end\"\n\t\t\t\t\t\t\tonChange={props.handleTheme}\n\t\t\t\t\t\t\tchecked={localStorage.getItem(storageIndex.darkMode) === null ? false : JSON.parse(localStorage.getItem(storageIndex.darkMode))}\n\t\t\t\t\t\t\tinputProps={{\"aria-labelledby\": \"switch-list-label-wifi\"}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ListItemSecondaryAction>\n\t\t\t\t</ListItem>\n\t\t\t\t<ListItem>\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<Cast/>\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText id=\"switch-list-label-wifi\" primary=\"Song Casting\"/>\n\t\t\t\t\t<ListItemSecondaryAction>\n\t\t\t\t\t\t<Switch\n\t\t\t\t\t\t\tedge=\"end\"\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\tlocalStorage.setItem(storageIndex.castEnabled, !state.casting);\n\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tchecked={state.casting}\n\t\t\t\t\t\t\tinputProps={{\"aria-labelledby\": \"switch-list-label-wifi\"}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ListItemSecondaryAction>\n\t\t\t\t</ListItem>\n\t\t\t\t<ListItem>\n\t\t\t\t\t<ListItemText id=\"switch-list-label-bluetooth\" primary=\"Feedback and Help\"/>\n\t\t\t\t\t<ListItemSecondaryAction>\n\t\t\t\t\t\t<FeedbackButton/>\n\t\t\t\t\t</ListItemSecondaryAction>\n\t\t\t\t</ListItem>\n\t\t\t\t<ListItem button onClick={() => {\n\t\t\t\t\tconst config = {\n\t\t\t\t\t\ttitle: (\n\t\t\t\t\t\t\t<List className={\"p-0 m-0\"}>\n\t\t\t\t\t\t\t\t<ListItem className={\"p-0 m-0\"}>\n\t\t\t\t\t\t\t\t\t<ListItemText className={\"p-0 m-0\"} primary={\"Device Cast Id\"}\n\t\t\t\t\t\t\t\t\t\t\t\t  secondary={\"This Will be used when casting to this device\"}/>\n\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t),\n\t\t\t\t\t\tmessage: (\n\t\t\t\t\t\t\t<TextField disabled variant=\"filled\" value={getDeviceId()}/>\n\t\t\t\t\t\t) || \"Nothing Here!\",\n\t\t\t\t\t};\n\t\t\t\t\tdialog.alert(config);\n\t\t\t\t}}>\n\t\t\t\t\t<ListItemText primary={\"Device ID\"} secondary={\"Device Id When Casting\"}/>\n\t\t\t\t\t<ListItemSecondaryAction>\n\t\t\t\t\t\t<Cast/>\n\t\t\t\t\t</ListItemSecondaryAction>\n\t\t\t\t</ListItem>\n\t\t\t\t<ListItem>\n\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t<Keyboard/>\n\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t<ListItemText id=\"switch-list-label-wifi\" primary=\"onScreen Keyboard\"/>\n\t\t\t\t\t<ListItemSecondaryAction>\n\t\t\t\t\t\t<Switch\n\t\t\t\t\t\t\tedge=\"end\"\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\tlocalStorage.setItem(storageIndex.onScreenKeyboard, !state.keyboard);\n\t\t\t\t\t\t\t\thandleChange(e);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tchecked={state.casting}\n\t\t\t\t\t\t\tinputProps={{\"aria-labelledby\": \"switch-list-label-wifi\"}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ListItemSecondaryAction>\n\t\t\t\t</ListItem>\n\n\t\t\t</List>\n\t\t</div>\n\t);\n};\n\nSettings.propTypes = {};\n\nSettings.defaultProps = {};\n\nexport default pure(Settings);\n"],"sourceRoot":""}