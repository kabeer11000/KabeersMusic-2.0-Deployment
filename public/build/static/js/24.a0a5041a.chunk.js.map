{"version":3,"sources":["components/FeedBack/FeedBack.js","components/Settings/Settings.js"],"names":["FeedbackButton","_React$useState","React","useState","_React$useState2","Object","slicedToArray","dialogVisible","setDialogVisible","_useSnackbar","useSnackbar","enqueueSnackbar","closeSnackbar","react_default","a","createElement","Fragment","Tooltip","title","arrow","IconButton","onClick","Feedback_default","dist","open","onClose","onSubmit","Settings","props","className","CustomAppBar_lazy","List","subheader","ListSubheader","style","display","justifyContent","localStorage","getItem","Avatar","alt","JSON","parse","username","src","avatar","BrokenImage","ListItemText","id","primary","concat","Divider","ListItem","ListItemIcon","Brightness4","ListItemSecondaryAction","Switch","edge","onChange","handleTheme","checked","inputProps","aria-labelledby","FeedBack_FeedbackButton","defaultProps"],"mappings":"sUAOMA,EAAiB,WAAM,IAAAC,EACiBC,IAAMC,UAAS,GADhCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAClBM,EADkBH,EAAA,GACHI,EADGJ,EAAA,GAAAK,EAEgBC,cAAlCC,EAFkBF,EAElBE,gBAFkBF,EAEDG,cAExB,OAAOC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACHH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,MAAM,gBAAgBC,OAAK,GAChCN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAYC,QAAS,kBAAMb,GAAiB,KACxCK,EAAAC,EAAAC,cAACO,EAAAR,EAAD,QAGRD,EAAAC,EAAAC,cAACQ,EAAA,eAAD,CACIC,KAAMjB,EACNkB,QAAS,kBAAMjB,GAAiB,IAChCkB,SAAU,WACNf,EAAgB,qDCN1BgB,EAAW,SAACC,GAAU,IAAA3B,EACMC,IAAMC,SAAS,CAAC,aADtBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAAAG,EAAA,GAAAA,EAAA,GAexB,OACIS,EAAAC,EAAAC,cAAA,OAAKc,UAAU,YACXhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAcZ,MAAO,aACrBL,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMF,UAAW,iBAAkBG,UAAWnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,kBAC1CpB,EAAAC,EAAAC,cAAA,OAAKmB,MAAO,CAACC,QAAS,cAAeC,eAAgB,UAAWP,UAAW,SACtEQ,aAAaC,QAAQ,aAClBzB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAQC,IAAKC,KAAKC,MAAML,aAAaC,QAAQ,cAAcK,SACnDC,IAAKH,KAAKC,MAAML,aAAaC,QAAQ,cAAcO,SAC3DhC,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAQK,IAAK/B,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,SAErBjC,EAAAC,EAAAC,cAAA,OAAKc,UAAW,eACZhB,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAcC,GAAG,yBACHC,QAAO,WAAAC,OAAmD,OAAtCb,aAAaC,QAAQ,aAAwB,OAASG,KAAKC,MAAML,aAAaC,QAAQ,cAAcK,aAE1I9B,EAAAC,EAAAC,cAACoC,EAAA,EAAD,MACAtC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,KACIvC,EAAAC,EAAAC,cAACsC,EAAA,EAAD,KACIxC,EAAAC,EAAAC,cAACuC,EAAA,EAAD,OAEJzC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAcC,GAAG,yBAAyBC,QAAQ,cAClDpC,EAAAC,EAAAC,cAACwC,EAAA,EAAD,KACI1C,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CACIC,KAAK,MACLC,SAAU9B,EAAM+B,YAChBC,QAA8C,OAArCvB,aAAaC,QAAQ,aAA+BG,KAAKC,MAAML,aAAaC,QAAQ,aAC7FuB,WAAY,CAACC,kBAAmB,8BAI5CjD,EAAAC,EAAAC,cAACqC,EAAA,EAAD,KACIvC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAcC,GAAG,8BAA8BC,QAAQ,sBACvDpC,EAAAC,EAAAC,cAACwC,EAAA,EAAD,KACI1C,EAAAC,EAAAC,cAACgD,EAAD,WAUxBpC,EAASqC,aAAe,GAETrC","file":"static/js/24.a0a5041a.chunk.js","sourcesContent":["import React from 'react'\nimport {IconButton, Tooltip} from '@material-ui/core'\nimport FeedbackIcon from '@material-ui/icons/Feedback';\nimport {FeedbackDialog} from 'mui-feedback-dialog'\nimport {useSnackbar} from \"notistack\";\n\n\nconst FeedbackButton = () => {\n    const [dialogVisible, setDialogVisible] = React.useState(false);\n    const {enqueueSnackbar, closeSnackbar} = useSnackbar();\n\n    return <React.Fragment>\n        <Tooltip title='Send Feedback' arrow>\n            <IconButton onClick={() => setDialogVisible(true)}>\n                <FeedbackIcon/>\n            </IconButton>\n        </Tooltip>\n        <FeedbackDialog\n            open={dialogVisible}\n            onClose={() => setDialogVisible(false)}\n            onSubmit={() => {\n                enqueueSnackbar('FeedBack Sent!, We will get back to you soon');\n            }\n            }/>\n    </React.Fragment>\n};\n\nexport {\n    FeedbackButton\n}\n","import React from 'react';\nimport './Settings.css';\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Switch from \"@material-ui/core/Switch\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport {Brightness4, BrokenImage} from \"@material-ui/icons\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport CustomAppBar from \"../CustomAppBar/CustomAppBar.lazy\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {FeedbackButton} from \"../FeedBack/FeedBack\";\n\nconst Settings = (props) => {\n    const [checked, setChecked] = React.useState(['darkmode']);\n\n    const handleToggle = (value) => () => {\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setChecked(newChecked);\n    };\n    return (\n        <div className=\"Settings\">\n            <CustomAppBar title={'Settings'}/>\n            <List className={'mt-5 text-left'} subheader={<ListSubheader>Settings</ListSubheader>}>\n                <div style={{display: 'inline-flex', justifyContent: 'center'}} className={'w-100'}>\n                    {localStorage.getItem('user_data') ?\n                        <Avatar alt={JSON.parse(localStorage.getItem('user_data')).username}\n                                src={JSON.parse(localStorage.getItem('user_data')).avatar}/> :\n                        <Avatar src={<BrokenImage/>}/>}\n                </div>\n                <div className={'text-center'}>\n                    <ListItemText id=\"switch-list-label-wifi\"\n                                  primary={`Welcome ${localStorage.getItem('user_data') === null ? 'User' : JSON.parse(localStorage.getItem('user_data')).username}`}/>\n                </div>\n                <Divider/>\n                <ListItem>\n                    <ListItemIcon>\n                        <Brightness4/>\n                    </ListItemIcon>\n                    <ListItemText id=\"switch-list-label-wifi\" primary=\"Dark Mode\"/>\n                    <ListItemSecondaryAction>\n                        <Switch\n                            edge=\"end\"\n                            onChange={props.handleTheme}\n                            checked={localStorage.getItem('darkmode') === null ? false : JSON.parse(localStorage.getItem('darkmode'))}\n                            inputProps={{'aria-labelledby': 'switch-list-label-wifi'}}\n                        />\n                    </ListItemSecondaryAction>\n                </ListItem>\n                <ListItem>\n                    <ListItemText id=\"switch-list-label-bluetooth\" primary=\"Feedback and Help\"/>\n                    <ListItemSecondaryAction>\n                        <FeedbackButton/>\n                    </ListItemSecondaryAction>\n                </ListItem>\n            </List>\n        </div>\n    );\n};\n\nSettings.propTypes = {};\n\nSettings.defaultProps = {};\n\nexport default Settings;\n"],"sourceRoot":""}