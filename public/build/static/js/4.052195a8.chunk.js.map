{"version":3,"sources":["../node_modules/@material-ui/core/esm/ListItemIcon/ListItemIcon.js","../node_modules/@material-ui/core/esm/withWidth/withWidth.js","../node_modules/@material-ui/core/esm/Hidden/HiddenJs.js","../node_modules/@material-ui/core/esm/Hidden/HiddenCss.js","../node_modules/@material-ui/core/esm/Hidden/Hidden.js","../node_modules/@material-ui/core/esm/SwipeableDrawer/SwipeArea.js","../node_modules/@material-ui/core/esm/SwipeableDrawer/SwipeableDrawer.js"],"names":["_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","clsx__WEBPACK_IMPORTED_MODULE_4__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__","_List_ListContext__WEBPACK_IMPORTED_MODULE_6__","ListItemIcon","props","ref","classes","className","other","Object","context","root","alignItems","alignItemsFlexStart","__webpack_exports__","theme","minWidth","color","palette","action","active","flexShrink","display","marginTop","name","d","isWidthUp","isWidthDown","_material_ui_styles__WEBPACK_IMPORTED_MODULE_4__","hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_5__","hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_5___default","n","_styles_useTheme__WEBPACK_IMPORTED_MODULE_6__","_styles_createBreakpoints__WEBPACK_IMPORTED_MODULE_7__","_useMediaQuery__WEBPACK_IMPORTED_MODULE_8__","breakpoint","width","arguments","length","undefined","indexOf","useEnhancedEffect","window","options","Component","_options$withTheme","withTheme","withThemeOption","_options$noSSR","noSSR","initialWidthOption","initialWidth","WithWidth","contextTheme","_getThemeProps","_React$useState","mountedState","setMountedState","widthComputed","breakpoints","keys","slice","reverse","reduce","output","key","matches","up","more","HiddenJs","children","only","useTheme","visible","Array","isArray","i","_i","_breakpoint","breakpointUp","concat","breakpointDown","withWidth","propTypes","prop_types_default","a","node","string","implementation","oneOf","lgDown","bool","lgUp","mdDown","mdUp","oneOfType","arrayOf","smDown","smUp","isRequired","xlDown","xlUp","xsDown","xsUp","Hidden_HiddenJs","Hidden_HiddenCss","withStyles","hidden","acc","capitalize","defineProperty","down","objectWithoutProperties","clsx","push","forEach","react","join","_props$implementation","_props$lgDown","_props$lgUp","_props$mdDown","_props$mdUp","_props$smDown","_props$smUp","_props$xlDown","_props$xlUp","_props$xsDown","_props$xsUp","esm_extends","SwipeArea_SwipeArea","anchor","clsx_m","style","Drawer","SwipeableDrawer_SwipeArea","position","top","left","bottom","zIndex","drawer","anchorLeft","right","anchorRight","anchorTop","anchorBottom","nodeThatClaimedTheSwipe","calculateCurrentX","touches","document","body","offsetWidth","pageX","calculateCurrentY","innerHeight","clientY","getMaxTranslate","horizontalSwipe","paperInstance","clientWidth","clientHeight","getTranslate","currentTranslate","startLocation","open","maxTranslate","Math","min","max","iOS","navigator","test","userAgent","transitionDurationDefault","enter","transitions","enteringScreen","exit","leavingScreen","SwipeableDrawer_SwipeableDrawer","inProps","getThemeProps","_props$anchor","_props$disableBackdro","disableBackdropTransition","_props$disableDiscove","disableDiscovery","_props$disableSwipeTo","disableSwipeToOpen","hideBackdrop","_props$hysteresis","hysteresis","_props$minFlingVeloci","minFlingVelocity","_props$ModalProps","ModalProps","BackdropProps","ModalPropsProp","onClose","onOpen","_props$PaperProps","PaperProps","SwipeAreaProps","_props$swipeAreaWidth","swipeAreaWidth","_props$transitionDura","transitionDuration","_props$variant","variant","maybeSwiping","setMaybeSwiping","swipeInstance","isSwiping","swipeAreaRef","backdropRef","paperRef","touchDetected","calculatedDurationRef","current","setPosition","translate","_options$mode","mode","_options$changeTransi","changeTransition","anchorRtl","rtlTranslateMultiplier","transform","drawerStyle","webkitTransform","transition","create","utils","timeout","webkitTransition","backdropStyle","opacity","handleBodyTouchEnd","useEventCallback","event","horizontal","changedTouches","startX","startY","translateRatio","abs","velocity","handleBodyTouchMove","currentX","currentY","contains","target","nativeHandler","_ref","domTreeShapes","start","axisProperties","x","y","some","shape","goingForward","axis","scrollPosition","areNotAtStart","areNotAtEnd","findNativeHandler","element","rootNode","getComputedStyle","getPropertyValue","scrollWidth","scrollHeight","parentElement","getDomTreeShapes","dx","dy","cancelable","preventDefault","definitelySwiping","paperHit","lastTranslate","lastTime","performance","now","handleBodyTouchStart","defaultPrevented","muiHandled","doc","ownerDocument","addEventListener","passive","removeEventListener","handleBackdropRef","instance","react_dom","pointerEvents","NoSsr"],"mappings":"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","file":"static/js/4.052195a8.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      minWidth: 56,\n      color: theme.palette.action.active,\n      flexShrink: 0,\n      display: 'inline-flex'\n    },\n\n    /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      marginTop: 8\n    }\n  };\n};\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\n\nvar ListItemIcon = /*#__PURE__*/React.forwardRef(function ListItemIcon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@material-ui/icons` SVG icon element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemIcon'\n})(ListItemIcon);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDisplayName } from '@material-ui/utils';\nimport { getThemeProps } from '@material-ui/styles';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport useTheme from '../styles/useTheme';\nimport { keys as breakpointKeys } from '../styles/createBreakpoints';\nimport useMediaQuery from '../useMediaQuery'; // By default, returns true if screen width is the same or greater than the given breakpoint.\n\nexport var isWidthUp = function isWidthUp(breakpoint, width) {\n  var inclusive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n  if (inclusive) {\n    return breakpointKeys.indexOf(breakpoint) <= breakpointKeys.indexOf(width);\n  }\n\n  return breakpointKeys.indexOf(breakpoint) < breakpointKeys.indexOf(width);\n}; // By default, returns true if screen width is the same or less than the given breakpoint.\n\nexport var isWidthDown = function isWidthDown(breakpoint, width) {\n  var inclusive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n  if (inclusive) {\n    return breakpointKeys.indexOf(width) <= breakpointKeys.indexOf(breakpoint);\n  }\n\n  return breakpointKeys.indexOf(width) < breakpointKeys.indexOf(breakpoint);\n};\nvar useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n\nvar withWidth = function withWidth() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function (Component) {\n    var _options$withTheme = options.withTheme,\n        withThemeOption = _options$withTheme === void 0 ? false : _options$withTheme,\n        _options$noSSR = options.noSSR,\n        noSSR = _options$noSSR === void 0 ? false : _options$noSSR,\n        initialWidthOption = options.initialWidth;\n\n    function WithWidth(props) {\n      var contextTheme = useTheme();\n      var theme = props.theme || contextTheme;\n\n      var _getThemeProps = getThemeProps({\n        theme: theme,\n        name: 'MuiWithWidth',\n        props: _extends({}, props)\n      }),\n          initialWidth = _getThemeProps.initialWidth,\n          width = _getThemeProps.width,\n          other = _objectWithoutProperties(_getThemeProps, [\"initialWidth\", \"width\"]);\n\n      var _React$useState = React.useState(false),\n          mountedState = _React$useState[0],\n          setMountedState = _React$useState[1];\n\n      useEnhancedEffect(function () {\n        setMountedState(true);\n      }, []);\n      /**\n       * innerWidth |xs      sm      md      lg      xl\n       *            |-------|-------|-------|-------|------>\n       * width      |  xs   |  sm   |  md   |  lg   |  xl\n       */\n\n      var keys = theme.breakpoints.keys.slice().reverse();\n      var widthComputed = keys.reduce(function (output, key) {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        var matches = useMediaQuery(theme.breakpoints.up(key));\n        return !output && matches ? key : output;\n      }, null);\n\n      var more = _extends({\n        width: width || (mountedState || noSSR ? widthComputed : undefined) || initialWidth || initialWidthOption\n      }, withThemeOption ? {\n        theme: theme\n      } : {}, other); // When rendering the component on the server,\n      // we have no idea about the client browser screen width.\n      // In order to prevent blinks and help the reconciliation of the React tree\n      // we are not rendering the child component.\n      //\n      // An alternative is to use the `initialWidth` property.\n\n\n      if (more.width === undefined) {\n        return null;\n      }\n\n      return /*#__PURE__*/React.createElement(Component, more);\n    }\n\n    process.env.NODE_ENV !== \"production\" ? WithWidth.propTypes = {\n      /**\n       * As `window.innerWidth` is unavailable on the server,\n       * we default to rendering an empty component during the first mount.\n       * You might want to use an heuristic to approximate\n       * the screen width of the client browser screen width.\n       *\n       * For instance, you could be using the user-agent or the client-hints.\n       * https://caniuse.com/#search=client%20hint\n       */\n      initialWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\n\n      /**\n       * @ignore\n       */\n      theme: PropTypes.object,\n\n      /**\n       * Bypass the width calculation logic.\n       */\n      width: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl'])\n    } : void 0;\n\n    if (process.env.NODE_ENV !== 'production') {\n      WithWidth.displayName = \"WithWidth(\".concat(getDisplayName(Component), \")\");\n    }\n\n    hoistNonReactStatics(WithWidth, Component);\n    return WithWidth;\n  };\n};\n\nexport default withWidth;","import PropTypes from 'prop-types';\nimport { exactProp } from '@material-ui/utils';\nimport withWidth, { isWidthDown, isWidthUp } from '../withWidth';\nimport useTheme from '../styles/useTheme';\n/**\n * @ignore - internal component.\n */\n\nfunction HiddenJs(props) {\n  var children = props.children,\n      only = props.only,\n      width = props.width;\n  var theme = useTheme();\n  var visible = true; // `only` check is faster to get out sooner if used.\n\n  if (only) {\n    if (Array.isArray(only)) {\n      for (var i = 0; i < only.length; i += 1) {\n        var breakpoint = only[i];\n\n        if (width === breakpoint) {\n          visible = false;\n          break;\n        }\n      }\n    } else if (only && width === only) {\n      visible = false;\n    }\n  } // Allow `only` to be combined with other props. If already hidden, no need to check others.\n\n\n  if (visible) {\n    // determine visibility based on the smallest size up\n    for (var _i = 0; _i < theme.breakpoints.keys.length; _i += 1) {\n      var _breakpoint = theme.breakpoints.keys[_i];\n      var breakpointUp = props[\"\".concat(_breakpoint, \"Up\")];\n      var breakpointDown = props[\"\".concat(_breakpoint, \"Down\")];\n\n      if (breakpointUp && isWidthUp(_breakpoint, width) || breakpointDown && isWidthDown(_breakpoint, width)) {\n        visible = false;\n        break;\n      }\n    }\n  }\n\n  if (!visible) {\n    return null;\n  }\n\n  return children;\n}\n\nHiddenJs.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify which implementation to use.  'js' is the default, 'css' works better for\n   * server-side rendering.\n   */\n  implementation: PropTypes.oneOf(['js', 'css']),\n\n  /**\n   * You can use this prop when choosing the `js` implementation with server-side rendering.\n   *\n   * As `window.innerWidth` is unavailable on the server,\n   * we default to rendering an empty component during the first mount.\n   * You might want to use an heuristic to approximate\n   * the screen width of the client browser screen width.\n   *\n   * For instance, you could be using the user-agent or the client-hints.\n   * https://caniuse.com/#search=client%20hint\n   */\n  initialWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\n\n  /**\n   * If `true`, screens this size and down will be hidden.\n   */\n  lgDown: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and up will be hidden.\n   */\n  lgUp: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and down will be hidden.\n   */\n  mdDown: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and up will be hidden.\n   */\n  mdUp: PropTypes.bool,\n\n  /**\n   * Hide the given breakpoint(s).\n   */\n  only: PropTypes.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']), PropTypes.arrayOf(PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']))]),\n\n  /**\n   * If `true`, screens this size and down will be hidden.\n   */\n  smDown: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and up will be hidden.\n   */\n  smUp: PropTypes.bool,\n\n  /**\n   * @ignore\n   * width prop provided by withWidth decorator.\n   */\n  width: PropTypes.string.isRequired,\n\n  /**\n   * If `true`, screens this size and down will be hidden.\n   */\n  xlDown: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and up will be hidden.\n   */\n  xlUp: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and down will be hidden.\n   */\n  xsDown: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and up will be hidden.\n   */\n  xsUp: PropTypes.bool\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  HiddenJs.propTypes = exactProp(HiddenJs.propTypes);\n}\n\nexport default withWidth()(HiddenJs);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport useTheme from '../styles/useTheme';\n\nvar styles = function styles(theme) {\n  var hidden = {\n    display: 'none'\n  };\n  return theme.breakpoints.keys.reduce(function (acc, key) {\n    acc[\"only\".concat(capitalize(key))] = _defineProperty({}, theme.breakpoints.only(key), hidden);\n    acc[\"\".concat(key, \"Up\")] = _defineProperty({}, theme.breakpoints.up(key), hidden);\n    acc[\"\".concat(key, \"Down\")] = _defineProperty({}, theme.breakpoints.down(key), hidden);\n    return acc;\n  }, {});\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction HiddenCss(props) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      only = props.only,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"only\"]);\n\n  var theme = useTheme();\n\n  if (process.env.NODE_ENV !== 'production') {\n    var unknownProps = Object.keys(other).filter(function (propName) {\n      var isUndeclaredBreakpoint = !theme.breakpoints.keys.some(function (breakpoint) {\n        return \"\".concat(breakpoint, \"Up\") === propName || \"\".concat(breakpoint, \"Down\") === propName;\n      });\n      return isUndeclaredBreakpoint;\n    });\n\n    if (unknownProps.length > 0) {\n      console.error(\"Material-UI: Unsupported props received by `<Hidden implementation=\\\"css\\\" />`: \".concat(unknownProps.join(', '), \". Did you forget to wrap this component in a ThemeProvider declaring these breakpoints?\"));\n    }\n  }\n\n  var clsx = [];\n\n  if (className) {\n    clsx.push(className);\n  }\n\n  for (var i = 0; i < theme.breakpoints.keys.length; i += 1) {\n    var breakpoint = theme.breakpoints.keys[i];\n    var breakpointUp = props[\"\".concat(breakpoint, \"Up\")];\n    var breakpointDown = props[\"\".concat(breakpoint, \"Down\")];\n\n    if (breakpointUp) {\n      clsx.push(classes[\"\".concat(breakpoint, \"Up\")]);\n    }\n\n    if (breakpointDown) {\n      clsx.push(classes[\"\".concat(breakpoint, \"Down\")]);\n    }\n  }\n\n  if (only) {\n    var onlyBreakpoints = Array.isArray(only) ? only : [only];\n    onlyBreakpoints.forEach(function (breakpoint) {\n      clsx.push(classes[\"only\".concat(capitalize(breakpoint))]);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx.join(' ')\n  }, children);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? HiddenCss.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify which implementation to use.  'js' is the default, 'css' works better for\n   * server-side rendering.\n   */\n  implementation: PropTypes.oneOf(['js', 'css']),\n\n  /**\n   * If `true`, screens this size and down will be hidden.\n   */\n  lgDown: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and up will be hidden.\n   */\n  lgUp: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and down will be hidden.\n   */\n  mdDown: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and up will be hidden.\n   */\n  mdUp: PropTypes.bool,\n\n  /**\n   * Hide the given breakpoint(s).\n   */\n  only: PropTypes.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']), PropTypes.arrayOf(PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']))]),\n\n  /**\n   * If `true`, screens this size and down will be hidden.\n   */\n  smDown: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and up will be hidden.\n   */\n  smUp: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and down will be hidden.\n   */\n  xlDown: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and up will be hidden.\n   */\n  xlUp: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and down will be hidden.\n   */\n  xsDown: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and up will be hidden.\n   */\n  xsUp: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateHiddenCss'\n})(HiddenCss);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport HiddenJs from './HiddenJs';\nimport HiddenCss from './HiddenCss';\n/**\n * Responsively hides children based on the selected implementation.\n */\n\nfunction Hidden(props) {\n  var _props$implementation = props.implementation,\n      implementation = _props$implementation === void 0 ? 'js' : _props$implementation,\n      _props$lgDown = props.lgDown,\n      lgDown = _props$lgDown === void 0 ? false : _props$lgDown,\n      _props$lgUp = props.lgUp,\n      lgUp = _props$lgUp === void 0 ? false : _props$lgUp,\n      _props$mdDown = props.mdDown,\n      mdDown = _props$mdDown === void 0 ? false : _props$mdDown,\n      _props$mdUp = props.mdUp,\n      mdUp = _props$mdUp === void 0 ? false : _props$mdUp,\n      _props$smDown = props.smDown,\n      smDown = _props$smDown === void 0 ? false : _props$smDown,\n      _props$smUp = props.smUp,\n      smUp = _props$smUp === void 0 ? false : _props$smUp,\n      _props$xlDown = props.xlDown,\n      xlDown = _props$xlDown === void 0 ? false : _props$xlDown,\n      _props$xlUp = props.xlUp,\n      xlUp = _props$xlUp === void 0 ? false : _props$xlUp,\n      _props$xsDown = props.xsDown,\n      xsDown = _props$xsDown === void 0 ? false : _props$xsDown,\n      _props$xsUp = props.xsUp,\n      xsUp = _props$xsUp === void 0 ? false : _props$xsUp,\n      other = _objectWithoutProperties(props, [\"implementation\", \"lgDown\", \"lgUp\", \"mdDown\", \"mdUp\", \"smDown\", \"smUp\", \"xlDown\", \"xlUp\", \"xsDown\", \"xsUp\"]);\n\n  if (implementation === 'js') {\n    return /*#__PURE__*/React.createElement(HiddenJs, _extends({\n      lgDown: lgDown,\n      lgUp: lgUp,\n      mdDown: mdDown,\n      mdUp: mdUp,\n      smDown: smDown,\n      smUp: smUp,\n      xlDown: xlDown,\n      xlUp: xlUp,\n      xsDown: xsDown,\n      xsUp: xsUp\n    }, other));\n  }\n\n  return /*#__PURE__*/React.createElement(HiddenCss, _extends({\n    lgDown: lgDown,\n    lgUp: lgUp,\n    mdDown: mdDown,\n    mdUp: mdUp,\n    smDown: smDown,\n    smUp: smUp,\n    xlDown: xlDown,\n    xlUp: xlUp,\n    xsDown: xsDown,\n    xsUp: xsUp\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? Hidden.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify which implementation to use.  'js' is the default, 'css' works better for\n   * server-side rendering.\n   */\n  implementation: PropTypes.oneOf(['js', 'css']),\n\n  /**\n   * You can use this prop when choosing the `js` implementation with server-side rendering.\n   *\n   * As `window.innerWidth` is unavailable on the server,\n   * we default to rendering an empty component during the first mount.\n   * You might want to use an heuristic to approximate\n   * the screen width of the client browser screen width.\n   *\n   * For instance, you could be using the user-agent or the client-hints.\n   * https://caniuse.com/#search=client%20hint\n   */\n  initialWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\n\n  /**\n   * If `true`, screens this size and down will be hidden.\n   */\n  lgDown: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and up will be hidden.\n   */\n  lgUp: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and down will be hidden.\n   */\n  mdDown: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and up will be hidden.\n   */\n  mdUp: PropTypes.bool,\n\n  /**\n   * Hide the given breakpoint(s).\n   */\n  only: PropTypes.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']), PropTypes.arrayOf(PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']))]),\n\n  /**\n   * If `true`, screens this size and down will be hidden.\n   */\n  smDown: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and up will be hidden.\n   */\n  smUp: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and down will be hidden.\n   */\n  xlDown: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and up will be hidden.\n   */\n  xlUp: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and down will be hidden.\n   */\n  xsDown: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and up will be hidden.\n   */\n  xsUp: PropTypes.bool\n} : void 0;\nexport default Hidden;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport { isHorizontal } from '../Drawer/Drawer';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      bottom: 0,\n      zIndex: theme.zIndex.drawer - 1\n    },\n    anchorLeft: {\n      right: 'auto'\n    },\n    anchorRight: {\n      left: 'auto',\n      right: 0\n    },\n    anchorTop: {\n      bottom: 'auto',\n      right: 0\n    },\n    anchorBottom: {\n      top: 'auto',\n      bottom: 0,\n      right: 0\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwipeArea = /*#__PURE__*/React.forwardRef(function SwipeArea(props, ref) {\n  var anchor = props.anchor,\n      classes = props.classes,\n      className = props.className,\n      width = props.width,\n      other = _objectWithoutProperties(props, [\"anchor\", \"classes\", \"className\", \"width\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"anchor\".concat(capitalize(anchor))], className),\n    ref: ref,\n    style: _defineProperty({}, isHorizontal(anchor) ? 'width' : 'height', width)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeArea.propTypes = {\n  /**\n   * Side on which to attach the discovery area.\n   */\n  anchor: PropTypes.oneOf(['left', 'top', 'right', 'bottom']).isRequired,\n\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The width of the left most (or right most) area in pixels where the\n   * drawer can be swiped open from.\n   */\n  width: PropTypes.number.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwipeArea'\n})(SwipeArea);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport { getThemeProps } from '@material-ui/styles';\nimport Drawer, { getAnchor, isHorizontal } from '../Drawer/Drawer';\nimport ownerDocument from '../utils/ownerDocument';\nimport useEventCallback from '../utils/useEventCallback';\nimport { duration } from '../styles/transitions';\nimport useTheme from '../styles/useTheme';\nimport { getTransitionProps } from '../transitions/utils';\nimport NoSsr from '../NoSsr';\nimport SwipeArea from './SwipeArea'; // This value is closed to what browsers are using internally to\n// trigger a native scroll.\n\nvar UNCERTAINTY_THRESHOLD = 3; // px\n// We can only have one node at the time claiming ownership for handling the swipe.\n// Otherwise, the UX would be confusing.\n// That's why we use a singleton here.\n\nvar nodeThatClaimedTheSwipe = null; // Exported for test purposes.\n\nexport function reset() {\n  nodeThatClaimedTheSwipe = null;\n}\n\nfunction calculateCurrentX(anchor, touches) {\n  return anchor === 'right' ? document.body.offsetWidth - touches[0].pageX : touches[0].pageX;\n}\n\nfunction calculateCurrentY(anchor, touches) {\n  return anchor === 'bottom' ? window.innerHeight - touches[0].clientY : touches[0].clientY;\n}\n\nfunction getMaxTranslate(horizontalSwipe, paperInstance) {\n  return horizontalSwipe ? paperInstance.clientWidth : paperInstance.clientHeight;\n}\n\nfunction getTranslate(currentTranslate, startLocation, open, maxTranslate) {\n  return Math.min(Math.max(open ? startLocation - currentTranslate : maxTranslate + startLocation - currentTranslate, 0), maxTranslate);\n}\n\nfunction getDomTreeShapes(element, rootNode) {\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L129\n  var domTreeShapes = [];\n\n  while (element && element !== rootNode) {\n    var style = window.getComputedStyle(element);\n\n    if ( // Ignore the scroll children if the element is absolute positioned.\n    style.getPropertyValue('position') === 'absolute' || // Ignore the scroll children if the element has an overflowX hidden\n    style.getPropertyValue('overflow-x') === 'hidden') {\n      domTreeShapes = [];\n    } else if (element.clientWidth > 0 && element.scrollWidth > element.clientWidth || element.clientHeight > 0 && element.scrollHeight > element.clientHeight) {\n      // Ignore the nodes that have no width.\n      // Keep elements with a scroll\n      domTreeShapes.push(element);\n    }\n\n    element = element.parentElement;\n  }\n\n  return domTreeShapes;\n}\n\nfunction findNativeHandler(_ref) {\n  var domTreeShapes = _ref.domTreeShapes,\n      start = _ref.start,\n      current = _ref.current,\n      anchor = _ref.anchor; // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L175\n\n  var axisProperties = {\n    scrollPosition: {\n      x: 'scrollLeft',\n      y: 'scrollTop'\n    },\n    scrollLength: {\n      x: 'scrollWidth',\n      y: 'scrollHeight'\n    },\n    clientLength: {\n      x: 'clientWidth',\n      y: 'clientHeight'\n    }\n  };\n  return domTreeShapes.some(function (shape) {\n    // Determine if we are going backward or forward.\n    var goingForward = current >= start;\n\n    if (anchor === 'top' || anchor === 'left') {\n      goingForward = !goingForward;\n    }\n\n    var axis = anchor === 'left' || anchor === 'right' ? 'x' : 'y';\n    var scrollPosition = shape[axisProperties.scrollPosition[axis]];\n    var areNotAtStart = scrollPosition > 0;\n    var areNotAtEnd = scrollPosition + shape[axisProperties.clientLength[axis]] < shape[axisProperties.scrollLength[axis]];\n\n    if (goingForward && areNotAtEnd || !goingForward && areNotAtStart) {\n      return shape;\n    }\n\n    return null;\n  });\n}\n\nvar iOS = typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent);\nvar transitionDurationDefault = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\nvar useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nvar SwipeableDrawer = /*#__PURE__*/React.forwardRef(function SwipeableDrawer(inProps, ref) {\n  var theme = useTheme();\n  var props = getThemeProps({\n    name: 'MuiSwipeableDrawer',\n    props: _extends({}, inProps),\n    theme: theme\n  });\n  var _props$anchor = props.anchor,\n      anchor = _props$anchor === void 0 ? 'left' : _props$anchor,\n      _props$disableBackdro = props.disableBackdropTransition,\n      disableBackdropTransition = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n      _props$disableDiscove = props.disableDiscovery,\n      disableDiscovery = _props$disableDiscove === void 0 ? false : _props$disableDiscove,\n      _props$disableSwipeTo = props.disableSwipeToOpen,\n      disableSwipeToOpen = _props$disableSwipeTo === void 0 ? iOS : _props$disableSwipeTo,\n      hideBackdrop = props.hideBackdrop,\n      _props$hysteresis = props.hysteresis,\n      hysteresis = _props$hysteresis === void 0 ? 0.52 : _props$hysteresis,\n      _props$minFlingVeloci = props.minFlingVelocity,\n      minFlingVelocity = _props$minFlingVeloci === void 0 ? 450 : _props$minFlingVeloci,\n      _props$ModalProps = props.ModalProps;\n  _props$ModalProps = _props$ModalProps === void 0 ? {} : _props$ModalProps;\n\n  var BackdropProps = _props$ModalProps.BackdropProps,\n      ModalPropsProp = _objectWithoutProperties(_props$ModalProps, [\"BackdropProps\"]),\n      onClose = props.onClose,\n      onOpen = props.onOpen,\n      open = props.open,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      SwipeAreaProps = props.SwipeAreaProps,\n      _props$swipeAreaWidth = props.swipeAreaWidth,\n      swipeAreaWidth = _props$swipeAreaWidth === void 0 ? 20 : _props$swipeAreaWidth,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? transitionDurationDefault : _props$transitionDura,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'temporary' : _props$variant,\n      other = _objectWithoutProperties(props, [\"anchor\", \"disableBackdropTransition\", \"disableDiscovery\", \"disableSwipeToOpen\", \"hideBackdrop\", \"hysteresis\", \"minFlingVelocity\", \"ModalProps\", \"onClose\", \"onOpen\", \"open\", \"PaperProps\", \"SwipeAreaProps\", \"swipeAreaWidth\", \"transitionDuration\", \"variant\"]);\n\n  var _React$useState = React.useState(false),\n      maybeSwiping = _React$useState[0],\n      setMaybeSwiping = _React$useState[1];\n\n  var swipeInstance = React.useRef({\n    isSwiping: null\n  });\n  var swipeAreaRef = React.useRef();\n  var backdropRef = React.useRef();\n  var paperRef = React.useRef();\n  var touchDetected = React.useRef(false); // Ref for transition duration based on / to match swipe speed\n\n  var calculatedDurationRef = React.useRef(); // Use a ref so the open value used is always up to date inside useCallback.\n\n  useEnhancedEffect(function () {\n    calculatedDurationRef.current = null;\n  }, [open]);\n  var setPosition = React.useCallback(function (translate) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _options$mode = options.mode,\n        mode = _options$mode === void 0 ? null : _options$mode,\n        _options$changeTransi = options.changeTransition,\n        changeTransition = _options$changeTransi === void 0 ? true : _options$changeTransi;\n    var anchorRtl = getAnchor(theme, anchor);\n    var rtlTranslateMultiplier = ['right', 'bottom'].indexOf(anchorRtl) !== -1 ? 1 : -1;\n    var horizontalSwipe = isHorizontal(anchor);\n    var transform = horizontalSwipe ? \"translate(\".concat(rtlTranslateMultiplier * translate, \"px, 0)\") : \"translate(0, \".concat(rtlTranslateMultiplier * translate, \"px)\");\n    var drawerStyle = paperRef.current.style;\n    drawerStyle.webkitTransform = transform;\n    drawerStyle.transform = transform;\n    var transition = '';\n\n    if (mode) {\n      transition = theme.transitions.create('all', getTransitionProps({\n        timeout: transitionDuration\n      }, {\n        mode: mode\n      }));\n    }\n\n    if (changeTransition) {\n      drawerStyle.webkitTransition = transition;\n      drawerStyle.transition = transition;\n    }\n\n    if (!disableBackdropTransition && !hideBackdrop) {\n      var backdropStyle = backdropRef.current.style;\n      backdropStyle.opacity = 1 - translate / getMaxTranslate(horizontalSwipe, paperRef.current);\n\n      if (changeTransition) {\n        backdropStyle.webkitTransition = transition;\n        backdropStyle.transition = transition;\n      }\n    }\n  }, [anchor, disableBackdropTransition, hideBackdrop, theme, transitionDuration]);\n  var handleBodyTouchEnd = useEventCallback(function (event) {\n    if (!touchDetected.current) {\n      return;\n    }\n\n    nodeThatClaimedTheSwipe = null;\n    touchDetected.current = false;\n    setMaybeSwiping(false); // The swipe wasn't started.\n\n    if (!swipeInstance.current.isSwiping) {\n      swipeInstance.current.isSwiping = null;\n      return;\n    }\n\n    swipeInstance.current.isSwiping = null;\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontal = isHorizontal(anchor);\n    var current;\n\n    if (horizontal) {\n      current = calculateCurrentX(anchorRtl, event.changedTouches);\n    } else {\n      current = calculateCurrentY(anchorRtl, event.changedTouches);\n    }\n\n    var startLocation = horizontal ? swipeInstance.current.startX : swipeInstance.current.startY;\n    var maxTranslate = getMaxTranslate(horizontal, paperRef.current);\n    var currentTranslate = getTranslate(current, startLocation, open, maxTranslate);\n    var translateRatio = currentTranslate / maxTranslate;\n\n    if (Math.abs(swipeInstance.current.velocity) > minFlingVelocity) {\n      // Calculate transition duration to match swipe speed\n      calculatedDurationRef.current = Math.abs((maxTranslate - currentTranslate) / swipeInstance.current.velocity) * 1000;\n    }\n\n    if (open) {\n      if (swipeInstance.current.velocity > minFlingVelocity || translateRatio > hysteresis) {\n        onClose();\n      } else {\n        // Reset the position, the swipe was aborted.\n        setPosition(0, {\n          mode: 'exit'\n        });\n      }\n\n      return;\n    }\n\n    if (swipeInstance.current.velocity < -minFlingVelocity || 1 - translateRatio > hysteresis) {\n      onOpen();\n    } else {\n      // Reset the position, the swipe was aborted.\n      setPosition(getMaxTranslate(horizontal, paperRef.current), {\n        mode: 'enter'\n      });\n    }\n  });\n  var handleBodyTouchMove = useEventCallback(function (event) {\n    // the ref may be null when a parent component updates while swiping\n    if (!paperRef.current || !touchDetected.current) {\n      return;\n    } // We are not supposed to handle this touch move because the swipe was started in a scrollable container in the drawer\n\n\n    if (nodeThatClaimedTheSwipe != null && nodeThatClaimedTheSwipe !== swipeInstance.current) {\n      return;\n    }\n\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontalSwipe = isHorizontal(anchor);\n    var currentX = calculateCurrentX(anchorRtl, event.touches);\n    var currentY = calculateCurrentY(anchorRtl, event.touches);\n\n    if (open && paperRef.current.contains(event.target) && nodeThatClaimedTheSwipe == null) {\n      var domTreeShapes = getDomTreeShapes(event.target, paperRef.current);\n      var nativeHandler = findNativeHandler({\n        domTreeShapes: domTreeShapes,\n        start: horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY,\n        current: horizontalSwipe ? currentX : currentY,\n        anchor: anchor\n      });\n\n      if (nativeHandler) {\n        nodeThatClaimedTheSwipe = nativeHandler;\n        return;\n      }\n\n      nodeThatClaimedTheSwipe = swipeInstance.current;\n    } // We don't know yet.\n\n\n    if (swipeInstance.current.isSwiping == null) {\n      var dx = Math.abs(currentX - swipeInstance.current.startX);\n      var dy = Math.abs(currentY - swipeInstance.current.startY); // We are likely to be swiping, let's prevent the scroll event on iOS.\n\n      if (dx > dy) {\n        if (event.cancelable) {\n          event.preventDefault();\n        }\n      }\n\n      var definitelySwiping = horizontalSwipe ? dx > dy && dx > UNCERTAINTY_THRESHOLD : dy > dx && dy > UNCERTAINTY_THRESHOLD;\n\n      if (definitelySwiping === true || (horizontalSwipe ? dy > UNCERTAINTY_THRESHOLD : dx > UNCERTAINTY_THRESHOLD)) {\n        swipeInstance.current.isSwiping = definitelySwiping;\n\n        if (!definitelySwiping) {\n          handleBodyTouchEnd(event);\n          return;\n        } // Shift the starting point.\n\n\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY; // Compensate for the part of the drawer displayed on touch start.\n\n        if (!disableDiscovery && !open) {\n          if (horizontalSwipe) {\n            swipeInstance.current.startX -= swipeAreaWidth;\n          } else {\n            swipeInstance.current.startY -= swipeAreaWidth;\n          }\n        }\n      }\n    }\n\n    if (!swipeInstance.current.isSwiping) {\n      return;\n    }\n\n    var maxTranslate = getMaxTranslate(horizontalSwipe, paperRef.current);\n    var startLocation = horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY;\n\n    if (open && !swipeInstance.current.paperHit) {\n      startLocation = Math.min(startLocation, maxTranslate);\n    }\n\n    var translate = getTranslate(horizontalSwipe ? currentX : currentY, startLocation, open, maxTranslate);\n\n    if (open) {\n      if (!swipeInstance.current.paperHit) {\n        var paperHit = horizontalSwipe ? currentX < maxTranslate : currentY < maxTranslate;\n\n        if (paperHit) {\n          swipeInstance.current.paperHit = true;\n          swipeInstance.current.startX = currentX;\n          swipeInstance.current.startY = currentY;\n        } else {\n          return;\n        }\n      } else if (translate === 0) {\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY;\n      }\n    }\n\n    if (swipeInstance.current.lastTranslate === null) {\n      swipeInstance.current.lastTranslate = translate;\n      swipeInstance.current.lastTime = performance.now() + 1;\n    }\n\n    var velocity = (translate - swipeInstance.current.lastTranslate) / (performance.now() - swipeInstance.current.lastTime) * 1e3; // Low Pass filter.\n\n    swipeInstance.current.velocity = swipeInstance.current.velocity * 0.4 + velocity * 0.6;\n    swipeInstance.current.lastTranslate = translate;\n    swipeInstance.current.lastTime = performance.now(); // We are swiping, let's prevent the scroll event on iOS.\n\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n\n    setPosition(translate);\n  });\n  var handleBodyTouchStart = useEventCallback(function (event) {\n    // We are not supposed to handle this touch move.\n    // Example of use case: ignore the event if there is a Slider.\n    if (event.defaultPrevented) {\n      return;\n    } // We can only have one node at the time claiming ownership for handling the swipe.\n\n\n    if (event.muiHandled) {\n      return;\n    } // At least one element clogs the drawer interaction zone.\n\n\n    if (open && !backdropRef.current.contains(event.target) && !paperRef.current.contains(event.target)) {\n      return;\n    }\n\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontalSwipe = isHorizontal(anchor);\n    var currentX = calculateCurrentX(anchorRtl, event.touches);\n    var currentY = calculateCurrentY(anchorRtl, event.touches);\n\n    if (!open) {\n      if (disableSwipeToOpen || event.target !== swipeAreaRef.current) {\n        return;\n      }\n\n      if (horizontalSwipe) {\n        if (currentX > swipeAreaWidth) {\n          return;\n        }\n      } else if (currentY > swipeAreaWidth) {\n        return;\n      }\n    }\n\n    event.muiHandled = true;\n    nodeThatClaimedTheSwipe = null;\n    swipeInstance.current.startX = currentX;\n    swipeInstance.current.startY = currentY;\n    setMaybeSwiping(true);\n\n    if (!open && paperRef.current) {\n      // The ref may be null when a parent component updates while swiping.\n      setPosition(getMaxTranslate(horizontalSwipe, paperRef.current) + (disableDiscovery ? 20 : -swipeAreaWidth), {\n        changeTransition: false\n      });\n    }\n\n    swipeInstance.current.velocity = 0;\n    swipeInstance.current.lastTime = null;\n    swipeInstance.current.lastTranslate = null;\n    swipeInstance.current.paperHit = false;\n    touchDetected.current = true;\n  });\n  React.useEffect(function () {\n    if (variant === 'temporary') {\n      var doc = ownerDocument(paperRef.current);\n      doc.addEventListener('touchstart', handleBodyTouchStart);\n      doc.addEventListener('touchmove', handleBodyTouchMove, {\n        passive: false\n      });\n      doc.addEventListener('touchend', handleBodyTouchEnd);\n      return function () {\n        doc.removeEventListener('touchstart', handleBodyTouchStart);\n        doc.removeEventListener('touchmove', handleBodyTouchMove, {\n          passive: false\n        });\n        doc.removeEventListener('touchend', handleBodyTouchEnd);\n      };\n    }\n\n    return undefined;\n  }, [variant, handleBodyTouchStart, handleBodyTouchMove, handleBodyTouchEnd]);\n  React.useEffect(function () {\n    return function () {\n      // We need to release the lock.\n      if (nodeThatClaimedTheSwipe === swipeInstance.current) {\n        nodeThatClaimedTheSwipe = null;\n      }\n    };\n  }, []);\n  React.useEffect(function () {\n    if (!open) {\n      setMaybeSwiping(false);\n    }\n  }, [open]);\n  var handleBackdropRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    backdropRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Drawer, _extends({\n    open: variant === 'temporary' && maybeSwiping ? true : open,\n    variant: variant,\n    ModalProps: _extends({\n      BackdropProps: _extends({}, BackdropProps, {\n        ref: handleBackdropRef\n      })\n    }, ModalPropsProp),\n    PaperProps: _extends({}, PaperProps, {\n      style: _extends({\n        pointerEvents: variant === 'temporary' && !open ? 'none' : ''\n      }, PaperProps.style),\n      ref: paperRef\n    }),\n    anchor: anchor,\n    transitionDuration: calculatedDurationRef.current || transitionDuration,\n    onClose: onClose,\n    ref: ref\n  }, other)), !disableSwipeToOpen && variant === 'temporary' && /*#__PURE__*/React.createElement(NoSsr, null, /*#__PURE__*/React.createElement(SwipeArea, _extends({\n    anchor: anchor,\n    ref: swipeAreaRef,\n    width: swipeAreaWidth\n  }, SwipeAreaProps))));\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeableDrawer.propTypes = {\n  /**\n   * @ignore\n   */\n  anchor: PropTypes.oneOf(['left', 'top', 'right', 'bottom']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Disable the backdrop transition.\n   * This can improve the FPS on low-end devices.\n   */\n  disableBackdropTransition: PropTypes.bool,\n\n  /**\n   * If `true`, touching the screen near the edge of the drawer will not slide in the drawer a bit\n   * to promote accidental discovery of the swipe gesture.\n   */\n  disableDiscovery: PropTypes.bool,\n\n  /**\n   * If `true`, swipe to open is disabled. This is useful in browsers where swiping triggers\n   * navigation actions. Swipe to open is disabled on iOS browsers by default.\n   */\n  disableSwipeToOpen: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Affects how far the drawer must be opened/closed to change his state.\n   * Specified as percent (0-1) of the width of the drawer\n   */\n  hysteresis: PropTypes.number,\n\n  /**\n   * Defines, from which (average) velocity on, the swipe is\n   * defined as complete although hysteresis isn't reached.\n   * Good threshold is between 250 - 1000 px/s\n   */\n  minFlingVelocity: PropTypes.number,\n\n  /**\n   * @ignore\n   */\n  ModalProps: PropTypes.shape({\n    BackdropProps: PropTypes.shape({\n      component: elementTypeAcceptingRef\n    })\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func.isRequired,\n\n  /**\n   * If `true`, the drawer is open.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  PaperProps: PropTypes.shape({\n    component: elementTypeAcceptingRef,\n    style: PropTypes.object\n  }),\n\n  /**\n   * The element is used to intercept the touch events on the edge.\n   */\n  SwipeAreaProps: PropTypes.object,\n\n  /**\n   * The width of the left most (or right most) area in pixels where the\n   * drawer can be swiped open from.\n   */\n  swipeAreaWidth: PropTypes.number,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * @ignore\n   */\n  variant: PropTypes.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nexport default SwipeableDrawer;"],"sourceRoot":""}