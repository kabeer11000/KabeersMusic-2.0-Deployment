{"version":3,"sources":["api/keys/keys.js","functions/Helper/XMLToJSON.js","functions/suggestSearch.js","components/Preloader/Preloader.js","components/home/home.lazy.js","components/CustomBottomNavigation/CustomBottomNavigation.lazy.js","components/Downloads/Downloads.lazy.js","components/Player/Player.lazy.js","components/CustomAppBar/CustomAppBar.lazy.js","components/SearchComponent/SearchComponent.lazy.js","components/Drawer/Drawer.lazy.js","components/Player/CustomMiniPlayerSlider.js","components/Player/MiniPlayer.js","components/SearchComponent/SearchResultComponent.js","components/History/History.lazy.js","App.js","serviceWorker.js","index.js","Redux/reducers/rootReducers.js","Redux/store/state.loader.js","Redux/store/store.js","Redux/actions/actions.js","api/endpoints/endpoints.js","functions/getBlob.js","functions/songs.js"],"names":["module","exports","youtube","xml2json","xml","obj","nodeType","attributes","length","j","attribute","item","nodeName","nodeValue","textNodes","slice","call","childNodes","filter","node","hasChildNodes","reduce","text","i","push","old","SuggestSearch","_x","_SuggestSearch","apply","this","arguments","_callee","q","response","xmlDoc","regenerator_default","a","wrap","_context","prev","next","fetch","endPoints","getSuggestionFake","then","r","sent","DOMParser","parseFromString","abrupt","toplevel","CompleteSuggestion","stop","SearchYoutube","_x2","_SearchYoutube","_callee2","_context2","searchYoutubeFake","keys","json","Preloader","react_default","createElement","className","style","width","height","position","top","left","transform","CircularProgress","defaultProps","Lazyhome","lazy","__webpack_require__","e","bind","home","props","react","fallback","components_Preloader_Preloader","LazyBottomNavigation","CustomBottomNavigation","LazyDownloads","Downloads","LazyPlayer","Promise","all","Player","LazyCustomAppBar","CustomAppBar","LazySearchComponent","SearchComponent","LazyDrawer","Drawer","connect","state","componentState","currentSong","audioElement","MiniPlayer","Fragment","_React$useState","React","useState","currentTime","_React$useState2","Object","slicedToArray","scrubbing","setScrubbing","handleScrubbing","_handleScrubbing","asyncToGenerator","mark","v","isFinite","store","dispatch","setCurrentSongState","getState","videoElement","reOpenDialog","playList","useEffect","setInterval","paused","Slider","defaultValue","value","min","color","max","duration","valueLabelDisplay","onChangeCommitted","_ref","x","_x3","hidden","ComponentStates","IconButton","onClick","pauseAudio","Pause","button","setButton","pause","playAudio","PlayCircleOutline","play","dialog","AppBar","bottom","component","elevation","Dialog","src","snippet","thumbnails","high","url","maxWidth","maxHeight","alt","Typography","title","Audio","Close","Player_CustomMiniPlayerSlider","useStyles","makeStyles","theme","root","marginTop","padding","display","alignItems","input","marginLeft","spacing","flex","iconButton","divider","margin","SearchResultComponent","history","useHistory","open","setOpen","_React$useState3","_React$useState4","_React$useState5","_React$useState6","listItems","setListItems","classes","query","resultsArray","items","map","index","ListItem","key","video","metaData","list","getSong","id","videoId","setTimeout","appState","uri","thumbnail","ListItemIcon","Avatar","default","ListItemText","primary","concat","decodeURIComponent","secondary","channelTitle","fullScreen","onClose","Toolbar","Link","to","window","visibility","ArrowBack","InputBase","autoCapitalize","autoComplete","placeholder","inputProps","aria-label","SearchOutlined","LazyHistory","History","App","audio","darkState","Player__","SetPlayer","colors","contrastText","main","light","dark","miniPlayer","borderTop","player","slider","rail","thumb","thumbColorPrimary","invertButtons","invert","background","darkTheme","createMuiTheme","palette","objectSpread","type","trackColor","selectionColor","changeStates","_changeStates","console","log","es","ThemeProvider","react_router_dom","notistack_esm","maxSnack","CssBaseline","Drawer_lazy","preload","CustomAppBar_lazy","Player_lazy","changes","react_router","exact","path","render","home_lazy","Downloads_lazy","HistoryComponent","SearchComponent_SearchResultComponent","CustomBottomNavigation_lazy","Player_MiniPlayer","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","src_App","document","getElementById","URL","process","href","origin","addEventListener","headers","Service-Worker","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","initialState","drawer","rootReducer","undefined","action","CHANGE_DRAWER","CURRENT_SONG","SEARCH_QUERY_PARAM","StateLoader","serializedState","localStorage","getItem","initializeState","JSON","parse","err","stringify","setItem","middleware","thunk","createStore","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","f","setDrawerState","componentStates","E_Projects_phpstormprojects_music_react_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","setQueryParams","queryString","hostName","protocol","host","mostPopular","mostPopularFake","getVideo","getVideoFake","getProxyfiedURI","getSuggestion","searchYoutube","maxResults","proxyURI","fetchProxiedBlob","resolve","reject","xhr","XMLHttpRequest","responseType","onload","statusText","send","abort","uniqid","b","d","Date","now","toString","split","join","Math","round","random","db","Dexie","version","stores","songs","historydb","downloadSong","_downloadSong","data","thumbURL","_yield$Promise$all","_yield$Promise$all2","thumbnailBlob","songBlob","_args","rating","tags","put","blob","valid","time","t0","_getSong","_callee3","_context3","getSongFromStorage","_getSongFromStorage","_callee4","allSongs","_context4","toArray","some","find","getAllDownloadedSongs","_getAllDownloadedSongs","_callee5","_context5","isOfflineAvailable","_x4","_isOfflineAvailable","_callee6","_context6","song","saveToHistory","_x5","_saveToHistory","_callee7","object","_context7","ChannelTitle","getHistory","_getHistory","_callee8","_context8"],"mappings":"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","file":"static/js/main.9254b3f6.chunk.js","sourcesContent":["const keys = {\r\n    youtube: 'AIzaSyB1msCdExGF2q9oyAjUq4bmSQq6i89VId8'\r\n};\r\nmodule.exports = keys;\r\n","/**\r\n * Changes XML to JSON\r\n * Modified version from here: http://davidwalsh.name/convert-xml-json\r\n * @param {string} xml XML DOM tree\r\n */\r\nexport default function xml2json(xml) {\r\n    // Create the return object\r\n    var obj = {};\r\n\r\n    if (xml.nodeType == 1) {\r\n        // element\r\n        // do attributes\r\n        if (xml.attributes.length > 0) {\r\n            obj[\"attributes\"] = {};\r\n            for (var j = 0; j < xml.attributes.length; j++) {\r\n                var attribute = xml.attributes.item(j);\r\n                obj[\"attributes\"][attribute.nodeName] = attribute.nodeValue;\r\n            }\r\n        }\r\n    } else if (xml.nodeType == 3) {\r\n        // text\r\n        obj = xml.nodeValue;\r\n    }\r\n\r\n    // do children\r\n    // If all text nodes inside, get concatenated text from them.\r\n    var textNodes = [].slice.call(xml.childNodes).filter(function (node) {\r\n        return node.nodeType === 3;\r\n    });\r\n    if (xml.hasChildNodes() && xml.childNodes.length === textNodes.length) {\r\n        obj = [].slice.call(xml.childNodes).reduce(function (text, node) {\r\n            return text + node.nodeValue;\r\n        }, \"\");\r\n    } else if (xml.hasChildNodes()) {\r\n        for (var i = 0; i < xml.childNodes.length; i++) {\r\n            var item = xml.childNodes.item(i);\r\n            var nodeName = item.nodeName;\r\n            if (typeof obj[nodeName] == \"undefined\") {\r\n                obj[nodeName] = xml2json(item);\r\n            } else {\r\n                if (typeof obj[nodeName].push == \"undefined\") {\r\n                    var old = obj[nodeName];\r\n                    obj[nodeName] = [];\r\n                    obj[nodeName].push(old);\r\n                }\r\n                obj[nodeName].push(xml2json(item));\r\n            }\r\n        }\r\n    }\r\n    return obj;\r\n}\r\n","import endPoints from '../api/endpoints/endpoints';\r\nimport xml2json from \"./Helper/XMLToJSON\";\r\nimport keys from \"../api/keys/keys\";\r\n\r\n\r\nexport async function SuggestSearch(q) {\r\n    const response = await fetch(endPoints.getSuggestionFake(q)).then(r => r.text());\r\n    const xmlDoc = xml2json(new DOMParser().parseFromString(response, \"text/xml\"));\r\n    return xmlDoc.toplevel ? xmlDoc.toplevel.CompleteSuggestion : [];\r\n\r\n}\r\n\r\nexport async function SearchYoutube(q) {\r\n    return fetch(endPoints.searchYoutubeFake(keys.youtube, q)).then(r => r.json());\r\n}\r\n","import React from 'react';\nimport './Preloader.css';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst Preloader = () => (\n    <div className=\"Preloader\" style={{\n        width: '10rem',\n        height: '10rem',\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)'\n    }}>\n        <CircularProgress/>\n    </div>\n);\n\nPreloader.propTypes = {};\n\nPreloader.defaultProps = {};\n\nexport default Preloader;\n","import React, {lazy, Suspense} from 'react';\nimport Preloader from \"../Preloader/Preloader\";\n\nconst Lazyhome = lazy(() => import('./home'));\n\nconst home = props => (\n    <Suspense fallback={<Preloader/>}>\n        <Lazyhome {...props} />\n    </Suspense>\n);\n\nexport default home;\n","import React, {lazy, Suspense} from 'react';\n\nconst LazyBottomNavigation = lazy(() => import('./CustomBottomNavigation'));\n\nconst CustomBottomNavigation = props => (\n    <Suspense fallback={null}>\n        <LazyBottomNavigation {...props} />\n    </Suspense>\n);\n\nexport default CustomBottomNavigation;\n","import React, {lazy, Suspense} from 'react';\nimport Preloader from \"../Preloader/Preloader\";\n\nconst LazyDownloads = lazy(() => import('./Downloads'));\n\nconst Downloads = props => (\n    <Suspense fallback={<Preloader/>}>\n        <LazyDownloads {...props} />\n    </Suspense>\n);\n\nexport default Downloads;\n","import React, {lazy, Suspense} from 'react';\nimport Preloader from \"../Preloader/Preloader\";\n\nconst LazyPlayer = lazy(() => import('./Player'));\n\nconst Player = props => (\n    <Suspense fallback={<Preloader/>}>\n        <LazyPlayer {...props} />\n    </Suspense>\n);\n\nexport default Player;\n","import React, {lazy, Suspense} from 'react';\nimport Preloader from \"../Preloader/Preloader\";\n\nconst LazyCustomAppBar = lazy(() => import('./CustomAppBar'));\n\nconst CustomAppBar = props => (\n    <Suspense fallback={<Preloader/>}>\n        <LazyCustomAppBar {...props} />\n    </Suspense>\n);\n\nexport default CustomAppBar;\n","import React, {lazy, Suspense} from 'react';\nimport Preloader from \"../Preloader/Preloader\";\n\nconst LazySearchComponent = lazy(() => import('./SearchComponent'));\n\nconst SearchComponent = props => (\n    <Suspense fallback={<Preloader/>}>\n        <LazySearchComponent {...props} />\n    </Suspense>\n);\n\nexport default SearchComponent;\n","import React, { lazy, Suspense } from 'react';\nimport Preloader from \"../Preloader/Preloader\";\n\nconst LazyDrawer = lazy(() => import('./Drawer'));\n\nconst Drawer = props => (\n  <Suspense fallback={<Preloader/>}>\n    <LazyDrawer {...props} />\n  </Suspense>\n);\n\nexport default Drawer;\n","import React, {useEffect} from \"react\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport store from \"../../Redux/store/store\";\r\nimport {setCurrentSongState} from \"../../Redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst CustomMiniPlayerSlider = (props) => {\r\n    if (!props.componentState.MiniPlayer) {\r\n        return <></>;\r\n    }\r\n    const [scrubbing, setScrubbing] = React.useState(props.audioElement.currentTime);\r\n    useEffect(() => {\r\n        if (props.componentState.MiniPlayer) {\r\n            setInterval(() => !props.audioElement.paused && props.componentState.MiniPlayer ? setScrubbing(props.audioElement.currentTime) : null, 1000);\r\n        }\r\n    }, []);\r\n\r\n    async function handleScrubbing(v) {\r\n        if (isFinite(v)) {\r\n            props.audioElement.currentTime = v;\r\n            // Update Redux State\r\n            store.dispatch(setCurrentSongState(\r\n                props.audioElement,\r\n                store.getState().currentSong.videoElement,\r\n                store.getState().currentSong.componentState,\r\n                store.getState().currentSong.reOpenDialog,\r\n                store.getState().currentSong.playList));\r\n        }\r\n    }\r\n\r\n    return (<Slider\r\n        className={'p-0 m-0'}\r\n        defaultValue={0}\r\n        value={scrubbing}\r\n        min={0.0}\r\n        color={'primary'}\r\n        max={props.audioElement.duration}\r\n        valueLabelDisplay=\"auto\"\r\n        onChangeCommitted={async (v, x) => handleScrubbing(x)}\r\n    />);\r\n};\r\nconst mapStateToProps = state => ({\r\n    componentState: state.currentSong.componentState,\r\n    audioElement: state.currentSong.audioElement,\r\n});\r\nexport default connect(mapStateToProps)(CustomMiniPlayerSlider);\r\n","import AppBar from \"@material-ui/core/AppBar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {Close, Pause, PlayCircleOutline} from \"@material-ui/icons\";\r\nimport React, {useEffect} from \"react\";\r\nimport store from \"../../Redux/store/store\";\r\nimport {setCurrentSongState} from \"../../Redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport CustomMiniPlayerSlider from \"./CustomMiniPlayerSlider\";\r\n\r\n\r\nconst MiniPlayer = (props) => {\r\n    if (props.hidden) return <></>;\r\n    const\r\n        ComponentStates = props.componentState,\r\n        audioElement = props.audioElement,\r\n        videoElement = props.videoElement;\r\n    const [button, setButton] = React.useState(<IconButton onClick={pauseAudio}><Pause color={'#fff'}/></IconButton>);\r\n\r\n    async function handleScrubbing(v) {\r\n        if (isFinite(v)) {\r\n            audioElement.currentTime = v;\r\n            // Update Redux State\r\n            store.dispatch(setCurrentSongState(audioElement, videoElement, {...ComponentStates}));\r\n        }\r\n    }\r\n\r\n    function cutCurrentSongState() {\r\n        audioElement.pause();\r\n        store.dispatch(setCurrentSongState(new Audio(''), videoElement, {\r\n            Dialog: false,\r\n            MiniPlayer: false\r\n        }, props.reOpenDialog, props.playList));\r\n    }\r\n\r\n    function pauseAudio() {\r\n        audioElement.pause();\r\n        setButton(<IconButton onClick={playAudio}><PlayCircleOutline color={'#fff'}/></IconButton>);\r\n\r\n    }\r\n\r\n    function playAudio() {\r\n        audioElement.play();\r\n        setButton(<IconButton onClick={pauseAudio}><Pause\r\n            color={'#fff'}/></IconButton>);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const Mounted = true;\r\n        if (!Mounted) return null\r\n    });\r\n\r\n    if (!ComponentStates.dialog && ComponentStates.MiniPlayer && audioElement !== null || '' || undefined) {\r\n        return (\r\n            <AppBar color={'primary.miniPlayer.main'} style={{\r\n                position: 'fixed',\r\n                top: \"auto\",\r\n                bottom: '3.5rem',\r\n                width: '100%',\r\n            }} component={'div'} elevation={1} className={'d-inline-flex KabeersMiniPlayerContainer'}>\r\n                <div className={'d-inline-flex'}>\r\n                    <div onClick={() => {\r\n                        props.reOpenDialog();\r\n                        // Update Redux State\r\n                        store.dispatch(setCurrentSongState(audioElement, videoElement, {\r\n                            Dialog: true,\r\n                            MiniPlayer: false\r\n                        }, props.reOpenDialog, props.playList));\r\n                        if (props.componentState.Dialog) {\r\n                            store.getState().currentSong.reOpenDialog();\r\n                        }\r\n                    }} className={'d-inline-flex'}>\r\n                        <img src={videoElement.snippet.thumbnails.high.url} style={{\r\n                            width: '4rem',\r\n                            height: '3rem',\r\n                            maxWidth: '5rem!important',\r\n                            maxHeight: '4rem!important'\r\n                        }}\r\n                             alt={'Song Image'} className={'KabeersMiniPlayerImage'}/>\r\n                        <Typography component={'span'} className={'text-truncate p-2 KabeersMiniPlayerText'}\r\n                                    color={'#000'} style={{\r\n                            width: '10em',\r\n                            color: 'primary.miniPlayer.text'\r\n                        }}>{videoElement.snippet.title || 'Untitled'}\r\n                        </Typography>\r\n                    </div>\r\n                    <div className={`float-right ml-auto`}>\r\n                        {button}\r\n                        <IconButton onClick={cutCurrentSongState}><Close/></IconButton>\r\n                    </div>\r\n                </div>\r\n                <CustomMiniPlayerSlider/>\r\n            </AppBar>\r\n        );\r\n    }\r\n    return (<></>)\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    componentState: state.currentSong.componentState,\r\n    audioElement: state.currentSong.audioElement,\r\n    videoElement: state.currentSong.videoElement,\r\n    reOpenDialog: state.currentSong.reOpenDialog,\r\n    playList: state.currentSong.playList\r\n});\r\nexport default connect(mapStateToProps)(MiniPlayer);\r\n","import React, {useEffect} from 'react';\nimport './SearchComponent.css';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {ArrowBack, SearchOutlined} from \"@material-ui/icons\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport {SearchYoutube} from \"../../functions/suggestSearch\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {Link, useHistory} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {getSong} from \"../../functions/songs\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginTop: '1rem',\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    iconButton: {\n        padding: 10,\n    },\n    divider: {\n        height: 28,\n        margin: 4,\n    },\n}));\nconst SearchResultComponent = (props) => {\n    let history = useHistory();\n    const [open, setOpen] = React.useState(true);\n    const [resultsArray, setResultsArray] = React.useState([]);\n    const [listItems, setListItems] = React.useState(<></>);\n    const classes = useStyles();\n\n    function PlaySong(video, metaData) {\n        getSong(video.id.videoId).then(value => {\n            if (value) {\n                //Avoid the Promise Error\n                setTimeout(function () {\n                    props.appState({\n                        uri: value,\n                        thumbnail: video.snippet.thumbnails.high.url,\n                        video: video,\n                        list: metaData.list,\n                        index: metaData.index\n                    });\n                }, 100);\n            }\n        });\n    }\n\n\n    useEffect(() => {\n        if (!props.query) return history.push(\"/search\");\n        SearchYoutube(props.query)\n            .then(resultsArray => {\n                if (!resultsArray) return;\n                setListItems(() => resultsArray.items.map((value, index) => {\n                    if (!value) return;\n                    return (\n                        <ListItem button key={index} onClick={() => PlaySong(value, {\n                            list: resultsArray, index: index\n                        })}>\n                            <ListItemIcon>\n                                <Avatar alt={value.snippet.title} src={value.snippet.thumbnails.default.url}/>\n                            </ListItemIcon>\n                            <ListItemText primary={`${decodeURIComponent(value.snippet.title)}`}\n                                          secondary={`${value.snippet.channelTitle}`}/>\n                        </ListItem>\n                    );\n                }));\n\n            });\n    }, []);\n    return (\n        <div className=\"SearchResultComponent\">\n            <Dialog fullScreen open={open} onClose={() => {\n            }}>\n                <AppBar className={`fixed-top`}>\n                    <Toolbar component={Link} to={'/search'}>\n                        {window.history ? <IconButton onClick={() => {\n                            setOpen(false);\n                        }} component={Link} to={'/home'} color=\"primary.light\" visibility={false}>\n                            <ArrowBack/>\n                        </IconButton> : <></>}\n                        <InputBase\n                            autoCapitalize={true}\n                            autoComplete={true}\n                            value={props.query}\n                            className={`${classes.input} text-light`}\n                            placeholder=\"Search Kabeers Music\"\n                            inputProps={{'aria-label': 'Search Kabeers Music'}}\n                        />\n                        <SearchOutlined visibility={false}/>\n                    </Toolbar>\n                </AppBar>\n                <div className={\"container px-3\"} style={{marginTop: \"4rem\"}}>\n                    <div className={\"row\"}>\n                        {listItems}\n                    </div>\n                </div>\n            </Dialog>\n        </div>\n    )\n};\n\nSearchResultComponent.propTypes = {};\n\nSearchResultComponent.defaultProps = {};\n\nconst mapStateToProps = state => ({\n    query: state.q,\n});\nexport default connect(mapStateToProps)(SearchResultComponent);\n","import React, {lazy, Suspense} from 'react';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst LazyHistory = lazy(() => import('./History'));\n\n\nconst History = props => (\n    <Suspense fallback={<CircularProgress/>}>\n        <LazyHistory {...props} />\n    </Suspense>\n);\n\nexport default History;\n","import React, {useEffect} from 'react';\nimport './App.css';\nimport HomeComponent from \"./components/home/home.lazy\";\nimport {BrowserRouter as Router, Redirect, Route} from \"react-router-dom\";\nimport CustomBottomNavigation from \"./components/CustomBottomNavigation/CustomBottomNavigation.lazy\";\nimport Downloads from \"./components/Downloads/Downloads.lazy\";\nimport Player from \"./components/Player/Player.lazy\";\nimport {createMuiTheme, MuiThemeProvider} from \"@material-ui/core/styles\";\nimport CustomAppBar from \"./components/CustomAppBar/CustomAppBar.lazy\";\nimport SearchComponent from \"./components/SearchComponent/SearchComponent.lazy\";\nimport DrawerComponent from \"./components/Drawer/Drawer.lazy\";\nimport {Provider} from \"react-redux\";\nimport store from \"./Redux/store/store\";\nimport {setCurrentSongState} from \"./Redux/actions/actions\";\nimport MiniPlayer from \"./components/Player/MiniPlayer\";\nimport SearchResultComponent from \"./components/SearchComponent/SearchResultComponent\";\nimport HistoryComponent from \"./components/History/History.lazy\";\nimport {SnackbarProvider} from \"notistack\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\n//const {useRef} = require(\"react\");\n\n\nfunction App() {\n    const audio = new Audio('');\n    const [darkState, setDarkState] = React.useState(false);\n    const [Player__, SetPlayer] = React.useState(true);\n    const palletType = darkState ? \"dark\" : \"light\";\n    const colors = {\n        primary: {\n            contrastText: darkState ? \"#757575\" : \"#FFFFFF\",\n            main: \"#68C398\",\n            light: darkState ? \"#757575\" : \"#FFFFFF\",\n            dark: darkState ? \"#303030\" : \"#FFFFFF\",\n            miniPlayer: {\n                main: darkState ? \"#303030\" : \"#FEFEFE\",\n                borderTop: darkState ? \"#507262\" : \"#3C3F41\",\n                text: darkState ? \"#FFFFFF\" : \"#2B2B2B\",\n            },\n            player: {\n                slider: {\n                    rail: '#FFF',\n                    thumb: '#FFF',\n                    thumbColorPrimary: '#FFF'\n                },\n                invertButtons:{\n                    main: \"#68C398\",\n                    invert: \"#FFFFFF\"\n                }\n            }\n        },\n        secondary: {\n            main: \"#68C398\",\n            light: darkState ? \"#757575\" : \"#FFFFFF\",\n            dark: darkState ? \"#303030\" : \"#FFFFFF\"\n        },\n        background: {},\n    };\n    const darkTheme = createMuiTheme({\n        palette: {\n            type: \"light\",\n            ...colors,\n            slider: {\n                trackColor: \"yellow\",\n                selectionColor: \"red\"\n            }\n        }\n    });\n    const handleThemeChange = () => {\n        setDarkState(!darkState);\n    };\n\n    async function changeStates(state) {\n        try {\n            audio.pause();\n            audio.src = '';\n            state.list &&\n            state.index &&\n            state.thumbnail &&\n            state.video &&\n            state.uri ? state.hidden = false : state.hidden = true;\n            audio.src = state.uri;\n            console.log(state.uri);\n            store.dispatch(setCurrentSongState(audio, state.video, {\n                Dialog: true,\n                MiniPlayer: false\n            }, () => {\n            }, {\n                list: state.list,\n                index: state.index\n            }));\n            SetPlayer(true);\n            SetPlayer(false);\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    async function componentDidMount() {\n        return true;\n    }\n\n    useEffect(() => {\n        /*\n        const currentSong = store.getState().currentSong;\n        const videoElement = currentSong.videoElement;\n        if (videoElement) {\n            let videoID = '';\n            if (typeof videoElement.id === 'object') videoID = videoElement.id.videoId;\n            if (typeof videoElement.id === 'string') videoID = videoElement.id;\n            console.log('VideoID:', videoID);\n            getSong(videoID).then(value => {\n                if (value) {\n                    try {\n                        setTimeout(function () {\n                            changeStates({\n                                uri: value,\n                                thumbnail: videoElement.snippet.thumbnails.high.url,\n                                video: videoElement,\n                                list: currentSong.playList.list,\n                                index: currentSong.playList.index\n                            });\n                        }, 100);\n                    } catch (e) {\n                        console.log(e);\n                    }\n                }\n            });\n        }*/\n\n    }, []);\n    return (\n        <Provider store={store}>\n            <MuiThemeProvider theme={darkTheme}>\n                <Router>\n                    <SnackbarProvider maxSnack={1}>\n                        <CssBaseline/>\n                        <div className=\"App\">\n                            <DrawerComponent>\n                                <audio id={'MainAudio'} src={''} preload={'auto'}/>\n                                <CustomAppBar/>\n                                <Player hidden={Player__} changes={changeStates}/>\n                                <Route exact={true} path={'/home'}\n                                       render={() => <HomeComponent appState={changeStates}/>}/>\n                                <Route exact={true} path={'/downloads'}\n                                       render={() => <Downloads appState={changeStates}/>}/>\n                                <Route exact={true} path={'/search'} component={SearchComponent}/>\n                                <Route exact={true} path={'/history'} component={HistoryComponent}/>\n                                <Route exact={true} path={'*'} render={() => {\n                                    return <Redirect to={'/home'}/>\n                                }}/>\n                                <Route exact={true} path={'/search/results'} render={() => {\n                                    return <SearchResultComponent appState={changeStates}/>\n                                }}/>\n                                <CustomBottomNavigation/>\n                                <MiniPlayer hidden={Player__}/>\n                            </DrawerComponent>\n                        </div>\n                    </SnackbarProvider>\n                </Router>\n            </MuiThemeProvider>\n        </Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n              'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                    'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n\n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n\n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'},\n  })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n            response.status === 404 ||\n            (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n            'No internet connection found. App is running in offline mode.'\n        );\n      });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import {CHANGE_DRAWER, CURRENT_SONG, SEARCH_QUERY_PARAM} from '../actions/actions';\r\n\r\nconst initialState = {\r\n    currentSong: {\r\n        audioElement: new Audio(''),\r\n        videoElement: {},\r\n        playList: {index: 0, list: []},\r\n        reOpenDialog: () => {\r\n        }\r\n    },\r\n    drawer: false,\r\n    q: '',\r\n\r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case CHANGE_DRAWER:\r\n            return {\r\n                currentSong: state.currentSong,\r\n                drawer: action.drawer,\r\n            };\r\n        case CURRENT_SONG:\r\n            return {\r\n                currentSong: action.currentSong,\r\n                drawer: state.drawer\r\n            };\r\n        case SEARCH_QUERY_PARAM:\r\n            return {\r\n                ...state,\r\n                q: action.q,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default rootReducer;\r\n","export default class StateLoader {\r\n\r\n    loadState() {\r\n        try {\r\n            let serializedState = localStorage.getItem(\"KabeersMusic:state\");\r\n\r\n            if (serializedState === null) {\r\n                return this.initializeState();\r\n            }\r\n\r\n            return JSON.parse(serializedState);\r\n        } catch (err) {\r\n            return this.initializeState();\r\n        }\r\n    }\r\n\r\n    saveState(state) {\r\n        try {\r\n            let serializedState = JSON.stringify(state);\r\n            localStorage.setItem(\"KabeersMusic:state\", serializedState);\r\n\r\n        } catch (err) {\r\n        }\r\n    }\r\n\r\n    initializeState() {\r\n        return {\r\n            currentSong: {\r\n                audioElement: new Audio(''),\r\n                videoElement: {},\r\n                playList: {index: 0, list: []},\r\n                reOpenDialog() {\r\n                }\r\n            },\r\n            drawer: false,\r\n            q: '',\r\n        }\r\n    };\r\n}\r\n","import {applyMiddleware, compose, createStore} from 'redux';\r\nimport rootReducer from '../reducers/rootReducers';\r\nimport thunk from \"redux-thunk\";\r\nimport StateLoader from \"./state.loader\"\r\n\r\nconst initialState = {\r\n    currentSong: {\r\n        audioElement: new Audio(''),\r\n        videoElement: {},\r\n        playList: {index: 0, list: []},\r\n        reOpenDialog: () => {\r\n        }\r\n    },\r\n    drawer: false,\r\n    q: '',\r\n};\r\n/*\r\nconst stateLoader = new StateLoader();\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n    rootReducer,\r\n    stateLoader.loadState(),\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__\r\n            ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n            : f => f\r\n    ));\r\nexport default store;\r\nstore.subscribe(() => {\r\n    stateLoader.saveState(store.getState());\r\n});\r\n*/\r\nconst stateLoader = new StateLoader();\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__\r\n            ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n            : f => f\r\n    ));\r\nexport default store;\r\n","export const CHANGE_DRAWER = 'CHANGE_DRAWER';\r\nexport const CURRENT_SONG = 'CURRENT_SONG';\r\nexport const SEARCH_QUERY_PARAM = 'SEARCH_QUERY_PARAM';\r\n\r\n\r\nexport function setDrawerState(state) {\r\n    return {type: CHANGE_DRAWER, drawer: state};\r\n}\r\n\r\nexport function setCurrentSongState(audioElement, videoElement, componentStates, reOpenDialog, playList) {\r\n    return {\r\n        type: CURRENT_SONG,\r\n        currentSong: {\r\n            audioElement: audioElement,\r\n            videoElement: videoElement,\r\n            componentState: componentStates,\r\n            reOpenDialog: reOpenDialog,\r\n            playList: {...playList},\r\n        }\r\n    }\r\n}\r\n\r\nexport function setQueryParams(queryString) {\r\n    return {\r\n        type: SEARCH_QUERY_PARAM,\r\n        q: queryString\r\n    }\r\n}\r\n\r\n/*\r\nComponentState = {\r\n    MiniPlayer: true,\r\n    Dialog: false\r\n}\r\n */\r\n","const hostName = `${window.location.protocol}//${window.location.host}`;\r\n//const hostName = `${window.location.protocol}//${window.location.hostname}:5000`;\r\n\r\nconst endPoints = {\r\n    mostPopular: key => `https://www.googleapis.com/youtube/v3/videos?part=snippet&videoCategoryId=10&type=video&key=${key}&chart=mostPopular`,\r\n    mostPopularFake: key => `https://cdn.jsdelivr.net/gh/kabeer11000/sample-response/yt-api/yt.json`,\r\n    getVideo: (key, id) => `https://www.googleapis.com/youtube/v3/videos?part=snippet&id=${id}&key=${key}`,\r\n    getVideoFake: (key, id) => `https://cdn.jsdelivr.net/gh/kabeer11000/sample-response@master/yt-api/video-.json`,\r\n    getProxyfiedURI: (id) => `${hostName}/api/song?id=${id}`,\r\n    getSuggestion: (q) => `https://suggestqueries.google.com/complete/search?`,\r\n    getSuggestionFake: (q) => `https://cors-anywhere.herokuapp.com/http://clients1.google.com/complete/search?hl=en&output=toolbar&q=${q}`,\r\n    searchYoutube: (key, q, maxResults = 15) => `https://www.googleapis.com/youtube/v3/search?part=snippet&videoCategoryId=10&type=video&key=${key}&q=${q}&maxResults=${maxResults}`,\r\n    searchYoutubeFake: (key, q) => `https://cdn.jsdelivr.net/gh/kabeer11000/sample-response/yt-api/search-result.json`,\r\n    proxyURI: (url) => `${hostName}/proxy/${url}`\r\n};\r\nmodule.exports = endPoints;\r\n","import endPoints from \"../api/endpoints/endpoints\";\r\n\r\nexport function fetchProxiedBlob(url) {\r\n    const URL = url;\r\n    return new Promise(function (resolve, reject) {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open(\"GET\", endPoints.proxyURI(URL));\r\n        xhr.responseType = \"blob\";\r\n        xhr.onload = function () {\r\n            var status = xhr.status;\r\n            if (status >= 200 && status < 300) {\r\n                resolve(xhr.response);\r\n            } else {\r\n                reject({\r\n                    status: status,\r\n                    statusText: xhr.statusText\r\n                });\r\n            }\r\n        };\r\n        xhr.send();\r\n        setTimeout(() => {\r\n            xhr.abort();\r\n            xhr.open(\"GET\", endPoints.proxyURI(URL));\r\n\r\n            xhr.send();\r\n        }, 1000);\r\n    });\r\n}\r\n","import Dexie from \"dexie\";\r\nimport \"dexie-observable\";\r\nimport {fetchProxiedBlob} from \"./getBlob\";\r\nimport endPoints from \"../api/endpoints/endpoints\";\r\n\r\nconst db_version = 10;\r\nfunction uniqid(a = \"\", b = false) {\r\n    const c = Date.now() / 1000;\r\n    let d = c.toString(16).split(\".\").join(\"\");\r\n    while (d.length < 14) d += \"0\";\r\n    let e = \"\";\r\n    if (b) {\r\n        e = \".\";\r\n        e += Math.round(Math.random() * 100000000);\r\n    }\r\n    return a + d + e;\r\n}\r\nexport const db = new Dexie(\"KabeersMusic_Songs\");\r\ndb.version(db_version).stores({\r\n    songs:\r\n        \"id, &videoId, valid, time, rating, blob, state, thumbnail\"\r\n});\r\nconst historydb = new Dexie('KabeersMusic_History');\r\nhistorydb.version(db_version).stores({\r\n    songs:\r\n        \"id, time, rating, thumbnail, channelTitle, title, tags\"\r\n});\r\n\r\nexport async function downloadSong(data = {videoId: null, rating: 0, title: '', channelTitle: '', tags: ''}) {\r\n    try {\r\n        console.log('Download Started');\r\n        const thumbURL = `https://i.ytimg.com/vi/${data.videoId}/hqdefault.jpg`;\r\n        const url = await fetch(endPoints.getProxyfiedURI(data.videoId)).then(value => value.json());\r\n        const [thumbnailBlob, songBlob] = await Promise.all([\r\n            fetchProxiedBlob(thumbURL),\r\n            fetchProxiedBlob(url)\r\n        ]);\r\n        db.songs.put({\r\n            id: data.videoId,\r\n            state: \"downloaded\",\r\n            thumbnail: thumbnailBlob,\r\n            blob: songBlob,\r\n            valid: true,\r\n            time: Date.now(),\r\n            videoId: data.videoId,\r\n            rating: data.rating,\r\n            tags: data.tags || [],\r\n            title: data.title,\r\n            channelTitle: data.channelTitle,\r\n            videoElement: data.videoElement\r\n        }).then((v) => {\r\n            console.log(v);\r\n        });\r\n        return true;\r\n\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\nexport async function getBlob(key) {\r\n    return await db.songs.get(key);\r\n}\r\n\r\nexport async function getSong(id) {\r\n    return fetch(endPoints.getProxyfiedURI(id)).then(value => value.json()).catch(err => err);\r\n}\r\nexport async function getSongFromStorage(id) {\r\n    const\r\n        allSongs = await db.songs.toArray();\r\n\r\n    if (allSongs.some(value => value.id === id)) {\r\n        return allSongs.find(value => value.videoId === id);\r\n    } else {\r\n        return fetch(endPoints.getProxyfiedURI(id)).then(value => value.json()).catch(err => err);\r\n    }\r\n}\r\n\r\nexport async function getAllDownloadedSongs() {\r\n    return db.songs.toArray();\r\n}\r\nconsole.log('%20 SongJS Loaded');\r\n//downloadSong({rating: 0, videoId:'iYKXdt0LRs8'});\r\n\r\n\r\n/*\r\n//\r\n// Define your database\r\n//\r\nvar db = new Dexie(\"friend_database\");\r\ndb.version(1).stores({\r\n    songs:\r\n        \"&videoId, valid, time, rating, blob, state, thumbnail\"\r\n});\r\n\r\n//\r\n// Put some data into it\r\n//\r\ndb.songs.put({videoId: \"Porno\", time: Date.now(), rating:0, valid:1, blob:new Blob(), thumbnail:'123'}).then (function(){\r\n    //\r\n    // Then when data is stored, read from it\r\n    //\r\n    return db.songs.get('Porno');\r\n}).then(function (friend) {\r\n    //\r\n    // Display the result\r\n    //\r\n    alert (JSON.stringify(friend));\r\n}).catch(function(error) {\r\n    //\r\n    // Finally don't forget to catch any error\r\n    // that could have happened anywhere in the\r\n    // code blocks above.\r\n    //\r\n    alert (\"Ooops: \" + error);\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        const thumbURL = `https://i.ytimg.com/vi/${data.videoId}/hqdefault.jpg`;\r\n        const url = await fetch(`http://localhost:9000/song?id=${data.videoId}`).then(value => value.json());\r\n        const [thumbnailBlob, songBlob] = await Promise.all([\r\n            fetchProxiedBlob(thumbURL),\r\n            fetchProxiedBlob(url)\r\n        ]);\r\n        db.songs.where('videoId').equals(data.videoId).modify({\r\n            state: \"PORN\",\r\n            thumbnail: 'thumbnailBlob',\r\n            blob: 'songBlob'\r\n        }).then((v)=>{\r\n            console.log(v);\r\n        });\r\n        return true;\r\n\r\n*/\r\nexport async function isOfflineAvailable(videoId) {\r\n    let songs = await db.songs.toArray();\r\n    return songs && songs.some(song => song.id === videoId);\r\n}\r\n\r\n\r\nexport async function saveToHistory(object) {\r\n    historydb.songs.put({\r\n        id: uniqid() + uniqid(),\r\n        title: object.title,\r\n        channelTitle: object.ChannelTitle,\r\n        tags: object.tags,\r\n        thumbnail: object.thumbnail,\r\n        time: Date.now(),\r\n        rating: object.rating,\r\n    }).then((v) => {\r\n        console.log(v);\r\n    });\r\n}\r\n\r\nexport async function getHistory() {\r\n    return historydb.songs.toArray();\r\n}\r\n"],"sourceRoot":""}