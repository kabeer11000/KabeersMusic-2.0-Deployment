{"version":3,"sources":["../node_modules/@material-ui/icons/esm/utils/createSvgIcon.js","../node_modules/@material-ui/core/esm/Typography/Typography.js","../node_modules/@material-ui/icons/esm/Pause.js","../node_modules/@material-ui/icons/esm/PlayCircleOutline.js","../node_modules/@material-ui/icons/esm/Close.js","components/Player/CustomMiniPlayerSlider.js","components/Player/MiniPlayer.js"],"names":["__webpack_require__","d","__webpack_exports__","createSvgIcon","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","_material_ui_core_SvgIcon__WEBPACK_IMPORTED_MODULE_2__","path","displayName","Component","a","memo","forwardRef","props","ref","createElement","Object","muiName","_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","clsx__WEBPACK_IMPORTED_MODULE_4__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__","_utils_capitalize__WEBPACK_IMPORTED_MODULE_6__","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","_props$align","align","classes","className","_props$color","color","component","_props$display","display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","variant","_props$variantMapping","variantMapping","other","root","concat","theme","margin","typography","caption","button","overline","srOnly","position","height","width","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","palette","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock","name","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","_utils_createSvgIcon__WEBPACK_IMPORTED_MODULE_1__","Close","react_default","connect","state","componentState","currentSong","audioElement","MiniPlayer","Fragment","_React$useState","React","useState","currentTime","_React$useState2","slicedToArray","scrubbing","setScrubbing","handleScrubbing","_x","_handleScrubbing","apply","this","arguments","asyncToGenerator","regenerator_default","mark","_callee2","v","wrap","_context2","prev","next","isFinite","store","dispatch","setCurrentSongState","getState","videoElement","reOpenDialog","playList","stop","useEffect","setInterval","paused","Slider","defaultValue","value","min","max","duration","onChange","_ref","_callee","x","_context","abrupt","_x2","_x3","hidden","ComponentStates","IconButton","onClick","pauseAudio","Pause","setButton","pause","playAudio","PlayCircleOutline","play","document","addEventListener","e","Dialog","dialog","Grow","in","AppBar","style","top","bottom","elevation","src","snippet","thumbnails","high","url","maxWidth","maxHeight","alt","title","Audio","Player_CustomMiniPlayerSlider"],"mappings":"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","file":"static/js/22.d1e0aeda.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nexport default function createSvgIcon(path, displayName) {\n  var Component = React.memo(React.forwardRef(function (props, ref) {\n    return React.createElement(SvgIcon, _extends({\n      ref: ref\n    }, props), path);\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return Component;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M6 19h4V5H6v14zm8-14v14h4V5h-4z\"\n}), 'Pause');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M10 16.5l6-4.5-6-4.5v9zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'PlayCircleOutline');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import React, {useEffect} from \"react\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport store from \"../../Redux/store/store\";\r\nimport {setCurrentSongState} from \"../../Redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst CustomMiniPlayerSlider = (props) => {\r\n    if (!props.componentState.MiniPlayer) {\r\n        return <></>;\r\n    }\r\n    const [scrubbing, setScrubbing] = React.useState(props.audioElement.currentTime);\r\n    useEffect(() => {\r\n        if (props.componentState.MiniPlayer) {\r\n            setInterval(() => !props.audioElement.paused && props.componentState.MiniPlayer ? setScrubbing(props.audioElement.currentTime) : null, 1000);\r\n        }\r\n    }, []);\r\n\r\n    async function handleScrubbing(v) {\r\n        if (isFinite(v)) {\r\n            setScrubbing(v);\r\n            props.audioElement.currentTime = v;\r\n            // Update Redux State\r\n            store.dispatch(setCurrentSongState(\r\n                props.audioElement,\r\n                store.getState().currentSong.videoElement,\r\n                store.getState().currentSong.componentState,\r\n                store.getState().currentSong.reOpenDialog,\r\n                store.getState().currentSong.playList));\r\n        }\r\n    }\r\n\r\n    return (<Slider\r\n        className={'p-0 m-0'}\r\n        defaultValue={0}\r\n        value={scrubbing}\r\n        min={0.0}\r\n        color={'primary'}\r\n        max={props.audioElement.duration}\r\n        onChange={async (v, x) => handleScrubbing(x)}\r\n    />);\r\n};\r\nconst mapStateToProps = state => ({\r\n    componentState: state.currentSong.componentState,\r\n    audioElement: state.currentSong.audioElement,\r\n});\r\nexport default connect(mapStateToProps)(CustomMiniPlayerSlider);\r\n","import {AppBar, Grow, IconButton, Typography} from \"@material-ui/core\";\r\nimport {Close, Pause, PlayCircleOutline} from \"@material-ui/icons\";\r\nimport React, {useEffect} from \"react\";\r\nimport store from \"../../Redux/store/store\";\r\nimport {setCurrentSongState} from \"../../Redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport CustomMiniPlayerSlider from \"./CustomMiniPlayerSlider\";\r\n\r\n\r\nconst MiniPlayer = (props) => {\r\n    if (props.hidden) return <></>;\r\n    const\r\n        ComponentStates = props.componentState,\r\n        audioElement = props.audioElement,\r\n        videoElement = props.videoElement;\r\n    const [button, setButton] = React.useState(<IconButton onClick={pauseAudio}><Pause color={'#fff'}/></IconButton>);\r\n\r\n    async function handleScrubbing(v) {\r\n        if (isFinite(v)) {\r\n            audioElement.currentTime = v;\r\n            // Update Redux State\r\n            store.dispatch(setCurrentSongState(audioElement, videoElement, {...ComponentStates}));\r\n        }\r\n    }\r\n\r\n    function cutCurrentSongState() {\r\n        audioElement.pause();\r\n        store.dispatch(setCurrentSongState(new Audio(''), videoElement, {\r\n            Dialog: false,\r\n            MiniPlayer: false\r\n        }, props.reOpenDialog, props.playList));\r\n        audioElement.src = '#';\r\n    }\r\n\r\n    function pauseAudio() {\r\n        audioElement.pause();\r\n        setButton(<IconButton onClick={playAudio}><PlayCircleOutline color={'#fff'}/></IconButton>);\r\n\r\n    }\r\n\r\n    function playAudio() {\r\n        audioElement.play();\r\n        setButton(<IconButton onClick={pauseAudio}><Pause\r\n            color={'#fff'}/></IconButton>);\r\n    }\r\n\r\n    useEffect(() => {\r\n        // TODO Because you lisened to travis scott\r\n        // Record artist name to database for that user\r\n        // Search Yt for artist name\r\n        // Show Because You Listened to travis scott\r\n\r\n        const Mounted = true;\r\n        if (!Mounted) return null;\r\n        document.addEventListener('swiped-up', function (e) {\r\n            props.reOpenDialog();\r\n            // Update Redux State\r\n            store.dispatch(setCurrentSongState(audioElement, videoElement, {\r\n                Dialog: true,\r\n                MiniPlayer: false\r\n            }, props.reOpenDialog, props.playList));\r\n            if (props.componentState.Dialog) {\r\n                store.getState().currentSong.reOpenDialog();\r\n            }\r\n        });\r\n    });\r\n\r\n    if (!ComponentStates.dialog && ComponentStates.MiniPlayer && audioElement !== null || '' || undefined) {\r\n        return (\r\n            <Grow in={true}>\r\n                <AppBar color={'slideDown primary.miniPlayer.main'} style={{\r\n                    position: 'fixed',\r\n                    top: \"auto\",\r\n                    bottom: '3.5rem',\r\n                    width: '100%',\r\n                }} component={'div'} elevation={1} className={'d-inline-flex KabeersMiniPlayerContainer'}>\r\n                    <div className={'d-inline-flex'}>\r\n                        <div onClick={() => {\r\n                            props.reOpenDialog();\r\n                            // Update Redux State\r\n                            store.dispatch(setCurrentSongState(audioElement, videoElement, {\r\n                            Dialog: true,\r\n                            MiniPlayer: false\r\n                        }, props.reOpenDialog, props.playList));\r\n                        if (props.componentState.Dialog) {\r\n                            store.getState().currentSong.reOpenDialog();\r\n                        }\r\n                    }} className={'d-inline-flex'}>\r\n                        <img src={videoElement.snippet.thumbnails.high.url} style={{\r\n                            width: '4rem',\r\n                            height: '3rem',\r\n                            maxWidth: '5rem!important',\r\n                            maxHeight: '4rem!important'\r\n                        }}\r\n                             alt={'Song Image'} className={'KabeersMiniPlayerImage'}/>\r\n                        <Typography component={'span'} className={'text-truncate p-2 KabeersMiniPlayerText'}\r\n                                    color={'#000'} style={{\r\n                            width: '10em',\r\n                            color: 'primary.miniPlayer.text'\r\n                        }}>{videoElement.snippet.title || 'Untitled'}\r\n                        </Typography>\r\n                        </div>\r\n                        <div className={`float-right ml-auto`}>\r\n                            {button}\r\n                            <IconButton onClick={cutCurrentSongState}><Close/></IconButton>\r\n                        </div>\r\n                    </div>\r\n                    <CustomMiniPlayerSlider/>\r\n                </AppBar>\r\n            </Grow>\r\n        );\r\n    }\r\n    return (<></>)\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    componentState: state.currentSong.componentState,\r\n    audioElement: state.currentSong.audioElement,\r\n    videoElement: state.currentSong.videoElement,\r\n    reOpenDialog: state.currentSong.reOpenDialog,\r\n    playList: state.currentSong.playList\r\n});\r\nexport default connect(mapStateToProps)(MiniPlayer);\r\n"],"sourceRoot":""}