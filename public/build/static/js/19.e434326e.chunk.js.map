{"version":3,"sources":["components/Drawer/Drawer.js"],"names":["useStyles","makeStyles","theme","root","display","drawer","Object","E_Projects_phpstormprojects_music_react_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","breakpoints","up","width","flexShrink","appBar","concat","marginLeft","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","content","transition","transitions","create","easing","sharp","duration","leavingScreen","logoText","paddingRight","logoContainer","alignItems","fontSize","marginBottom","marginTop","logoImage","height","smallAvatar","connect","state","isOpen","pure","props","children","window","classes","useTheme","_React$useState","React","useState","_React$useState2","E_Projects_phpstormprojects_music_react_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","mobileOpen","setMobileOpen","handleDrawerToggle","store","dispatch","setDrawerState","userData","localStorage","getItem","storageIndex","JSON","parse","atob","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_material_ui_core__WEBPACK_IMPORTED_MODULE_5__","className","_material_ui_core__WEBPACK_IMPORTED_MODULE_6__","_material_ui_core_ListItemAvatar__WEBPACK_IMPORTED_MODULE_25__","_material_ui_core_Avatar__WEBPACK_IMPORTED_MODULE_24__","src","account_image","alt","username","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","primary","secondary","email","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","onClick","button","component","Link","to","_material_ui_core__WEBPACK_IMPORTED_MODULE_9__","_material_ui_icons__WEBPACK_IMPORTED_MODULE_13__","_material_ui_icons__WEBPACK_IMPORTED_MODULE_14__","_material_ui_icons__WEBPACK_IMPORTED_MODULE_15__","_material_ui_icons__WEBPACK_IMPORTED_MODULE_16__","_material_ui_icons__WEBPACK_IMPORTED_MODULE_17__","_material_ui_icons__WEBPACK_IMPORTED_MODULE_18__","_material_ui_core__WEBPACK_IMPORTED_MODULE_10__","muted","small","container","undefined","document","body","aria-label","_material_ui_core__WEBPACK_IMPORTED_MODULE_11__","smUp","implementation","_material_ui_core__WEBPACK_IMPORTED_MODULE_12__","variant","anchor","direction","open","onClose","paper","ModalProps","keepMounted","xsDown","Fragment"],"mappings":"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","file":"static/js/19.e434326e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n    Divider,\r\n    Drawer,\r\n    Hidden,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    makeStyles,\r\n    Typography,\r\n    useTheme\r\n} from \"@material-ui/core\";\r\nimport {AccountCircle, Favorite, GetApp, History, Home, Settings} from \"@material-ui/icons\";\r\nimport store from \"../../Redux/store/store\";\r\nimport {setDrawerState} from \"../../Redux/actions/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {storageIndex} from \"../../functions/Helper/storageIndex\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport {pure} from \"recompose\";\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n    },\r\n    drawer: {\r\n        [theme.breakpoints.up(\"xl\")]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n    },\r\n    appBar: {\r\n        [theme.breakpoints.up('xl')]: {\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            marginLeft: drawerWidth,\r\n        },\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    // necessary for content to be below app bar\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    content: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    logoText: {\r\n        paddingRight: theme.spacing(1)\r\n    },\r\n    logoContainer: {\r\n        alignItems: 'baseline',\r\n        fontSize: theme.spacing(2.25),\r\n        marginLeft: theme.spacing(2.5),\r\n        marginBottom: theme.spacing(2),\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    logoImage: {\r\n        height: \"auto\",\r\n        width: theme.spacing(3),\r\n    },\r\n    marginRight: {\r\n        marginLeft: drawerWidth\r\n    },\r\n    smallAvatar: {\r\n        width: theme.spacing(3),\r\n        height: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nfunction DrawerComponent(props) {\r\n\r\n    const {children, window} = props;\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [mobileOpen, setMobileOpen] = React.useState(props.isOpen);\r\n\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!props.isOpen);\r\n        store.dispatch(setDrawerState(!props.isOpen));\r\n    };\r\n    const userData = localStorage.getItem(storageIndex.userData) ? JSON.parse(atob(localStorage.getItem(storageIndex.userData))) : {};\r\n    const drawer = (\r\n        <div>\r\n            <List className={classes.root}>\r\n                <ListItem>\r\n                    <ListItemAvatar>\r\n                        <Avatar src={userData.account_image} alt={userData.username}/>\r\n                    </ListItemAvatar>\r\n                    <ListItemText className={\"text-truncate\"} primary={userData.username} secondary={userData.email}/>\r\n                </ListItem>\r\n            </List>\r\n            <div className={`classes.toolbar`}/>\r\n            <Divider/>\r\n            <List onClick={handleDrawerToggle}>\r\n                <ListItem button component={Link} to={\"/home\"}>\r\n                    <ListItemIcon><Home/></ListItemIcon>\r\n                    <ListItemText primary={\"Home\"}/>\r\n                </ListItem>\r\n\r\n                <ListItem button component={Link} to={\"/downloads\"}>\r\n                    <ListItemIcon><GetApp/></ListItemIcon>\r\n                    <ListItemText primary={\"Downloads\"}/>\r\n                </ListItem>\r\n                <ListItem button component={Link} to={\"/history\"}>\r\n                    <ListItemIcon><History/></ListItemIcon>\r\n                    <ListItemText primary={\"History\"}/>\r\n                </ListItem>\r\n                <ListItem button component={Link} to={\"/liked\"}>\r\n                    <ListItemIcon><Favorite/></ListItemIcon>\r\n                    <ListItemText primary={\"Liked\"}/>\r\n                </ListItem>\r\n            </List>\r\n            <Divider/>\r\n            <ListItem button component={Link} to={'/settings'}>\r\n                <ListItemIcon><Settings/></ListItemIcon>\r\n                <ListItemText primary={'Settings'}/>\r\n            </ListItem>\r\n            <ListItem button>\r\n                <ListItemIcon><AccountCircle/></ListItemIcon>\r\n                <ListItemText primary={'Account'}/>\r\n            </ListItem>\r\n            <Divider/>\r\n            <List>\r\n                <ListItem button>\r\n                    <Typography muted small>\r\n                        <div className={\"text-muted small\"}>&copy; Kabeers Network</div>\r\n                    </Typography>\r\n                </ListItem>\r\n            </List>\r\n\r\n        </div>\r\n    );\r\n\r\n    const container = window !== undefined ? () => window().document.body : undefined;\r\n    return (\r\n        <div>\r\n            <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n                <Hidden smUp implementation=\"css\">\r\n                    <Drawer\r\n                        container={container}\r\n                        variant=\"temporary\"\r\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n                        open={props.isOpen}\r\n                        onClose={handleDrawerToggle}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        ModalProps={{\r\n                            keepMounted: true, // Better open performance on mobile.\r\n                        }}\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n                <Hidden xsDown implementation=\"css\">\r\n                    <Drawer\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        variant=\"persistent\"\r\n                        open={mobileOpen}\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n            </nav>\r\n            <main className={`MainDrawerContainer ${classes.content}`}>\r\n                <React.Fragment>\r\n                    {children}\r\n                </React.Fragment>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\n// ${ !props.isOpen ?  '' : classes.marginRight}\r\n// style={{marginLeft: props.isOpen ? drawerWidth : 0}}\r\nDrawerComponent.propTypes = {\r\n    children: PropTypes.element.isRequired,\r\n    /**\r\n     * Injected by the documentation to work in an iframe.\r\n     * You won't need it on your project.\r\n     */\r\n    window: PropTypes.func,\r\n};\r\nconst mapStateToProps = state => ({isOpen: state.drawer});\r\n//export default DrawerComponent;\r\n\r\nexport default connect(mapStateToProps)(pure(DrawerComponent));\r\n"],"sourceRoot":""}