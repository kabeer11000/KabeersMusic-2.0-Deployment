{"version":3,"sources":["../node_modules/@material-ui/core/esm/SvgIcon/index.js","../node_modules/@material-ui/core/esm/Toolbar/Toolbar.js","../node_modules/@material-ui/core/esm/ListSubheader/ListSubheader.js","../node_modules/@material-ui/icons/utils/createSvgIcon.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/AccordionDetails/AccordionDetails.js","../node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js","../node_modules/@material-ui/core/esm/Switch/Switch.js","../node_modules/@material-ui/core/esm/SwipeableDrawer/SwipeArea.js","../node_modules/@material-ui/core/esm/SwipeableDrawer/SwipeableDrawer.js","../node_modules/@material-ui/icons/esm/Cast.js"],"names":["__webpack_require__","r","__webpack_exports__","_SvgIcon__WEBPACK_IMPORTED_MODULE_0__","d","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_3__","clsx__WEBPACK_IMPORTED_MODULE_5__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_6__","Toolbar","props","ref","classes","className","_props$component","component","Component","_props$disableGutters","disableGutters","_props$variant","variant","other","Object","root","gutters","theme","position","display","alignItems","paddingLeft","spacing","paddingRight","breakpoints","up","regular","mixins","toolbar","dense","minHeight","name","react__WEBPACK_IMPORTED_MODULE_2__","clsx__WEBPACK_IMPORTED_MODULE_4__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__","_utils_capitalize__WEBPACK_IMPORTED_MODULE_6__","ListSubheader","_props$color","color","_props$disableSticky","disableSticky","_props$inset","inset","concat","sticky","boxSizing","lineHeight","listStyle","palette","text","secondary","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","colorPrimary","primary","main","colorInherit","top","zIndex","backgroundColor","_interopRequireDefault","defineProperty","exports","value","default","path","displayName","_react","memo","forwardRef","createElement","_SvgIcon","_extends2","muiName","_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2__","_utils_useControlled__WEBPACK_IMPORTED_MODULE_6__","_FormControl_useFormControl__WEBPACK_IMPORTED_MODULE_7__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_8__","_IconButton__WEBPACK_IMPORTED_MODULE_9__","SwitchBase","autoFocus","checkedProp","checked","checkedIcon","defaultChecked","disabledProp","disabled","icon","id","inputProps","inputRef","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","_useControlled","controlled","Boolean","state","_useControlled2","setCheckedState","muiFormControl","hasLabelFor","role","undefined","event","input","newChecked","target","padding","cursor","opacity","width","height","left","margin","AccordionDetails","_FormControl__WEBPACK_IMPORTED_MODULE_5__","_Typography__WEBPACK_IMPORTED_MODULE_7__","_utils_capitalize__WEBPACK_IMPORTED_MODULE_8__","FormControlLabel","control","label","_props$labelPlacement","labelPlacement","controlProps","forEach","key","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","&$disabled","labelPlacementStart","flexDirection","labelPlacementTop","labelPlacementBottom","_styles_colorManipulator__WEBPACK_IMPORTED_MODULE_6__","_utils_capitalize__WEBPACK_IMPORTED_MODULE_7__","_internal_SwitchBase__WEBPACK_IMPORTED_MODULE_8__","Switch","_props$edge","edge","_props$size","size","thumb","start","edgeStart","end","edgeEnd","switchBase","track","overflow","flexShrink","@media print","colorAdjust","grey","transition","transitions","create","duration","shortest","&$checked","transform","&$checked + $track","&$disabled + $track","&:hover","action","hoverOpacity","@media (hover: none)","common","black","white","colorSecondary","sizeSmall","& $thumb","& $switchBase","boxShadow","shadows","borderRadius","SwipeArea_SwipeArea","react","anchor","objectWithoutProperties","esm_extends","clsx_m","capitalize","style","Drawer","SwipeableDrawer_SwipeArea","withStyles","bottom","drawer","anchorLeft","right","anchorRight","anchorTop","anchorBottom","nodeThatClaimedTheSwipe","calculateCurrentX","touches","document","body","offsetWidth","pageX","calculateCurrentY","window","innerHeight","clientY","getMaxTranslate","horizontalSwipe","paperInstance","clientWidth","clientHeight","getTranslate","currentTranslate","startLocation","open","maxTranslate","Math","min","max","iOS","navigator","test","userAgent","transitionDurationDefault","enter","enteringScreen","exit","leavingScreen","useEnhancedEffect","SwipeableDrawer_SwipeableDrawer","inProps","useTheme","getThemeProps","_props$anchor","_props$disableBackdro","disableBackdropTransition","_props$disableDiscove","disableDiscovery","_props$disableSwipeTo","disableSwipeToOpen","hideBackdrop","_props$hysteresis","hysteresis","_props$minFlingVeloci","minFlingVelocity","_props$ModalProps","ModalProps","BackdropProps","ModalPropsProp","onClose","onOpen","_props$PaperProps","PaperProps","SwipeAreaProps","_props$swipeAreaWidth","swipeAreaWidth","_props$transitionDura","transitionDuration","_React$useState","maybeSwiping","setMaybeSwiping","swipeInstance","isSwiping","swipeAreaRef","backdropRef","paperRef","touchDetected","calculatedDurationRef","current","setPosition","translate","options","arguments","length","_options$mode","mode","_options$changeTransi","changeTransition","anchorRtl","rtlTranslateMultiplier","indexOf","drawerStyle","webkitTransform","utils","timeout","webkitTransition","backdropStyle","handleBodyTouchEnd","useEventCallback","horizontal","changedTouches","startX","startY","translateRatio","abs","velocity","handleBodyTouchMove","currentX","currentY","contains","nativeHandler","_ref","domTreeShapes","axisProperties","x","y","some","shape","goingForward","axis","scrollPosition","areNotAtStart","areNotAtEnd","findNativeHandler","element","rootNode","getComputedStyle","getPropertyValue","scrollWidth","scrollHeight","push","parentElement","getDomTreeShapes","dx","dy","cancelable","preventDefault","definitelySwiping","paperHit","lastTranslate","lastTime","performance","now","handleBodyTouchStart","defaultPrevented","muiHandled","doc","ownerDocument","addEventListener","passive","removeEventListener","handleBackdropRef","instance","react_dom","pointerEvents","NoSsr","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_utils_createSvgIcon__WEBPACK_IMPORTED_MODULE_1__","a"],"mappings":"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","file":"static/js/3.49b7ffc4.chunk.js","sourcesContent":["export { default } from './SvgIcon';","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: _defineProperty({\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `variant=\"regular\"`. */\n    regular: theme.mixins.toolbar,\n\n    /* Styles applied to the root element if `variant=\"dense\"`. */\n    dense: {\n      minHeight: 48\n    }\n  };\n};\nvar Toolbar = /*#__PURE__*/React.forwardRef(function Toolbar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'regular' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes[variant], className, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Toolbar.propTypes = {\n  /**\n   * Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, disables gutter padding.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['regular', 'dense'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiToolbar'\n})(Toolbar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      boxSizing: 'border-box',\n      lineHeight: '48px',\n      listStyle: 'none',\n      color: theme.palette.text.secondary,\n      fontFamily: theme.typography.fontFamily,\n      fontWeight: theme.typography.fontWeightMedium,\n      fontSize: theme.typography.pxToRem(14)\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n    gutters: {\n      paddingLeft: 16,\n      paddingRight: 16\n    },\n\n    /* Styles applied to the root element if `inset={true}`. */\n    inset: {\n      paddingLeft: 72\n    },\n\n    /* Styles applied to the root element if `disableSticky={false}`. */\n    sticky: {\n      position: 'sticky',\n      top: 0,\n      zIndex: 1,\n      backgroundColor: 'inherit'\n    }\n  };\n};\nvar ListSubheader = /*#__PURE__*/React.forwardRef(function ListSubheader(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$disableSticky = props.disableSticky,\n      disableSticky = _props$disableSticky === void 0 ? false : _props$disableSticky,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"disableGutters\", \"disableSticky\", \"inset\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, color !== 'default' && classes[\"color\".concat(capitalize(color))], inset && classes.inset, !disableSticky && classes.sticky, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListSubheader.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'inherit']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the List Subheader will not have gutters.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, the List Subheader will not stick to the top during scroll.\n   */\n  disableSticky: PropTypes.bool,\n\n  /**\n   * If `true`, the List Subheader will be indented.\n   */\n  inset: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListSubheader'\n})(ListSubheader);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createSvgIcon;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _SvgIcon = _interopRequireDefault(require(\"@material-ui/core/SvgIcon\"));\n\nfunction createSvgIcon(path, displayName) {\n  var Component = _react.default.memo(_react.default.forwardRef(function (props, ref) {\n    return _react.default.createElement(_SvgIcon.default, (0, _extends2.default)({\n      ref: ref\n    }, props), path);\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = _SvgIcon.default.muiName;\n  return Component;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      padding: theme.spacing(1, 2, 2)\n    }\n  };\n};\nvar AccordionDetails = /*#__PURE__*/React.forwardRef(function AccordionDetails(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionDetails.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the accordion details.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAccordionDetails'\n})(AccordionDetails);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      className = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), /*#__PURE__*/React.cloneElement(control, controlProps), /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\"; // @inheritedComponent IconButton\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle',\n      // For correct alignment with the text.\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = /*#__PURE__*/React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[\"size\".concat(capitalize(size))])\n  }, /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport { isHorizontal } from '../Drawer/Drawer';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      bottom: 0,\n      zIndex: theme.zIndex.drawer - 1\n    },\n    anchorLeft: {\n      right: 'auto'\n    },\n    anchorRight: {\n      left: 'auto',\n      right: 0\n    },\n    anchorTop: {\n      bottom: 'auto',\n      right: 0\n    },\n    anchorBottom: {\n      top: 'auto',\n      bottom: 0,\n      right: 0\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwipeArea = /*#__PURE__*/React.forwardRef(function SwipeArea(props, ref) {\n  var anchor = props.anchor,\n      classes = props.classes,\n      className = props.className,\n      width = props.width,\n      other = _objectWithoutProperties(props, [\"anchor\", \"classes\", \"className\", \"width\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"anchor\".concat(capitalize(anchor))], className),\n    ref: ref,\n    style: _defineProperty({}, isHorizontal(anchor) ? 'width' : 'height', width)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeArea.propTypes = {\n  /**\n   * Side on which to attach the discovery area.\n   */\n  anchor: PropTypes.oneOf(['left', 'top', 'right', 'bottom']).isRequired,\n\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The width of the left most (or right most) area in pixels where the\n   * drawer can be swiped open from.\n   */\n  width: PropTypes.number.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwipeArea'\n})(SwipeArea);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport { getThemeProps } from '@material-ui/styles';\nimport Drawer, { getAnchor, isHorizontal } from '../Drawer/Drawer';\nimport ownerDocument from '../utils/ownerDocument';\nimport useEventCallback from '../utils/useEventCallback';\nimport { duration } from '../styles/transitions';\nimport useTheme from '../styles/useTheme';\nimport { getTransitionProps } from '../transitions/utils';\nimport NoSsr from '../NoSsr';\nimport SwipeArea from './SwipeArea'; // This value is closed to what browsers are using internally to\n// trigger a native scroll.\n\nvar UNCERTAINTY_THRESHOLD = 3; // px\n// We can only have one node at the time claiming ownership for handling the swipe.\n// Otherwise, the UX would be confusing.\n// That's why we use a singleton here.\n\nvar nodeThatClaimedTheSwipe = null; // Exported for test purposes.\n\nexport function reset() {\n  nodeThatClaimedTheSwipe = null;\n}\n\nfunction calculateCurrentX(anchor, touches) {\n  return anchor === 'right' ? document.body.offsetWidth - touches[0].pageX : touches[0].pageX;\n}\n\nfunction calculateCurrentY(anchor, touches) {\n  return anchor === 'bottom' ? window.innerHeight - touches[0].clientY : touches[0].clientY;\n}\n\nfunction getMaxTranslate(horizontalSwipe, paperInstance) {\n  return horizontalSwipe ? paperInstance.clientWidth : paperInstance.clientHeight;\n}\n\nfunction getTranslate(currentTranslate, startLocation, open, maxTranslate) {\n  return Math.min(Math.max(open ? startLocation - currentTranslate : maxTranslate + startLocation - currentTranslate, 0), maxTranslate);\n}\n\nfunction getDomTreeShapes(element, rootNode) {\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L129\n  var domTreeShapes = [];\n\n  while (element && element !== rootNode) {\n    var style = window.getComputedStyle(element);\n\n    if ( // Ignore the scroll children if the element is absolute positioned.\n    style.getPropertyValue('position') === 'absolute' || // Ignore the scroll children if the element has an overflowX hidden\n    style.getPropertyValue('overflow-x') === 'hidden') {\n      domTreeShapes = [];\n    } else if (element.clientWidth > 0 && element.scrollWidth > element.clientWidth || element.clientHeight > 0 && element.scrollHeight > element.clientHeight) {\n      // Ignore the nodes that have no width.\n      // Keep elements with a scroll\n      domTreeShapes.push(element);\n    }\n\n    element = element.parentElement;\n  }\n\n  return domTreeShapes;\n}\n\nfunction findNativeHandler(_ref) {\n  var domTreeShapes = _ref.domTreeShapes,\n      start = _ref.start,\n      current = _ref.current,\n      anchor = _ref.anchor; // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L175\n\n  var axisProperties = {\n    scrollPosition: {\n      x: 'scrollLeft',\n      y: 'scrollTop'\n    },\n    scrollLength: {\n      x: 'scrollWidth',\n      y: 'scrollHeight'\n    },\n    clientLength: {\n      x: 'clientWidth',\n      y: 'clientHeight'\n    }\n  };\n  return domTreeShapes.some(function (shape) {\n    // Determine if we are going backward or forward.\n    var goingForward = current >= start;\n\n    if (anchor === 'top' || anchor === 'left') {\n      goingForward = !goingForward;\n    }\n\n    var axis = anchor === 'left' || anchor === 'right' ? 'x' : 'y';\n    var scrollPosition = shape[axisProperties.scrollPosition[axis]];\n    var areNotAtStart = scrollPosition > 0;\n    var areNotAtEnd = scrollPosition + shape[axisProperties.clientLength[axis]] < shape[axisProperties.scrollLength[axis]];\n\n    if (goingForward && areNotAtEnd || !goingForward && areNotAtStart) {\n      return shape;\n    }\n\n    return null;\n  });\n}\n\nvar iOS = typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent);\nvar transitionDurationDefault = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\nvar useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nvar SwipeableDrawer = /*#__PURE__*/React.forwardRef(function SwipeableDrawer(inProps, ref) {\n  var theme = useTheme();\n  var props = getThemeProps({\n    name: 'MuiSwipeableDrawer',\n    props: _extends({}, inProps),\n    theme: theme\n  });\n  var _props$anchor = props.anchor,\n      anchor = _props$anchor === void 0 ? 'left' : _props$anchor,\n      _props$disableBackdro = props.disableBackdropTransition,\n      disableBackdropTransition = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n      _props$disableDiscove = props.disableDiscovery,\n      disableDiscovery = _props$disableDiscove === void 0 ? false : _props$disableDiscove,\n      _props$disableSwipeTo = props.disableSwipeToOpen,\n      disableSwipeToOpen = _props$disableSwipeTo === void 0 ? iOS : _props$disableSwipeTo,\n      hideBackdrop = props.hideBackdrop,\n      _props$hysteresis = props.hysteresis,\n      hysteresis = _props$hysteresis === void 0 ? 0.52 : _props$hysteresis,\n      _props$minFlingVeloci = props.minFlingVelocity,\n      minFlingVelocity = _props$minFlingVeloci === void 0 ? 450 : _props$minFlingVeloci,\n      _props$ModalProps = props.ModalProps;\n  _props$ModalProps = _props$ModalProps === void 0 ? {} : _props$ModalProps;\n\n  var BackdropProps = _props$ModalProps.BackdropProps,\n      ModalPropsProp = _objectWithoutProperties(_props$ModalProps, [\"BackdropProps\"]),\n      onClose = props.onClose,\n      onOpen = props.onOpen,\n      open = props.open,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      SwipeAreaProps = props.SwipeAreaProps,\n      _props$swipeAreaWidth = props.swipeAreaWidth,\n      swipeAreaWidth = _props$swipeAreaWidth === void 0 ? 20 : _props$swipeAreaWidth,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? transitionDurationDefault : _props$transitionDura,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'temporary' : _props$variant,\n      other = _objectWithoutProperties(props, [\"anchor\", \"disableBackdropTransition\", \"disableDiscovery\", \"disableSwipeToOpen\", \"hideBackdrop\", \"hysteresis\", \"minFlingVelocity\", \"ModalProps\", \"onClose\", \"onOpen\", \"open\", \"PaperProps\", \"SwipeAreaProps\", \"swipeAreaWidth\", \"transitionDuration\", \"variant\"]);\n\n  var _React$useState = React.useState(false),\n      maybeSwiping = _React$useState[0],\n      setMaybeSwiping = _React$useState[1];\n\n  var swipeInstance = React.useRef({\n    isSwiping: null\n  });\n  var swipeAreaRef = React.useRef();\n  var backdropRef = React.useRef();\n  var paperRef = React.useRef();\n  var touchDetected = React.useRef(false); // Ref for transition duration based on / to match swipe speed\n\n  var calculatedDurationRef = React.useRef(); // Use a ref so the open value used is always up to date inside useCallback.\n\n  useEnhancedEffect(function () {\n    calculatedDurationRef.current = null;\n  }, [open]);\n  var setPosition = React.useCallback(function (translate) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _options$mode = options.mode,\n        mode = _options$mode === void 0 ? null : _options$mode,\n        _options$changeTransi = options.changeTransition,\n        changeTransition = _options$changeTransi === void 0 ? true : _options$changeTransi;\n    var anchorRtl = getAnchor(theme, anchor);\n    var rtlTranslateMultiplier = ['right', 'bottom'].indexOf(anchorRtl) !== -1 ? 1 : -1;\n    var horizontalSwipe = isHorizontal(anchor);\n    var transform = horizontalSwipe ? \"translate(\".concat(rtlTranslateMultiplier * translate, \"px, 0)\") : \"translate(0, \".concat(rtlTranslateMultiplier * translate, \"px)\");\n    var drawerStyle = paperRef.current.style;\n    drawerStyle.webkitTransform = transform;\n    drawerStyle.transform = transform;\n    var transition = '';\n\n    if (mode) {\n      transition = theme.transitions.create('all', getTransitionProps({\n        timeout: transitionDuration\n      }, {\n        mode: mode\n      }));\n    }\n\n    if (changeTransition) {\n      drawerStyle.webkitTransition = transition;\n      drawerStyle.transition = transition;\n    }\n\n    if (!disableBackdropTransition && !hideBackdrop) {\n      var backdropStyle = backdropRef.current.style;\n      backdropStyle.opacity = 1 - translate / getMaxTranslate(horizontalSwipe, paperRef.current);\n\n      if (changeTransition) {\n        backdropStyle.webkitTransition = transition;\n        backdropStyle.transition = transition;\n      }\n    }\n  }, [anchor, disableBackdropTransition, hideBackdrop, theme, transitionDuration]);\n  var handleBodyTouchEnd = useEventCallback(function (event) {\n    if (!touchDetected.current) {\n      return;\n    }\n\n    nodeThatClaimedTheSwipe = null;\n    touchDetected.current = false;\n    setMaybeSwiping(false); // The swipe wasn't started.\n\n    if (!swipeInstance.current.isSwiping) {\n      swipeInstance.current.isSwiping = null;\n      return;\n    }\n\n    swipeInstance.current.isSwiping = null;\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontal = isHorizontal(anchor);\n    var current;\n\n    if (horizontal) {\n      current = calculateCurrentX(anchorRtl, event.changedTouches);\n    } else {\n      current = calculateCurrentY(anchorRtl, event.changedTouches);\n    }\n\n    var startLocation = horizontal ? swipeInstance.current.startX : swipeInstance.current.startY;\n    var maxTranslate = getMaxTranslate(horizontal, paperRef.current);\n    var currentTranslate = getTranslate(current, startLocation, open, maxTranslate);\n    var translateRatio = currentTranslate / maxTranslate;\n\n    if (Math.abs(swipeInstance.current.velocity) > minFlingVelocity) {\n      // Calculate transition duration to match swipe speed\n      calculatedDurationRef.current = Math.abs((maxTranslate - currentTranslate) / swipeInstance.current.velocity) * 1000;\n    }\n\n    if (open) {\n      if (swipeInstance.current.velocity > minFlingVelocity || translateRatio > hysteresis) {\n        onClose();\n      } else {\n        // Reset the position, the swipe was aborted.\n        setPosition(0, {\n          mode: 'exit'\n        });\n      }\n\n      return;\n    }\n\n    if (swipeInstance.current.velocity < -minFlingVelocity || 1 - translateRatio > hysteresis) {\n      onOpen();\n    } else {\n      // Reset the position, the swipe was aborted.\n      setPosition(getMaxTranslate(horizontal, paperRef.current), {\n        mode: 'enter'\n      });\n    }\n  });\n  var handleBodyTouchMove = useEventCallback(function (event) {\n    // the ref may be null when a parent component updates while swiping\n    if (!paperRef.current || !touchDetected.current) {\n      return;\n    } // We are not supposed to handle this touch move because the swipe was started in a scrollable container in the drawer\n\n\n    if (nodeThatClaimedTheSwipe != null && nodeThatClaimedTheSwipe !== swipeInstance.current) {\n      return;\n    }\n\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontalSwipe = isHorizontal(anchor);\n    var currentX = calculateCurrentX(anchorRtl, event.touches);\n    var currentY = calculateCurrentY(anchorRtl, event.touches);\n\n    if (open && paperRef.current.contains(event.target) && nodeThatClaimedTheSwipe == null) {\n      var domTreeShapes = getDomTreeShapes(event.target, paperRef.current);\n      var nativeHandler = findNativeHandler({\n        domTreeShapes: domTreeShapes,\n        start: horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY,\n        current: horizontalSwipe ? currentX : currentY,\n        anchor: anchor\n      });\n\n      if (nativeHandler) {\n        nodeThatClaimedTheSwipe = nativeHandler;\n        return;\n      }\n\n      nodeThatClaimedTheSwipe = swipeInstance.current;\n    } // We don't know yet.\n\n\n    if (swipeInstance.current.isSwiping == null) {\n      var dx = Math.abs(currentX - swipeInstance.current.startX);\n      var dy = Math.abs(currentY - swipeInstance.current.startY); // We are likely to be swiping, let's prevent the scroll event on iOS.\n\n      if (dx > dy) {\n        if (event.cancelable) {\n          event.preventDefault();\n        }\n      }\n\n      var definitelySwiping = horizontalSwipe ? dx > dy && dx > UNCERTAINTY_THRESHOLD : dy > dx && dy > UNCERTAINTY_THRESHOLD;\n\n      if (definitelySwiping === true || (horizontalSwipe ? dy > UNCERTAINTY_THRESHOLD : dx > UNCERTAINTY_THRESHOLD)) {\n        swipeInstance.current.isSwiping = definitelySwiping;\n\n        if (!definitelySwiping) {\n          handleBodyTouchEnd(event);\n          return;\n        } // Shift the starting point.\n\n\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY; // Compensate for the part of the drawer displayed on touch start.\n\n        if (!disableDiscovery && !open) {\n          if (horizontalSwipe) {\n            swipeInstance.current.startX -= swipeAreaWidth;\n          } else {\n            swipeInstance.current.startY -= swipeAreaWidth;\n          }\n        }\n      }\n    }\n\n    if (!swipeInstance.current.isSwiping) {\n      return;\n    }\n\n    var maxTranslate = getMaxTranslate(horizontalSwipe, paperRef.current);\n    var startLocation = horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY;\n\n    if (open && !swipeInstance.current.paperHit) {\n      startLocation = Math.min(startLocation, maxTranslate);\n    }\n\n    var translate = getTranslate(horizontalSwipe ? currentX : currentY, startLocation, open, maxTranslate);\n\n    if (open) {\n      if (!swipeInstance.current.paperHit) {\n        var paperHit = horizontalSwipe ? currentX < maxTranslate : currentY < maxTranslate;\n\n        if (paperHit) {\n          swipeInstance.current.paperHit = true;\n          swipeInstance.current.startX = currentX;\n          swipeInstance.current.startY = currentY;\n        } else {\n          return;\n        }\n      } else if (translate === 0) {\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY;\n      }\n    }\n\n    if (swipeInstance.current.lastTranslate === null) {\n      swipeInstance.current.lastTranslate = translate;\n      swipeInstance.current.lastTime = performance.now() + 1;\n    }\n\n    var velocity = (translate - swipeInstance.current.lastTranslate) / (performance.now() - swipeInstance.current.lastTime) * 1e3; // Low Pass filter.\n\n    swipeInstance.current.velocity = swipeInstance.current.velocity * 0.4 + velocity * 0.6;\n    swipeInstance.current.lastTranslate = translate;\n    swipeInstance.current.lastTime = performance.now(); // We are swiping, let's prevent the scroll event on iOS.\n\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n\n    setPosition(translate);\n  });\n  var handleBodyTouchStart = useEventCallback(function (event) {\n    // We are not supposed to handle this touch move.\n    // Example of use case: ignore the event if there is a Slider.\n    if (event.defaultPrevented) {\n      return;\n    } // We can only have one node at the time claiming ownership for handling the swipe.\n\n\n    if (event.muiHandled) {\n      return;\n    } // At least one element clogs the drawer interaction zone.\n\n\n    if (open && !backdropRef.current.contains(event.target) && !paperRef.current.contains(event.target)) {\n      return;\n    }\n\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontalSwipe = isHorizontal(anchor);\n    var currentX = calculateCurrentX(anchorRtl, event.touches);\n    var currentY = calculateCurrentY(anchorRtl, event.touches);\n\n    if (!open) {\n      if (disableSwipeToOpen || event.target !== swipeAreaRef.current) {\n        return;\n      }\n\n      if (horizontalSwipe) {\n        if (currentX > swipeAreaWidth) {\n          return;\n        }\n      } else if (currentY > swipeAreaWidth) {\n        return;\n      }\n    }\n\n    event.muiHandled = true;\n    nodeThatClaimedTheSwipe = null;\n    swipeInstance.current.startX = currentX;\n    swipeInstance.current.startY = currentY;\n    setMaybeSwiping(true);\n\n    if (!open && paperRef.current) {\n      // The ref may be null when a parent component updates while swiping.\n      setPosition(getMaxTranslate(horizontalSwipe, paperRef.current) + (disableDiscovery ? 20 : -swipeAreaWidth), {\n        changeTransition: false\n      });\n    }\n\n    swipeInstance.current.velocity = 0;\n    swipeInstance.current.lastTime = null;\n    swipeInstance.current.lastTranslate = null;\n    swipeInstance.current.paperHit = false;\n    touchDetected.current = true;\n  });\n  React.useEffect(function () {\n    if (variant === 'temporary') {\n      var doc = ownerDocument(paperRef.current);\n      doc.addEventListener('touchstart', handleBodyTouchStart);\n      doc.addEventListener('touchmove', handleBodyTouchMove, {\n        passive: false\n      });\n      doc.addEventListener('touchend', handleBodyTouchEnd);\n      return function () {\n        doc.removeEventListener('touchstart', handleBodyTouchStart);\n        doc.removeEventListener('touchmove', handleBodyTouchMove, {\n          passive: false\n        });\n        doc.removeEventListener('touchend', handleBodyTouchEnd);\n      };\n    }\n\n    return undefined;\n  }, [variant, handleBodyTouchStart, handleBodyTouchMove, handleBodyTouchEnd]);\n  React.useEffect(function () {\n    return function () {\n      // We need to release the lock.\n      if (nodeThatClaimedTheSwipe === swipeInstance.current) {\n        nodeThatClaimedTheSwipe = null;\n      }\n    };\n  }, []);\n  React.useEffect(function () {\n    if (!open) {\n      setMaybeSwiping(false);\n    }\n  }, [open]);\n  var handleBackdropRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    backdropRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Drawer, _extends({\n    open: variant === 'temporary' && maybeSwiping ? true : open,\n    variant: variant,\n    ModalProps: _extends({\n      BackdropProps: _extends({}, BackdropProps, {\n        ref: handleBackdropRef\n      })\n    }, ModalPropsProp),\n    PaperProps: _extends({}, PaperProps, {\n      style: _extends({\n        pointerEvents: variant === 'temporary' && !open ? 'none' : ''\n      }, PaperProps.style),\n      ref: paperRef\n    }),\n    anchor: anchor,\n    transitionDuration: calculatedDurationRef.current || transitionDuration,\n    onClose: onClose,\n    ref: ref\n  }, other)), !disableSwipeToOpen && variant === 'temporary' && /*#__PURE__*/React.createElement(NoSsr, null, /*#__PURE__*/React.createElement(SwipeArea, _extends({\n    anchor: anchor,\n    ref: swipeAreaRef,\n    width: swipeAreaWidth\n  }, SwipeAreaProps))));\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeableDrawer.propTypes = {\n  /**\n   * @ignore\n   */\n  anchor: PropTypes.oneOf(['left', 'top', 'right', 'bottom']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Disable the backdrop transition.\n   * This can improve the FPS on low-end devices.\n   */\n  disableBackdropTransition: PropTypes.bool,\n\n  /**\n   * If `true`, touching the screen near the edge of the drawer will not slide in the drawer a bit\n   * to promote accidental discovery of the swipe gesture.\n   */\n  disableDiscovery: PropTypes.bool,\n\n  /**\n   * If `true`, swipe to open is disabled. This is useful in browsers where swiping triggers\n   * navigation actions. Swipe to open is disabled on iOS browsers by default.\n   */\n  disableSwipeToOpen: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Affects how far the drawer must be opened/closed to change his state.\n   * Specified as percent (0-1) of the width of the drawer\n   */\n  hysteresis: PropTypes.number,\n\n  /**\n   * Defines, from which (average) velocity on, the swipe is\n   * defined as complete although hysteresis isn't reached.\n   * Good threshold is between 250 - 1000 px/s\n   */\n  minFlingVelocity: PropTypes.number,\n\n  /**\n   * @ignore\n   */\n  ModalProps: PropTypes.shape({\n    BackdropProps: PropTypes.shape({\n      component: elementTypeAcceptingRef\n    })\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func.isRequired,\n\n  /**\n   * If `true`, the drawer is open.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  PaperProps: PropTypes.shape({\n    component: elementTypeAcceptingRef,\n    style: PropTypes.object\n  }),\n\n  /**\n   * The element is used to intercept the touch events on the edge.\n   */\n  SwipeAreaProps: PropTypes.object,\n\n  /**\n   * The width of the left most (or right most) area in pixels where the\n   * drawer can be swiped open from.\n   */\n  swipeAreaWidth: PropTypes.number,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * @ignore\n   */\n  variant: PropTypes.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nexport default SwipeableDrawer;","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M21 3H3c-1.1 0-2 .9-2 2v3h2V5h18v14h-7v2h7c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM1 18v3h3c0-1.66-1.34-3-3-3zm0-4v2c2.76 0 5 2.24 5 5h2c0-3.87-3.13-7-7-7zm0-4v2c4.97 0 9 4.03 9 9h2c0-6.08-4.93-11-11-11z\"\n}), 'Cast');"],"sourceRoot":""}